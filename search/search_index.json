{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Invenio REST API Client","text":"<p>This is a (work in Progress) Python collection of client-side APIs to simplify the interaction with all the REST APIs that InvenioRDM exposes.</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install invenio-rest-api-client\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/","title":"Module invenio_rest_api_client","text":"<p>A client library for accessing Invenio REST API</p>"},{"location":"api/latest/invenio_rest_api_client/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api</li> <li>invenio_rest_api_client.client</li> <li>invenio_rest_api_client.errors</li> <li>invenio_rest_api_client.models</li> <li>invenio_rest_api_client.types</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/#authenticatedclient","title":"AuthenticatedClient","text":"<pre><code>class AuthenticatedClient(\n    base_url: str,\n    token: str,\n    prefix: str = 'Bearer',\n    auth_header_name: str = 'Authorization',\n    *,\n    raise_on_unexpected_status: bool = False,\n    cookies: dict[str, str] = NOTHING,\n    headers: dict[str, str] = NOTHING,\n    timeout: Optional[httpx.Timeout] = None,\n    verify_ssl: Union[str, bool, ssl.SSLContext] = True,\n    follow_redirects: bool = False,\n    httpx_args: dict[str, typing.Any] = NOTHING\n)\n</code></pre> <p>A Client which has been authenticated for use on secured endpoints</p> <p>The following are accepted as keyword arguments and will be used to construct httpx Clients internally:</p> <pre><code>``base_url``: The base URL for the API, all requests are made to a relative path to this URL\n\n``cookies``: A dictionary of cookies to be sent with every request\n\n``headers``: A dictionary of headers to be sent with every request\n\n``timeout``: The maximum amount of a time a request can take. API functions will raise\nhttpx.TimeoutException if this is exceeded.\n\n``verify_ssl``: Whether or not to verify the SSL certificate of the API server. This should be True in production,\nbut can be set to False for testing purposes.\n\n``follow_redirects``: Whether or not to follow redirects. Default value is False.\n\n``httpx_args``: A dictionary of additional arguments to be passed to the ``httpx.Client`` and ``httpx.AsyncClient`` constructor.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/#attributes","title":"Attributes","text":"Name Type Description Default raise_on_unexpected_status None Whether or not to raise an errors.UnexpectedStatus if the API returns astatus code that was not documented in the source OpenAPI document. Can also be provided as a keywordargument to the constructor. None token None The token to use for authentication None prefix None The prefix to use for the Authorization header None auth_header_name None The name of the Authorization header None"},{"location":"api/latest/invenio_rest_api_client/#instance-variables","title":"Instance variables","text":"<pre><code>auth_header_name\n</code></pre> <pre><code>prefix\n</code></pre> <pre><code>raise_on_unexpected_status\n</code></pre> <pre><code>token\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/#get_async_httpx_client","title":"get_async_httpx_client","text":"<pre><code>def get_async_httpx_client(\n    self\n) -&gt; httpx.AsyncClient\n</code></pre> <p>Get the underlying httpx.AsyncClient, constructing a new one if not previously set</p>"},{"location":"api/latest/invenio_rest_api_client/#get_httpx_client","title":"get_httpx_client","text":"<pre><code>def get_httpx_client(\n    self\n) -&gt; httpx.Client\n</code></pre> <p>Get the underlying httpx.Client, constructing a new one if not previously set</p>"},{"location":"api/latest/invenio_rest_api_client/#set_async_httpx_client","title":"set_async_httpx_client","text":"<pre><code>def set_async_httpx_client(\n    self,\n    async_client: httpx.AsyncClient\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Manually the underlying httpx.AsyncClient</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p>"},{"location":"api/latest/invenio_rest_api_client/#set_httpx_client","title":"set_httpx_client","text":"<pre><code>def set_httpx_client(\n    self,\n    client: httpx.Client\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Manually set the underlying httpx.Client</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p>"},{"location":"api/latest/invenio_rest_api_client/#with_cookies","title":"with_cookies","text":"<pre><code>def with_cookies(\n    self,\n    cookies: dict[str, str]\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Get a new client matching this one with additional cookies</p>"},{"location":"api/latest/invenio_rest_api_client/#with_headers","title":"with_headers","text":"<pre><code>def with_headers(\n    self,\n    headers: dict[str, str]\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Get a new client matching this one with additional headers</p>"},{"location":"api/latest/invenio_rest_api_client/#with_timeout","title":"with_timeout","text":"<pre><code>def with_timeout(\n    self,\n    timeout: httpx.Timeout\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Get a new client matching this one with a new timeout (in seconds)</p>"},{"location":"api/latest/invenio_rest_api_client/#client","title":"Client","text":"<pre><code>class Client(\n    base_url: str,\n    *,\n    raise_on_unexpected_status: bool = False,\n    cookies: dict[str, str] = NOTHING,\n    headers: dict[str, str] = NOTHING,\n    timeout: Optional[httpx.Timeout] = None,\n    verify_ssl: Union[str, bool, ssl.SSLContext] = True,\n    follow_redirects: bool = False,\n    httpx_args: dict[str, typing.Any] = NOTHING\n)\n</code></pre> <p>A class for keeping track of data related to the API</p> <p>The following are accepted as keyword arguments and will be used to construct httpx Clients internally:</p> <pre><code>``base_url``: The base URL for the API, all requests are made to a relative path to this URL\n\n``cookies``: A dictionary of cookies to be sent with every request\n\n``headers``: A dictionary of headers to be sent with every request\n\n``timeout``: The maximum amount of a time a request can take. API functions will raise\nhttpx.TimeoutException if this is exceeded.\n\n``verify_ssl``: Whether or not to verify the SSL certificate of the API server. This should be True in production,\nbut can be set to False for testing purposes.\n\n``follow_redirects``: Whether or not to follow redirects. Default value is False.\n\n``httpx_args``: A dictionary of additional arguments to be passed to the ``httpx.Client`` and ``httpx.AsyncClient`` constructor.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/#attributes_1","title":"Attributes","text":"Name Type Description Default raise_on_unexpected_status None Whether or not to raise an errors.UnexpectedStatus if the API returns astatus code that was not documented in the source OpenAPI document. Can also be provided as a keywordargument to the constructor. None"},{"location":"api/latest/invenio_rest_api_client/#instance-variables_1","title":"Instance variables","text":"<pre><code>raise_on_unexpected_status\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/#methods_1","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/#get_async_httpx_client_1","title":"get_async_httpx_client","text":"<pre><code>def get_async_httpx_client(\n    self\n) -&gt; httpx.AsyncClient\n</code></pre> <p>Get the underlying httpx.AsyncClient, constructing a new one if not previously set</p>"},{"location":"api/latest/invenio_rest_api_client/#get_httpx_client_1","title":"get_httpx_client","text":"<pre><code>def get_httpx_client(\n    self\n) -&gt; httpx.Client\n</code></pre> <p>Get the underlying httpx.Client, constructing a new one if not previously set</p>"},{"location":"api/latest/invenio_rest_api_client/#set_async_httpx_client_1","title":"set_async_httpx_client","text":"<pre><code>def set_async_httpx_client(\n    self,\n    async_client: httpx.AsyncClient\n) -&gt; 'Client'\n</code></pre> <p>Manually the underlying httpx.AsyncClient</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p>"},{"location":"api/latest/invenio_rest_api_client/#set_httpx_client_1","title":"set_httpx_client","text":"<pre><code>def set_httpx_client(\n    self,\n    client: httpx.Client\n) -&gt; 'Client'\n</code></pre> <p>Manually set the underlying httpx.Client</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p>"},{"location":"api/latest/invenio_rest_api_client/#with_cookies_1","title":"with_cookies","text":"<pre><code>def with_cookies(\n    self,\n    cookies: dict[str, str]\n) -&gt; 'Client'\n</code></pre> <p>Get a new client matching this one with additional cookies</p>"},{"location":"api/latest/invenio_rest_api_client/#with_headers_1","title":"with_headers","text":"<pre><code>def with_headers(\n    self,\n    headers: dict[str, str]\n) -&gt; 'Client'\n</code></pre> <p>Get a new client matching this one with additional headers</p>"},{"location":"api/latest/invenio_rest_api_client/#with_timeout_1","title":"with_timeout","text":"<pre><code>def with_timeout(\n    self,\n    timeout: httpx.Timeout\n) -&gt; 'Client'\n</code></pre> <p>Get a new client matching this one with a new timeout (in seconds)</p>"},{"location":"api/latest/invenio_rest_api_client/client/","title":"Module invenio_rest_api_client.client","text":""},{"location":"api/latest/invenio_rest_api_client/client/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/client/#authenticatedclient","title":"AuthenticatedClient","text":"<pre><code>class AuthenticatedClient(\n    base_url: str,\n    token: str,\n    prefix: str = 'Bearer',\n    auth_header_name: str = 'Authorization',\n    *,\n    raise_on_unexpected_status: bool = False,\n    cookies: dict[str, str] = NOTHING,\n    headers: dict[str, str] = NOTHING,\n    timeout: Optional[httpx.Timeout] = None,\n    verify_ssl: Union[str, bool, ssl.SSLContext] = True,\n    follow_redirects: bool = False,\n    httpx_args: dict[str, typing.Any] = NOTHING\n)\n</code></pre> <p>A Client which has been authenticated for use on secured endpoints</p> <p>The following are accepted as keyword arguments and will be used to construct httpx Clients internally:</p> <pre><code>``base_url``: The base URL for the API, all requests are made to a relative path to this URL\n\n``cookies``: A dictionary of cookies to be sent with every request\n\n``headers``: A dictionary of headers to be sent with every request\n\n``timeout``: The maximum amount of a time a request can take. API functions will raise\nhttpx.TimeoutException if this is exceeded.\n\n``verify_ssl``: Whether or not to verify the SSL certificate of the API server. This should be True in production,\nbut can be set to False for testing purposes.\n\n``follow_redirects``: Whether or not to follow redirects. Default value is False.\n\n``httpx_args``: A dictionary of additional arguments to be passed to the ``httpx.Client`` and ``httpx.AsyncClient`` constructor.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/client/#attributes","title":"Attributes","text":"Name Type Description Default raise_on_unexpected_status None Whether or not to raise an errors.UnexpectedStatus if the API returns astatus code that was not documented in the source OpenAPI document. Can also be provided as a keywordargument to the constructor. None token None The token to use for authentication None prefix None The prefix to use for the Authorization header None auth_header_name None The name of the Authorization header None"},{"location":"api/latest/invenio_rest_api_client/client/#instance-variables","title":"Instance variables","text":"<pre><code>auth_header_name\n</code></pre> <pre><code>prefix\n</code></pre> <pre><code>raise_on_unexpected_status\n</code></pre> <pre><code>token\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/client/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/client/#get_async_httpx_client","title":"get_async_httpx_client","text":"<pre><code>def get_async_httpx_client(\n    self\n) -&gt; httpx.AsyncClient\n</code></pre> <p>Get the underlying httpx.AsyncClient, constructing a new one if not previously set</p>"},{"location":"api/latest/invenio_rest_api_client/client/#get_httpx_client","title":"get_httpx_client","text":"<pre><code>def get_httpx_client(\n    self\n) -&gt; httpx.Client\n</code></pre> <p>Get the underlying httpx.Client, constructing a new one if not previously set</p>"},{"location":"api/latest/invenio_rest_api_client/client/#set_async_httpx_client","title":"set_async_httpx_client","text":"<pre><code>def set_async_httpx_client(\n    self,\n    async_client: httpx.AsyncClient\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Manually the underlying httpx.AsyncClient</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p>"},{"location":"api/latest/invenio_rest_api_client/client/#set_httpx_client","title":"set_httpx_client","text":"<pre><code>def set_httpx_client(\n    self,\n    client: httpx.Client\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Manually set the underlying httpx.Client</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p>"},{"location":"api/latest/invenio_rest_api_client/client/#with_cookies","title":"with_cookies","text":"<pre><code>def with_cookies(\n    self,\n    cookies: dict[str, str]\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Get a new client matching this one with additional cookies</p>"},{"location":"api/latest/invenio_rest_api_client/client/#with_headers","title":"with_headers","text":"<pre><code>def with_headers(\n    self,\n    headers: dict[str, str]\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Get a new client matching this one with additional headers</p>"},{"location":"api/latest/invenio_rest_api_client/client/#with_timeout","title":"with_timeout","text":"<pre><code>def with_timeout(\n    self,\n    timeout: httpx.Timeout\n) -&gt; 'AuthenticatedClient'\n</code></pre> <p>Get a new client matching this one with a new timeout (in seconds)</p>"},{"location":"api/latest/invenio_rest_api_client/client/#client","title":"Client","text":"<pre><code>class Client(\n    base_url: str,\n    *,\n    raise_on_unexpected_status: bool = False,\n    cookies: dict[str, str] = NOTHING,\n    headers: dict[str, str] = NOTHING,\n    timeout: Optional[httpx.Timeout] = None,\n    verify_ssl: Union[str, bool, ssl.SSLContext] = True,\n    follow_redirects: bool = False,\n    httpx_args: dict[str, typing.Any] = NOTHING\n)\n</code></pre> <p>A class for keeping track of data related to the API</p> <p>The following are accepted as keyword arguments and will be used to construct httpx Clients internally:</p> <pre><code>``base_url``: The base URL for the API, all requests are made to a relative path to this URL\n\n``cookies``: A dictionary of cookies to be sent with every request\n\n``headers``: A dictionary of headers to be sent with every request\n\n``timeout``: The maximum amount of a time a request can take. API functions will raise\nhttpx.TimeoutException if this is exceeded.\n\n``verify_ssl``: Whether or not to verify the SSL certificate of the API server. This should be True in production,\nbut can be set to False for testing purposes.\n\n``follow_redirects``: Whether or not to follow redirects. Default value is False.\n\n``httpx_args``: A dictionary of additional arguments to be passed to the ``httpx.Client`` and ``httpx.AsyncClient`` constructor.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/client/#attributes_1","title":"Attributes","text":"Name Type Description Default raise_on_unexpected_status None Whether or not to raise an errors.UnexpectedStatus if the API returns astatus code that was not documented in the source OpenAPI document. Can also be provided as a keywordargument to the constructor. None"},{"location":"api/latest/invenio_rest_api_client/client/#instance-variables_1","title":"Instance variables","text":"<pre><code>raise_on_unexpected_status\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/client/#methods_1","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/client/#get_async_httpx_client_1","title":"get_async_httpx_client","text":"<pre><code>def get_async_httpx_client(\n    self\n) -&gt; httpx.AsyncClient\n</code></pre> <p>Get the underlying httpx.AsyncClient, constructing a new one if not previously set</p>"},{"location":"api/latest/invenio_rest_api_client/client/#get_httpx_client_1","title":"get_httpx_client","text":"<pre><code>def get_httpx_client(\n    self\n) -&gt; httpx.Client\n</code></pre> <p>Get the underlying httpx.Client, constructing a new one if not previously set</p>"},{"location":"api/latest/invenio_rest_api_client/client/#set_async_httpx_client_1","title":"set_async_httpx_client","text":"<pre><code>def set_async_httpx_client(\n    self,\n    async_client: httpx.AsyncClient\n) -&gt; 'Client'\n</code></pre> <p>Manually the underlying httpx.AsyncClient</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p>"},{"location":"api/latest/invenio_rest_api_client/client/#set_httpx_client_1","title":"set_httpx_client","text":"<pre><code>def set_httpx_client(\n    self,\n    client: httpx.Client\n) -&gt; 'Client'\n</code></pre> <p>Manually set the underlying httpx.Client</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p>"},{"location":"api/latest/invenio_rest_api_client/client/#with_cookies_1","title":"with_cookies","text":"<pre><code>def with_cookies(\n    self,\n    cookies: dict[str, str]\n) -&gt; 'Client'\n</code></pre> <p>Get a new client matching this one with additional cookies</p>"},{"location":"api/latest/invenio_rest_api_client/client/#with_headers_1","title":"with_headers","text":"<pre><code>def with_headers(\n    self,\n    headers: dict[str, str]\n) -&gt; 'Client'\n</code></pre> <p>Get a new client matching this one with additional headers</p>"},{"location":"api/latest/invenio_rest_api_client/client/#with_timeout_1","title":"with_timeout","text":"<pre><code>def with_timeout(\n    self,\n    timeout: httpx.Timeout\n) -&gt; 'Client'\n</code></pre> <p>Get a new client matching this one with a new timeout (in seconds)</p>"},{"location":"api/latest/invenio_rest_api_client/errors/","title":"Module invenio_rest_api_client.errors","text":"<p>Contains shared errors types that can be raised from API functions</p>"},{"location":"api/latest/invenio_rest_api_client/errors/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/errors/#unexpectedstatus","title":"UnexpectedStatus","text":"<pre><code>class UnexpectedStatus(\n    status_code: int,\n    content: bytes\n)\n</code></pre> <p>Raised by api functions when the response status an undocumented status and Client.raise_on_unexpected_status is True</p>"},{"location":"api/latest/invenio_rest_api_client/errors/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.Exception</li> <li>builtins.BaseException</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/errors/#class-variables","title":"Class variables","text":"<pre><code>args\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/errors/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/errors/#add_note","title":"add_note","text":"<pre><code>def add_note(\n    self,\n    object,\n    /\n)\n</code></pre> <p>Exception.add_note(note) --</p> <p>add a note to the exception</p>"},{"location":"api/latest/invenio_rest_api_client/errors/#with_traceback","title":"with_traceback","text":"<pre><code>def with_traceback(\n    self,\n    object,\n    /\n)\n</code></pre> <p>Exception.with_traceback(tb) --</p> <p>set self.traceback to tb and return self.</p>"},{"location":"api/latest/invenio_rest_api_client/types/","title":"Module invenio_rest_api_client.types","text":"<p>Contains some shared types for properties</p>"},{"location":"api/latest/invenio_rest_api_client/types/#variables","title":"Variables","text":"<pre><code>FileTypes\n</code></pre> <pre><code>RequestFiles\n</code></pre> <pre><code>UNSET\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/types/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/types/#file","title":"File","text":"<pre><code>class File(\n    payload: &lt;class 'BinaryIO'&gt;,\n    file_name: Optional[str] = None,\n    mime_type: Optional[str] = None\n)\n</code></pre> <p>Contains information for file uploads</p>"},{"location":"api/latest/invenio_rest_api_client/types/#instance-variables","title":"Instance variables","text":"<pre><code>file_name\n</code></pre> <pre><code>mime_type\n</code></pre> <pre><code>payload\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/types/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/types/#to_tuple","title":"to_tuple","text":"<pre><code>def to_tuple(\n    self\n) -&gt; Union[tuple[Optional[str], Union[IO[bytes], bytes, str], Optional[str]], tuple[Optional[str], Union[IO[bytes], bytes, str], Optional[str], collections.abc.Mapping[str, str]]]\n</code></pre> <p>Return a tuple representation that httpx will accept for multipart/form-data</p>"},{"location":"api/latest/invenio_rest_api_client/types/#response","title":"Response","text":"<pre><code>class Response(\n    status_code: http.HTTPStatus,\n    content: bytes,\n    headers: collections.abc.MutableMapping[str, str],\n    parsed: Optional[~T]\n)\n</code></pre> <p>A response from an endpoint</p>"},{"location":"api/latest/invenio_rest_api_client/types/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>typing.Generic</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/types/#instance-variables_1","title":"Instance variables","text":"<pre><code>content\n</code></pre> <pre><code>headers\n</code></pre> <pre><code>parsed\n</code></pre> <pre><code>status_code\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/types/#unset","title":"Unset","text":"<pre><code>class Unset(\n    /,\n    *args,\n    **kwargs\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/api/","title":"Module invenio_rest_api_client.api","text":"<p>Contains methods for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.audit_logs</li> <li>invenio_rest_api_client.api.communities</li> <li>invenio_rest_api_client.api.communities_invitations</li> <li>invenio_rest_api_client.api.communities_logo</li> <li>invenio_rest_api_client.api.communities_members</li> <li>invenio_rest_api_client.api.drafts</li> <li>invenio_rest_api_client.api.drafts_files_upload</li> <li>invenio_rest_api_client.api.export</li> <li>invenio_rest_api_client.api.featured_communities</li> <li>invenio_rest_api_client.api.groups</li> <li>invenio_rest_api_client.api.oai_pmh</li> <li>invenio_rest_api_client.api.oai_pmh_sets</li> <li>invenio_rest_api_client.api.records</li> <li>invenio_rest_api_client.api.records_files</li> <li>invenio_rest_api_client.api.records_versions</li> <li>invenio_rest_api_client.api.request_actions</li> <li>invenio_rest_api_client.api.requests</li> <li>invenio_rest_api_client.api.statistics</li> <li>invenio_rest_api_client.api.users</li> <li>invenio_rest_api_client.api.vocabularies</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/","title":"Module invenio_rest_api_client.api.audit_logs","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.audit_logs.retrieve_log_entry</li> <li>invenio_rest_api_client.api.audit_logs.search_logs</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/retrieve_log_entry/","title":"Module invenio_rest_api_client.api.audit_logs.retrieve_log_entry","text":""},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/retrieve_log_entry/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/retrieve_log_entry/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    log_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.audit_log_entry.AuditLogEntry, NoneType]\n</code></pre> <p>Retrieve Log Entry (Admins only)</p> <p>Retrieve a specific audit log entry by its unique identifier.</p> <p>Parameters:</p> Name Type Description Default log_id str None <p>Returns:</p> Type Description None Union[Any, AuditLogEntry] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/retrieve_log_entry/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    log_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.audit_log_entry.AuditLogEntry]]\n</code></pre> <p>Retrieve Log Entry (Admins only)</p> <p>Retrieve a specific audit log entry by its unique identifier.</p> <p>Parameters:</p> Name Type Description Default log_id str None <p>Returns:</p> Type Description None Response[Union[Any, AuditLogEntry]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/retrieve_log_entry/#sync","title":"sync","text":"<pre><code>def sync(\n    log_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.audit_log_entry.AuditLogEntry, NoneType]\n</code></pre> <p>Retrieve Log Entry (Admins only)</p> <p>Retrieve a specific audit log entry by its unique identifier.</p> <p>Parameters:</p> Name Type Description Default log_id str None <p>Returns:</p> Type Description None Union[Any, AuditLogEntry] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/retrieve_log_entry/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    log_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.audit_log_entry.AuditLogEntry]]\n</code></pre> <p>Retrieve Log Entry (Admins only)</p> <p>Retrieve a specific audit log entry by its unique identifier.</p> <p>Parameters:</p> Name Type Description Default log_id str None <p>Returns:</p> Type Description None Response[Union[Any, AuditLogEntry]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/search_logs/","title":"Module invenio_rest_api_client.api.audit_logs.search_logs","text":""},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/search_logs/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/search_logs/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.audit_log_list.AuditLogList, NoneType]\n</code></pre> <p>Search Logs (Admins only)</p> <p>Search and filter audit log entries based on various parameters.</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None sort Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, AuditLogList] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/search_logs/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.audit_log_list.AuditLogList]]\n</code></pre> <p>Search Logs (Admins only)</p> <p>Search and filter audit log entries based on various parameters.</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None sort Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, AuditLogList]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/search_logs/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.audit_log_list.AuditLogList, NoneType]\n</code></pre> <p>Search Logs (Admins only)</p> <p>Search and filter audit log entries based on various parameters.</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None sort Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, AuditLogList] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/audit_logs/search_logs/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.audit_log_list.AuditLogList]]\n</code></pre> <p>Search Logs (Admins only)</p> <p>Search and filter audit log entries based on various parameters.</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None sort Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, AuditLogList]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/","title":"Module invenio_rest_api_client.api.communities","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/communities/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.communities.create_a_community</li> <li>invenio_rest_api_client.api.communities.delete_community</li> <li>invenio_rest_api_client.api.communities.get_a_community</li> <li>invenio_rest_api_client.api.communities.get_community_records</li> <li>invenio_rest_api_client.api.communities.rename_a_community</li> <li>invenio_rest_api_client.api.communities.search_communities</li> <li>invenio_rest_api_client.api.communities.update_a_community</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/communities/create_a_community/","title":"Module invenio_rest_api_client.api.communities.create_a_community","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/create_a_community/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/create_a_community/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_community_body.CreateACommunityBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a Community</p> <p>Parameters:</p> Name Type Description Default body CreateACommunityBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/create_a_community/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_community_body.CreateACommunityBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a Community</p> <p>Parameters:</p> Name Type Description Default body CreateACommunityBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/create_a_community/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_community_body.CreateACommunityBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a Community</p> <p>Parameters:</p> Name Type Description Default body CreateACommunityBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/create_a_community/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_community_body.CreateACommunityBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a Community</p> <p>Parameters:</p> Name Type Description Default body CreateACommunityBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/delete_community/","title":"Module invenio_rest_api_client.api.communities.delete_community","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/delete_community/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/delete_community/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_community_response_200.DeleteCommunityResponse200, NoneType]\n</code></pre> <p>Delete Community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, DeleteCommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/delete_community/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_community_response_200.DeleteCommunityResponse200]]\n</code></pre> <p>Delete Community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteCommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/delete_community/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_community_response_200.DeleteCommunityResponse200, NoneType]\n</code></pre> <p>Delete Community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, DeleteCommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/delete_community/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_community_response_200.DeleteCommunityResponse200]]\n</code></pre> <p>Delete Community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteCommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/get_a_community/","title":"Module invenio_rest_api_client.api.communities.get_a_community","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/get_a_community/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/get_a_community/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_community_response_200.GetACommunityResponse200, NoneType]\n</code></pre> <p>Get a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, GetACommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/get_a_community/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_community_response_200.GetACommunityResponse200]]\n</code></pre> <p>Get a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetACommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/get_a_community/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_community_response_200.GetACommunityResponse200, NoneType]\n</code></pre> <p>Get a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, GetACommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/get_a_community/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_community_response_200.GetACommunityResponse200]]\n</code></pre> <p>Get a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetACommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/get_community_records/","title":"Module invenio_rest_api_client.api.communities.get_community_records","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/get_community_records/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/get_community_records/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.get_community_records_response_200.GetCommunityRecordsResponse200, NoneType]\n</code></pre> <p>Get Community Records</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, GetCommunityRecordsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/get_community_records/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_community_records_response_200.GetCommunityRecordsResponse200]]\n</code></pre> <p>Get Community Records</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, GetCommunityRecordsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/get_community_records/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.get_community_records_response_200.GetCommunityRecordsResponse200, NoneType]\n</code></pre> <p>Get Community Records</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, GetCommunityRecordsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/get_community_records/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_community_records_response_200.GetCommunityRecordsResponse200]]\n</code></pre> <p>Get Community Records</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, GetCommunityRecordsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/rename_a_community/","title":"Module invenio_rest_api_client.api.communities.rename_a_community","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/rename_a_community/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/rename_a_community/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.rename_a_community_body.RenameACommunityBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Rename a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None body RenameACommunityBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/rename_a_community/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.rename_a_community_body.RenameACommunityBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Rename a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None body RenameACommunityBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/rename_a_community/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.rename_a_community_body.RenameACommunityBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Rename a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None body RenameACommunityBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/rename_a_community/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.rename_a_community_body.RenameACommunityBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Rename a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None body RenameACommunityBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/search_communities/","title":"Module invenio_rest_api_client.api.communities.search_communities","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/search_communities/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/search_communities/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    prettyprint: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_communities_response_200.SearchCommunitiesResponse200, NoneType]\n</code></pre> <p>Search Communities</p> <p>Parameters:</p> Name Type Description Default prettyprint Union[Unset, str] None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None type_ Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchCommunitiesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/search_communities/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    prettyprint: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_communities_response_200.SearchCommunitiesResponse200]]\n</code></pre> <p>Search Communities</p> <p>Parameters:</p> Name Type Description Default prettyprint Union[Unset, str] None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None type_ Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchCommunitiesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/search_communities/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    prettyprint: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_communities_response_200.SearchCommunitiesResponse200, NoneType]\n</code></pre> <p>Search Communities</p> <p>Parameters:</p> Name Type Description Default prettyprint Union[Unset, str] None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None type_ Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchCommunitiesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/search_communities/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    prettyprint: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_communities_response_200.SearchCommunitiesResponse200]]\n</code></pre> <p>Search Communities</p> <p>Parameters:</p> Name Type Description Default prettyprint Union[Unset, str] None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None type_ Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchCommunitiesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/update_a_community/","title":"Module invenio_rest_api_client.api.communities.update_a_community","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/update_a_community/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities/update_a_community/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_community_body.UpdateACommunityBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_community_response_200.UpdateACommunityResponse200, NoneType]\n</code></pre> <p>Update a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateACommunityBody None <p>Returns:</p> Type Description None Union[Any, UpdateACommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/update_a_community/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_community_body.UpdateACommunityBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_community_response_200.UpdateACommunityResponse200]]\n</code></pre> <p>Update a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateACommunityBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateACommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/update_a_community/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_community_body.UpdateACommunityBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_community_response_200.UpdateACommunityResponse200, NoneType]\n</code></pre> <p>Update a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateACommunityBody None <p>Returns:</p> Type Description None Union[Any, UpdateACommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities/update_a_community/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_community_body.UpdateACommunityBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_community_response_200.UpdateACommunityResponse200]]\n</code></pre> <p>Update a Community</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateACommunityBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateACommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/","title":"Module invenio_rest_api_client.api.communities_invitations","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.communities_invitations.invite_user_members</li> <li>invenio_rest_api_client.api.communities_invitations.search_invitations</li> <li>invenio_rest_api_client.api.communities_invitations.update_invitations</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/invite_user_members/","title":"Module invenio_rest_api_client.api.communities_invitations.invite_user_members","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/invite_user_members/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/invite_user_members/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.invite_user_members_body.InviteUserMembersBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Invite user members</p> <p>Parameters:</p> Name Type Description Default community_id str None body InviteUserMembersBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/invite_user_members/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.invite_user_members_body.InviteUserMembersBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Invite user members</p> <p>Parameters:</p> Name Type Description Default community_id str None body InviteUserMembersBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/invite_user_members/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.invite_user_members_body.InviteUserMembersBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Invite user members</p> <p>Parameters:</p> Name Type Description Default community_id str None body InviteUserMembersBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/invite_user_members/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.invite_user_members_body.InviteUserMembersBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Invite user members</p> <p>Parameters:</p> Name Type Description Default community_id str None body InviteUserMembersBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/search_invitations/","title":"Module invenio_rest_api_client.api.communities_invitations.search_invitations","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/search_invitations/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/search_invitations/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    role: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    status: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_open: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_invitations_response_200.SearchInvitationsResponse200, NoneType]\n</code></pre> <p>Search invitations</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None role Union[Unset, str] None status Union[Unset, str] None is_open Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchInvitationsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/search_invitations/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    role: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    status: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_open: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_invitations_response_200.SearchInvitationsResponse200]]\n</code></pre> <p>Search invitations</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None role Union[Unset, str] None status Union[Unset, str] None is_open Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchInvitationsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/search_invitations/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    role: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    status: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_open: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_invitations_response_200.SearchInvitationsResponse200, NoneType]\n</code></pre> <p>Search invitations</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None role Union[Unset, str] None status Union[Unset, str] None is_open Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchInvitationsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/search_invitations/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    role: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    status: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_open: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_invitations_response_200.SearchInvitationsResponse200]]\n</code></pre> <p>Search invitations</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None role Union[Unset, str] None status Union[Unset, str] None is_open Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchInvitationsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/update_invitations/","title":"Module invenio_rest_api_client.api.communities_invitations.update_invitations","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/update_invitations/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/update_invitations/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_invitations_body.UpdateInvitationsBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_invitations_response_200.UpdateInvitationsResponse200, NoneType]\n</code></pre> <p>Update invitations</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateInvitationsBody None <p>Returns:</p> Type Description None Union[Any, UpdateInvitationsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/update_invitations/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_invitations_body.UpdateInvitationsBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_invitations_response_200.UpdateInvitationsResponse200]]\n</code></pre> <p>Update invitations</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateInvitationsBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateInvitationsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/update_invitations/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_invitations_body.UpdateInvitationsBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_invitations_response_200.UpdateInvitationsResponse200, NoneType]\n</code></pre> <p>Update invitations</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateInvitationsBody None <p>Returns:</p> Type Description None Union[Any, UpdateInvitationsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_invitations/update_invitations/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_invitations_body.UpdateInvitationsBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_invitations_response_200.UpdateInvitationsResponse200]]\n</code></pre> <p>Update invitations</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateInvitationsBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateInvitationsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/","title":"Module invenio_rest_api_client.api.communities_logo","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.communities_logo.delete_community_logo</li> <li>invenio_rest_api_client.api.communities_logo.get_community_logo</li> <li>invenio_rest_api_client.api.communities_logo.update_community_logo</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/delete_community_logo/","title":"Module invenio_rest_api_client.api.communities_logo.delete_community_logo","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/delete_community_logo/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/delete_community_logo/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_community_logo_response_200.DeleteCommunityLogoResponse200, NoneType]\n</code></pre> <p>Delete Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, DeleteCommunityLogoResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/delete_community_logo/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_community_logo_response_200.DeleteCommunityLogoResponse200]]\n</code></pre> <p>Delete Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteCommunityLogoResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/delete_community_logo/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_community_logo_response_200.DeleteCommunityLogoResponse200, NoneType]\n</code></pre> <p>Delete Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, DeleteCommunityLogoResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/delete_community_logo/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_community_logo_response_200.DeleteCommunityLogoResponse200]]\n</code></pre> <p>Delete Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteCommunityLogoResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/get_community_logo/","title":"Module invenio_rest_api_client.api.communities_logo.get_community_logo","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/get_community_logo/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/get_community_logo/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_community_logo_response_200.GetCommunityLogoResponse200, NoneType]\n</code></pre> <p>Get Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, GetCommunityLogoResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/get_community_logo/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_community_logo_response_200.GetCommunityLogoResponse200]]\n</code></pre> <p>Get Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetCommunityLogoResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/get_community_logo/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_community_logo_response_200.GetCommunityLogoResponse200, NoneType]\n</code></pre> <p>Get Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, GetCommunityLogoResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/get_community_logo/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_community_logo_response_200.GetCommunityLogoResponse200]]\n</code></pre> <p>Get Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetCommunityLogoResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/update_community_logo/","title":"Module invenio_rest_api_client.api.communities_logo.update_community_logo","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/update_community_logo/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/update_community_logo/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.types.File\n) -&gt; Union[Any, invenio_rest_api_client.models.update_community_logo_response_200.UpdateCommunityLogoResponse200, NoneType]\n</code></pre> <p>Update Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None body File None <p>Returns:</p> Type Description None Union[Any, UpdateCommunityLogoResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/update_community_logo/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.types.File\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_community_logo_response_200.UpdateCommunityLogoResponse200]]\n</code></pre> <p>Update Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None body File None <p>Returns:</p> Type Description None Response[Union[Any, UpdateCommunityLogoResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/update_community_logo/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.types.File\n) -&gt; Union[Any, invenio_rest_api_client.models.update_community_logo_response_200.UpdateCommunityLogoResponse200, NoneType]\n</code></pre> <p>Update Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None body File None <p>Returns:</p> Type Description None Union[Any, UpdateCommunityLogoResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_logo/update_community_logo/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.types.File\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_community_logo_response_200.UpdateCommunityLogoResponse200]]\n</code></pre> <p>Update Community Logo</p> <p>Parameters:</p> Name Type Description Default community_id str None body File None <p>Returns:</p> Type Description None Response[Union[Any, UpdateCommunityLogoResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/","title":"Module invenio_rest_api_client.api.communities_members","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/communities_members/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.communities_members.add_group_members</li> <li>invenio_rest_api_client.api.communities_members.remove_members_leave_community</li> <li>invenio_rest_api_client.api.communities_members.search_members</li> <li>invenio_rest_api_client.api.communities_members.search_public_members</li> <li>invenio_rest_api_client.api.communities_members.update_members</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/communities_members/add_group_members/","title":"Module invenio_rest_api_client.api.communities_members.add_group_members","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/add_group_members/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/add_group_members/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.add_group_members_body.AddGroupMembersBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Add group members</p> <p>Parameters:</p> Name Type Description Default community_id str None body AddGroupMembersBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/add_group_members/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.add_group_members_body.AddGroupMembersBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Add group members</p> <p>Parameters:</p> Name Type Description Default community_id str None body AddGroupMembersBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/add_group_members/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.add_group_members_body.AddGroupMembersBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Add group members</p> <p>Parameters:</p> Name Type Description Default community_id str None body AddGroupMembersBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/add_group_members/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.add_group_members_body.AddGroupMembersBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Add group members</p> <p>Parameters:</p> Name Type Description Default community_id str None body AddGroupMembersBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/remove_members_leave_community/","title":"Module invenio_rest_api_client.api.communities_members.remove_members_leave_community","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/remove_members_leave_community/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/remove_members_leave_community/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.remove_members_leave_community_response_200.RemoveMembersLeaveCommunityResponse200, NoneType]\n</code></pre> <p>Remove members / leave community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, RemoveMembersLeaveCommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/remove_members_leave_community/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.remove_members_leave_community_response_200.RemoveMembersLeaveCommunityResponse200]]\n</code></pre> <p>Remove members / leave community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, RemoveMembersLeaveCommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/remove_members_leave_community/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.remove_members_leave_community_response_200.RemoveMembersLeaveCommunityResponse200, NoneType]\n</code></pre> <p>Remove members / leave community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, RemoveMembersLeaveCommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/remove_members_leave_community/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.remove_members_leave_community_response_200.RemoveMembersLeaveCommunityResponse200]]\n</code></pre> <p>Remove members / leave community</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, RemoveMembersLeaveCommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_members/","title":"Module invenio_rest_api_client.api.communities_members.search_members","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_members/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_members/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    role: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    visibility: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_members_response_200.SearchMembersResponse200, NoneType]\n</code></pre> <p>Search members</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None role Union[Unset, str] None visibility Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchMembersResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_members/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    role: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    visibility: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_members_response_200.SearchMembersResponse200]]\n</code></pre> <p>Search members</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None role Union[Unset, str] None visibility Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchMembersResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_members/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    role: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    visibility: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_members_response_200.SearchMembersResponse200, NoneType]\n</code></pre> <p>Search members</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None role Union[Unset, str] None visibility Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchMembersResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_members/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    role: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    visibility: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_members_response_200.SearchMembersResponse200]]\n</code></pre> <p>Search members</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None role Union[Unset, str] None visibility Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchMembersResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_public_members/","title":"Module invenio_rest_api_client.api.communities_members.search_public_members","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_public_members/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_public_members/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_public_members_response_200.SearchPublicMembersResponse200, NoneType]\n</code></pre> <p>Search public members</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchPublicMembersResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_public_members/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_public_members_response_200.SearchPublicMembersResponse200]]\n</code></pre> <p>Search public members</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchPublicMembersResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_public_members/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_public_members_response_200.SearchPublicMembersResponse200, NoneType]\n</code></pre> <p>Search public members</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchPublicMembersResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/search_public_members/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_public_members_response_200.SearchPublicMembersResponse200]]\n</code></pre> <p>Search public members</p> <p>Parameters:</p> Name Type Description Default community_id str None q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchPublicMembersResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/update_members/","title":"Module invenio_rest_api_client.api.communities_members.update_members","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/update_members/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/communities_members/update_members/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_members_body.UpdateMembersBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_members_response_200.UpdateMembersResponse200, NoneType]\n</code></pre> <p>Update members</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateMembersBody None <p>Returns:</p> Type Description None Union[Any, UpdateMembersResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/update_members/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_members_body.UpdateMembersBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_members_response_200.UpdateMembersResponse200]]\n</code></pre> <p>Update members</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateMembersBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateMembersResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/update_members/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_members_body.UpdateMembersBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_members_response_200.UpdateMembersResponse200, NoneType]\n</code></pre> <p>Update members</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateMembersBody None <p>Returns:</p> Type Description None Union[Any, UpdateMembersResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/communities_members/update_members/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_members_body.UpdateMembersBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_members_response_200.UpdateMembersResponse200]]\n</code></pre> <p>Update members</p> <p>Parameters:</p> Name Type Description Default community_id str None body UpdateMembersBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateMembersResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/","title":"Module invenio_rest_api_client.api.drafts","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/drafts/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.drafts.createupdate_a_review_request</li> <li>invenio_rest_api_client.api.drafts.delete_a_doi</li> <li>invenio_rest_api_client.api.drafts.delete_a_draft_file</li> <li>invenio_rest_api_client.api.drafts.delete_a_review_request</li> <li>invenio_rest_api_client.api.drafts.deletediscard_a_draft_record</li> <li>invenio_rest_api_client.api.drafts.download_a_draft_file</li> <li>invenio_rest_api_client.api.drafts.edit_a_published_record_create_a_draft_record_from_a_published_record</li> <li>invenio_rest_api_client.api.drafts.get_a_draft_files_metadata</li> <li>invenio_rest_api_client.api.drafts.get_a_draft_records</li> <li>invenio_rest_api_client.api.drafts.get_a_review_request</li> <li>invenio_rest_api_client.api.drafts.link_files_from_previous_version</li> <li>invenio_rest_api_client.api.drafts.list_a_drafts_files</li> <li>invenio_rest_api_client.api.drafts.publish_a_draft_record</li> <li>invenio_rest_api_client.api.drafts.reserve_a_doi</li> <li>invenio_rest_api_client.api.drafts.submit_a_record_for_review</li> <li>invenio_rest_api_client.api.drafts.update_a_draft_record</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/drafts/createupdate_a_review_request/","title":"Module invenio_rest_api_client.api.drafts.createupdate_a_review_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/createupdate_a_review_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/createupdate_a_review_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.createupdate_a_review_request_body.CreateupdateAReviewRequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.createupdate_a_review_request_response_200.CreateupdateAReviewRequestResponse200, NoneType]\n</code></pre> <p>Create/update a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None body CreateupdateAReviewRequestBody None <p>Returns:</p> Type Description None Union[Any, CreateupdateAReviewRequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/createupdate_a_review_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.createupdate_a_review_request_body.CreateupdateAReviewRequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.createupdate_a_review_request_response_200.CreateupdateAReviewRequestResponse200]]\n</code></pre> <p>Create/update a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None body CreateupdateAReviewRequestBody None <p>Returns:</p> Type Description None Response[Union[Any, CreateupdateAReviewRequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/createupdate_a_review_request/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.createupdate_a_review_request_body.CreateupdateAReviewRequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.createupdate_a_review_request_response_200.CreateupdateAReviewRequestResponse200, NoneType]\n</code></pre> <p>Create/update a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None body CreateupdateAReviewRequestBody None <p>Returns:</p> Type Description None Union[Any, CreateupdateAReviewRequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/createupdate_a_review_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.createupdate_a_review_request_body.CreateupdateAReviewRequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.createupdate_a_review_request_response_200.CreateupdateAReviewRequestResponse200]]\n</code></pre> <p>Create/update a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None body CreateupdateAReviewRequestBody None <p>Returns:</p> Type Description None Response[Union[Any, CreateupdateAReviewRequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_doi/","title":"Module invenio_rest_api_client.api.drafts.delete_a_doi","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_doi/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_doi/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client],\n    expand: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_doi_response_200.DeleteADoiResponse200, NoneType]\n</code></pre> <p>Delete a DOI</p> <p>Parameters:</p> Name Type Description Default draft_id str None expand Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, DeleteADoiResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_doi/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client],\n    expand: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_doi_response_200.DeleteADoiResponse200]]\n</code></pre> <p>Delete a DOI</p> <p>Parameters:</p> Name Type Description Default draft_id str None expand Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, DeleteADoiResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_doi/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client],\n    expand: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_doi_response_200.DeleteADoiResponse200, NoneType]\n</code></pre> <p>Delete a DOI</p> <p>Parameters:</p> Name Type Description Default draft_id str None expand Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, DeleteADoiResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_doi/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client],\n    expand: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_doi_response_200.DeleteADoiResponse200]]\n</code></pre> <p>Delete a DOI</p> <p>Parameters:</p> Name Type Description Default draft_id str None expand Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, DeleteADoiResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_draft_file/","title":"Module invenio_rest_api_client.api.drafts.delete_a_draft_file","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_draft_file/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_draft_file/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_draft_file_response_200.DeleteADraftFileResponse200, NoneType]\n</code></pre> <p>Delete a draft file</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, DeleteADraftFileResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_draft_file/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_draft_file_response_200.DeleteADraftFileResponse200]]\n</code></pre> <p>Delete a draft file</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteADraftFileResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_draft_file/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_draft_file_response_200.DeleteADraftFileResponse200, NoneType]\n</code></pre> <p>Delete a draft file</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, DeleteADraftFileResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_draft_file/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_draft_file_response_200.DeleteADraftFileResponse200]]\n</code></pre> <p>Delete a draft file</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteADraftFileResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_review_request/","title":"Module invenio_rest_api_client.api.drafts.delete_a_review_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_review_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_review_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_review_request_response_200.DeleteAReviewRequestResponse200, NoneType]\n</code></pre> <p>Delete a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, DeleteAReviewRequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_review_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_review_request_response_200.DeleteAReviewRequestResponse200]]\n</code></pre> <p>Delete a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteAReviewRequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_review_request/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_review_request_response_200.DeleteAReviewRequestResponse200, NoneType]\n</code></pre> <p>Delete a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, DeleteAReviewRequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/delete_a_review_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_review_request_response_200.DeleteAReviewRequestResponse200]]\n</code></pre> <p>Delete a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteAReviewRequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/deletediscard_a_draft_record/","title":"Module invenio_rest_api_client.api.drafts.deletediscard_a_draft_record","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/deletediscard_a_draft_record/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/deletediscard_a_draft_record/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.deletediscard_a_draft_record_response_200.DeletediscardADraftRecordResponse200, NoneType]\n</code></pre> <p>Delete/discard a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, DeletediscardADraftRecordResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/deletediscard_a_draft_record/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.deletediscard_a_draft_record_response_200.DeletediscardADraftRecordResponse200]]\n</code></pre> <p>Delete/discard a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeletediscardADraftRecordResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/deletediscard_a_draft_record/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.deletediscard_a_draft_record_response_200.DeletediscardADraftRecordResponse200, NoneType]\n</code></pre> <p>Delete/discard a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, DeletediscardADraftRecordResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/deletediscard_a_draft_record/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.deletediscard_a_draft_record_response_200.DeletediscardADraftRecordResponse200]]\n</code></pre> <p>Delete/discard a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeletediscardADraftRecordResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/download_a_draft_file/","title":"Module invenio_rest_api_client.api.drafts.download_a_draft_file","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/download_a_draft_file/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/download_a_draft_file/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.download_a_draft_file_response_200.DownloadADraftFileResponse200, NoneType]\n</code></pre> <p>Download a draft file</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, DownloadADraftFileResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/download_a_draft_file/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.download_a_draft_file_response_200.DownloadADraftFileResponse200]]\n</code></pre> <p>Download a draft file</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, DownloadADraftFileResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/download_a_draft_file/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.download_a_draft_file_response_200.DownloadADraftFileResponse200, NoneType]\n</code></pre> <p>Download a draft file</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, DownloadADraftFileResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/download_a_draft_file/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.download_a_draft_file_response_200.DownloadADraftFileResponse200]]\n</code></pre> <p>Download a draft file</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, DownloadADraftFileResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/edit_a_published_record_create_a_draft_record_from_a_published_record/","title":"Module invenio_rest_api_client.api.drafts.edit_a_published_record_create_a_draft_record_from_a_published_record","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/edit_a_published_record_create_a_draft_record_from_a_published_record/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/edit_a_published_record_create_a_draft_record_from_a_published_record/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Edit a published record (Create a draft record from a published record)</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/edit_a_published_record_create_a_draft_record_from_a_published_record/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Edit a published record (Create a draft record from a published record)</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/edit_a_published_record_create_a_draft_record_from_a_published_record/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Edit a published record (Create a draft record from a published record)</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/edit_a_published_record_create_a_draft_record_from_a_published_record/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Edit a published record (Create a draft record from a published record)</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_files_metadata/","title":"Module invenio_rest_api_client.api.drafts.get_a_draft_files_metadata","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_files_metadata/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_files_metadata/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_draft_files_metadata_response_200.GetADraftFilesMetadataResponse200, NoneType]\n</code></pre> <p>Get a draft file's metadata</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, GetADraftFilesMetadataResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_files_metadata/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_draft_files_metadata_response_200.GetADraftFilesMetadataResponse200]]\n</code></pre> <p>Get a draft file's metadata</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, GetADraftFilesMetadataResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_files_metadata/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_draft_files_metadata_response_200.GetADraftFilesMetadataResponse200, NoneType]\n</code></pre> <p>Get a draft file's metadata</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, GetADraftFilesMetadataResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_files_metadata/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_draft_files_metadata_response_200.GetADraftFilesMetadataResponse200]]\n</code></pre> <p>Get a draft file's metadata</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, GetADraftFilesMetadataResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_records/","title":"Module invenio_rest_api_client.api.drafts.get_a_draft_records","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_records/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_records/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_draft_records_response_200.GetADraftRecordsResponse200, NoneType]\n</code></pre> <p>Get a draft records</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, GetADraftRecordsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_records/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_draft_records_response_200.GetADraftRecordsResponse200]]\n</code></pre> <p>Get a draft records</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetADraftRecordsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_records/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_draft_records_response_200.GetADraftRecordsResponse200, NoneType]\n</code></pre> <p>Get a draft records</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, GetADraftRecordsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_draft_records/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_draft_records_response_200.GetADraftRecordsResponse200]]\n</code></pre> <p>Get a draft records</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetADraftRecordsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_review_request/","title":"Module invenio_rest_api_client.api.drafts.get_a_review_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_review_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_review_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_review_request_response_200.GetAReviewRequestResponse200, NoneType]\n</code></pre> <p>Get a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, GetAReviewRequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_review_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_review_request_response_200.GetAReviewRequestResponse200]]\n</code></pre> <p>Get a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAReviewRequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_review_request/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_review_request_response_200.GetAReviewRequestResponse200, NoneType]\n</code></pre> <p>Get a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, GetAReviewRequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/get_a_review_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_review_request_response_200.GetAReviewRequestResponse200]]\n</code></pre> <p>Get a review request</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAReviewRequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/link_files_from_previous_version/","title":"Module invenio_rest_api_client.api.drafts.link_files_from_previous_version","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/link_files_from_previous_version/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/link_files_from_previous_version/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Link files from previous version</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/link_files_from_previous_version/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Link files from previous version</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/link_files_from_previous_version/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Link files from previous version</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/link_files_from_previous_version/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Link files from previous version</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/list_a_drafts_files/","title":"Module invenio_rest_api_client.api.drafts.list_a_drafts_files","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/list_a_drafts_files/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/list_a_drafts_files/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.list_a_drafts_files_response_200.ListADraftsFilesResponse200, NoneType]\n</code></pre> <p>List a draft's files</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, ListADraftsFilesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/list_a_drafts_files/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.list_a_drafts_files_response_200.ListADraftsFilesResponse200]]\n</code></pre> <p>List a draft's files</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, ListADraftsFilesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/list_a_drafts_files/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.list_a_drafts_files_response_200.ListADraftsFilesResponse200, NoneType]\n</code></pre> <p>List a draft's files</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, ListADraftsFilesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/list_a_drafts_files/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.list_a_drafts_files_response_200.ListADraftsFilesResponse200]]\n</code></pre> <p>List a draft's files</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, ListADraftsFilesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/publish_a_draft_record/","title":"Module invenio_rest_api_client.api.drafts.publish_a_draft_record","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/publish_a_draft_record/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/publish_a_draft_record/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Publish a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/publish_a_draft_record/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Publish a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/publish_a_draft_record/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Publish a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/publish_a_draft_record/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Publish a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/reserve_a_doi/","title":"Module invenio_rest_api_client.api.drafts.reserve_a_doi","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/reserve_a_doi/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/reserve_a_doi/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client]\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Reserve a DOI</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/reserve_a_doi/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client]\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Reserve a DOI</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/reserve_a_doi/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client]\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Reserve a DOI</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/reserve_a_doi/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client]\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Reserve a DOI</p> <p>Parameters:</p> Name Type Description Default draft_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/submit_a_record_for_review/","title":"Module invenio_rest_api_client.api.drafts.submit_a_record_for_review","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/submit_a_record_for_review/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/submit_a_record_for_review/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.submit_a_record_for_review_body.SubmitARecordForReviewBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Submit a record for review</p> <p>Parameters:</p> Name Type Description Default draft_id str None body SubmitARecordForReviewBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/submit_a_record_for_review/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.submit_a_record_for_review_body.SubmitARecordForReviewBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Submit a record for review</p> <p>Parameters:</p> Name Type Description Default draft_id str None body SubmitARecordForReviewBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/submit_a_record_for_review/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.submit_a_record_for_review_body.SubmitARecordForReviewBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Submit a record for review</p> <p>Parameters:</p> Name Type Description Default draft_id str None body SubmitARecordForReviewBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/submit_a_record_for_review/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.submit_a_record_for_review_body.SubmitARecordForReviewBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Submit a record for review</p> <p>Parameters:</p> Name Type Description Default draft_id str None body SubmitARecordForReviewBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/update_a_draft_record/","title":"Module invenio_rest_api_client.api.drafts.update_a_draft_record","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/update_a_draft_record/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts/update_a_draft_record/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_draft_record.UpdateDraftRecord\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_draft_record_response_200.UpdateADraftRecordResponse200, NoneType]\n</code></pre> <p>Update a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None body UpdateDraftRecord None <p>Returns:</p> Type Description None Union[Any, UpdateADraftRecordResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/update_a_draft_record/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_draft_record.UpdateDraftRecord\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_draft_record_response_200.UpdateADraftRecordResponse200]]\n</code></pre> <p>Update a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None body UpdateDraftRecord None <p>Returns:</p> Type Description None Response[Union[Any, UpdateADraftRecordResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/update_a_draft_record/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_draft_record.UpdateDraftRecord\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_draft_record_response_200.UpdateADraftRecordResponse200, NoneType]\n</code></pre> <p>Update a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None body UpdateDraftRecord None <p>Returns:</p> Type Description None Union[Any, UpdateADraftRecordResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts/update_a_draft_record/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_draft_record.UpdateDraftRecord\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_draft_record_response_200.UpdateADraftRecordResponse200]]\n</code></pre> <p>Update a draft record</p> <p>Parameters:</p> Name Type Description Default draft_id str None body UpdateDraftRecord None <p>Returns:</p> Type Description None Response[Union[Any, UpdateADraftRecordResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/","title":"Module invenio_rest_api_client.api.drafts_files_upload","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.drafts_files_upload.step_1_start_draft_file_uploads</li> <li>invenio_rest_api_client.api.drafts_files_upload.step_2_upload_a_draft_files_content</li> <li>invenio_rest_api_client.api.drafts_files_upload.step_3_complete_a_draft_file_upload</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_1_start_draft_file_uploads/","title":"Module invenio_rest_api_client.api.drafts_files_upload.step_1_start_draft_file_uploads","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_1_start_draft_file_uploads/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_1_start_draft_file_uploads/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: list['FileTransferItem']\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>step[1] Start draft file upload(s)</p> <p>Parameters:</p> Name Type Description Default draft_id str None body list['FileTransferItem'] None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_1_start_draft_file_uploads/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: list['FileTransferItem']\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>step[1] Start draft file upload(s)</p> <p>Parameters:</p> Name Type Description Default draft_id str None body list['FileTransferItem'] None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_1_start_draft_file_uploads/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: list['FileTransferItem']\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>step[1] Start draft file upload(s)</p> <p>Parameters:</p> Name Type Description Default draft_id str None body list['FileTransferItem'] None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_1_start_draft_file_uploads/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: list['FileTransferItem']\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>step[1] Start draft file upload(s)</p> <p>Parameters:</p> Name Type Description Default draft_id str None body list['FileTransferItem'] None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_2_upload_a_draft_files_content/","title":"Module invenio_rest_api_client.api.drafts_files_upload.step_2_upload_a_draft_files_content","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_2_upload_a_draft_files_content/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_2_upload_a_draft_files_content/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.types.File\n) -&gt; Union[Any, invenio_rest_api_client.models.step_2_upload_a_draft_files_content_response_200.Step2UploadADraftFilesContentResponse200, NoneType]\n</code></pre> <p>step[2] Upload a draft file's content</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None body File None <p>Returns:</p> Type Description None Union[Any, Step2UploadADraftFilesContentResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_2_upload_a_draft_files_content/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.types.File\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.step_2_upload_a_draft_files_content_response_200.Step2UploadADraftFilesContentResponse200]]\n</code></pre> <p>step[2] Upload a draft file's content</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None body File None <p>Returns:</p> Type Description None Response[Union[Any, Step2UploadADraftFilesContentResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_2_upload_a_draft_files_content/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.types.File\n) -&gt; Union[Any, invenio_rest_api_client.models.step_2_upload_a_draft_files_content_response_200.Step2UploadADraftFilesContentResponse200, NoneType]\n</code></pre> <p>step[2] Upload a draft file's content</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None body File None <p>Returns:</p> Type Description None Union[Any, Step2UploadADraftFilesContentResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_2_upload_a_draft_files_content/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.types.File\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.step_2_upload_a_draft_files_content_response_200.Step2UploadADraftFilesContentResponse200]]\n</code></pre> <p>step[2] Upload a draft file's content</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None body File None <p>Returns:</p> Type Description None Response[Union[Any, Step2UploadADraftFilesContentResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_3_complete_a_draft_file_upload/","title":"Module invenio_rest_api_client.api.drafts_files_upload.step_3_complete_a_draft_file_upload","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_3_complete_a_draft_file_upload/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_3_complete_a_draft_file_upload/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>step[3] Complete a draft file upload</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_3_complete_a_draft_file_upload/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>step[3] Complete a draft file upload</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_3_complete_a_draft_file_upload/#sync","title":"sync","text":"<pre><code>def sync(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>step[3] Complete a draft file upload</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/drafts_files_upload/step_3_complete_a_draft_file_upload/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    draft_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>step[3] Complete a draft file upload</p> <p>Parameters:</p> Name Type Description Default draft_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/","title":"Module invenio_rest_api_client.api.export","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/export/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.export.export_record_as_csl</li> <li>invenio_rest_api_client.api.export.export_record_as_datacitejson</li> <li>invenio_rest_api_client.api.export.export_record_as_datacitexml</li> <li>invenio_rest_api_client.api.export.export_record_as_dublincore_xml</li> <li>invenio_rest_api_client.api.export.export_record_as_json</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_csl/","title":"Module invenio_rest_api_client.api.export.export_record_as_csl","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_csl/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_csl/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_csl_response_200.ExportRecordAsCslResponse200, NoneType]\n</code></pre> <p>Export record as csl</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsCslResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_csl/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_csl_response_200.ExportRecordAsCslResponse200]]\n</code></pre> <p>Export record as csl</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsCslResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_csl/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_csl_response_200.ExportRecordAsCslResponse200, NoneType]\n</code></pre> <p>Export record as csl</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsCslResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_csl/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_csl_response_200.ExportRecordAsCslResponse200]]\n</code></pre> <p>Export record as csl</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsCslResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitejson/","title":"Module invenio_rest_api_client.api.export.export_record_as_datacitejson","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitejson/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitejson/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_datacitejson_response_200.ExportRecordAsDatacitejsonResponse200, NoneType]\n</code></pre> <p>Export record as datacite-json</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsDatacitejsonResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitejson/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_datacitejson_response_200.ExportRecordAsDatacitejsonResponse200]]\n</code></pre> <p>Export record as datacite-json</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsDatacitejsonResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitejson/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_datacitejson_response_200.ExportRecordAsDatacitejsonResponse200, NoneType]\n</code></pre> <p>Export record as datacite-json</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsDatacitejsonResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitejson/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_datacitejson_response_200.ExportRecordAsDatacitejsonResponse200]]\n</code></pre> <p>Export record as datacite-json</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsDatacitejsonResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitexml/","title":"Module invenio_rest_api_client.api.export.export_record_as_datacitexml","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitexml/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitexml/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_datacitexml_response_200.ExportRecordAsDatacitexmlResponse200, NoneType]\n</code></pre> <p>Export record as datacite-xml</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsDatacitexmlResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitexml/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_datacitexml_response_200.ExportRecordAsDatacitexmlResponse200]]\n</code></pre> <p>Export record as datacite-xml</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsDatacitexmlResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitexml/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_datacitexml_response_200.ExportRecordAsDatacitexmlResponse200, NoneType]\n</code></pre> <p>Export record as datacite-xml</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsDatacitexmlResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_datacitexml/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_datacitexml_response_200.ExportRecordAsDatacitexmlResponse200]]\n</code></pre> <p>Export record as datacite-xml</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsDatacitexmlResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_dublincore_xml/","title":"Module invenio_rest_api_client.api.export.export_record_as_dublincore_xml","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_dublincore_xml/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_dublincore_xml/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_dublincore_xml_response_200.ExportRecordAsDublincoreXmlResponse200, NoneType]\n</code></pre> <p>Export record as dublincore XML</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsDublincoreXmlResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_dublincore_xml/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_dublincore_xml_response_200.ExportRecordAsDublincoreXmlResponse200]]\n</code></pre> <p>Export record as dublincore XML</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsDublincoreXmlResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_dublincore_xml/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_dublincore_xml_response_200.ExportRecordAsDublincoreXmlResponse200, NoneType]\n</code></pre> <p>Export record as dublincore XML</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsDublincoreXmlResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_dublincore_xml/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_dublincore_xml_response_200.ExportRecordAsDublincoreXmlResponse200]]\n</code></pre> <p>Export record as dublincore XML</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsDublincoreXmlResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_json/","title":"Module invenio_rest_api_client.api.export.export_record_as_json","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_json/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_json/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_json_response_200.ExportRecordAsJsonResponse200, NoneType]\n</code></pre> <p>Export record as JSON</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsJsonResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_json/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_json_response_200.ExportRecordAsJsonResponse200]]\n</code></pre> <p>Export record as JSON</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsJsonResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_json/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.export_record_as_json_response_200.ExportRecordAsJsonResponse200, NoneType]\n</code></pre> <p>Export record as JSON</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ExportRecordAsJsonResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/export/export_record_as_json/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.export_record_as_json_response_200.ExportRecordAsJsonResponse200]]\n</code></pre> <p>Export record as JSON</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ExportRecordAsJsonResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/","title":"Module invenio_rest_api_client.api.featured_communities","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.featured_communities.create_a_featured_community_entry</li> <li>invenio_rest_api_client.api.featured_communities.delete_a_featured_community_entry</li> <li>invenio_rest_api_client.api.featured_communities.get_featured_community_entry</li> <li>invenio_rest_api_client.api.featured_communities.search_featured_communities</li> <li>invenio_rest_api_client.api.featured_communities.update_a_featured_community_entry</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/create_a_featured_community_entry/","title":"Module invenio_rest_api_client.api.featured_communities.create_a_featured_community_entry","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/create_a_featured_community_entry/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/create_a_featured_community_entry/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_featured_community_entry_body.CreateAFeaturedCommunityEntryBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None body CreateAFeaturedCommunityEntryBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/create_a_featured_community_entry/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_featured_community_entry_body.CreateAFeaturedCommunityEntryBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None body CreateAFeaturedCommunityEntryBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/create_a_featured_community_entry/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_featured_community_entry_body.CreateAFeaturedCommunityEntryBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None body CreateAFeaturedCommunityEntryBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/create_a_featured_community_entry/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_featured_community_entry_body.CreateAFeaturedCommunityEntryBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None body CreateAFeaturedCommunityEntryBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/delete_a_featured_community_entry/","title":"Module invenio_rest_api_client.api.featured_communities.delete_a_featured_community_entry","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/delete_a_featured_community_entry/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/delete_a_featured_community_entry/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    featured_entry_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_featured_community_entry_response_200.DeleteAFeaturedCommunityEntryResponse200, NoneType]\n</code></pre> <p>Delete a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None featured_entry_id str None <p>Returns:</p> Type Description None Union[Any, DeleteAFeaturedCommunityEntryResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/delete_a_featured_community_entry/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    featured_entry_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_featured_community_entry_response_200.DeleteAFeaturedCommunityEntryResponse200]]\n</code></pre> <p>Delete a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None featured_entry_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteAFeaturedCommunityEntryResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/delete_a_featured_community_entry/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    featured_entry_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_featured_community_entry_response_200.DeleteAFeaturedCommunityEntryResponse200, NoneType]\n</code></pre> <p>Delete a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None featured_entry_id str None <p>Returns:</p> Type Description None Union[Any, DeleteAFeaturedCommunityEntryResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/delete_a_featured_community_entry/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    featured_entry_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_featured_community_entry_response_200.DeleteAFeaturedCommunityEntryResponse200]]\n</code></pre> <p>Delete a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None featured_entry_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteAFeaturedCommunityEntryResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/get_featured_community_entry/","title":"Module invenio_rest_api_client.api.featured_communities.get_featured_community_entry","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/get_featured_community_entry/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/get_featured_community_entry/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_featured_community_entry_response_200.GetFeaturedCommunityEntryResponse200, NoneType]\n</code></pre> <p>Get Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, GetFeaturedCommunityEntryResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/get_featured_community_entry/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_featured_community_entry_response_200.GetFeaturedCommunityEntryResponse200]]\n</code></pre> <p>Get Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetFeaturedCommunityEntryResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/get_featured_community_entry/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_featured_community_entry_response_200.GetFeaturedCommunityEntryResponse200, NoneType]\n</code></pre> <p>Get Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Union[Any, GetFeaturedCommunityEntryResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/get_featured_community_entry/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_featured_community_entry_response_200.GetFeaturedCommunityEntryResponse200]]\n</code></pre> <p>Get Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetFeaturedCommunityEntryResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/search_featured_communities/","title":"Module invenio_rest_api_client.api.featured_communities.search_featured_communities","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/search_featured_communities/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/search_featured_communities/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    prettyprint: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_featured_communities_response_200.SearchFeaturedCommunitiesResponse200, NoneType]\n</code></pre> <p>Search Featured Communities</p> <p>Parameters:</p> Name Type Description Default prettyprint Union[Unset, str] None q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None type_ Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchFeaturedCommunitiesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/search_featured_communities/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    prettyprint: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_featured_communities_response_200.SearchFeaturedCommunitiesResponse200]]\n</code></pre> <p>Search Featured Communities</p> <p>Parameters:</p> Name Type Description Default prettyprint Union[Unset, str] None q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None type_ Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchFeaturedCommunitiesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/search_featured_communities/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    prettyprint: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_featured_communities_response_200.SearchFeaturedCommunitiesResponse200, NoneType]\n</code></pre> <p>Search Featured Communities</p> <p>Parameters:</p> Name Type Description Default prettyprint Union[Unset, str] None q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None type_ Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchFeaturedCommunitiesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/search_featured_communities/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    prettyprint: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_featured_communities_response_200.SearchFeaturedCommunitiesResponse200]]\n</code></pre> <p>Search Featured Communities</p> <p>Parameters:</p> Name Type Description Default prettyprint Union[Unset, str] None q Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None type_ Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchFeaturedCommunitiesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/update_a_featured_community_entry/","title":"Module invenio_rest_api_client.api.featured_communities.update_a_featured_community_entry","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/update_a_featured_community_entry/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/update_a_featured_community_entry/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    community_id: str,\n    featured_entry_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_featured_community_entry_body.UpdateAFeaturedCommunityEntryBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_featured_community_entry_response_200.UpdateAFeaturedCommunityEntryResponse200, NoneType]\n</code></pre> <p>Update a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None featured_entry_id str None body UpdateAFeaturedCommunityEntryBody None <p>Returns:</p> Type Description None Union[Any, UpdateAFeaturedCommunityEntryResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/update_a_featured_community_entry/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    community_id: str,\n    featured_entry_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_featured_community_entry_body.UpdateAFeaturedCommunityEntryBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_featured_community_entry_response_200.UpdateAFeaturedCommunityEntryResponse200]]\n</code></pre> <p>Update a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None featured_entry_id str None body UpdateAFeaturedCommunityEntryBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateAFeaturedCommunityEntryResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/update_a_featured_community_entry/#sync","title":"sync","text":"<pre><code>def sync(\n    community_id: str,\n    featured_entry_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_featured_community_entry_body.UpdateAFeaturedCommunityEntryBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_featured_community_entry_response_200.UpdateAFeaturedCommunityEntryResponse200, NoneType]\n</code></pre> <p>Update a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None featured_entry_id str None body UpdateAFeaturedCommunityEntryBody None <p>Returns:</p> Type Description None Union[Any, UpdateAFeaturedCommunityEntryResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/featured_communities/update_a_featured_community_entry/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    community_id: str,\n    featured_entry_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_featured_community_entry_body.UpdateAFeaturedCommunityEntryBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_featured_community_entry_response_200.UpdateAFeaturedCommunityEntryResponse200]]\n</code></pre> <p>Update a Featured Community Entry</p> <p>Parameters:</p> Name Type Description Default community_id str None featured_entry_id str None body UpdateAFeaturedCommunityEntryBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateAFeaturedCommunityEntryResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/","title":"Module invenio_rest_api_client.api.groups","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/groups/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.groups.get_avatar_for_group</li> <li>invenio_rest_api_client.api.groups.get_group_by_id</li> <li>invenio_rest_api_client.api.groups.search_groups</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/groups/get_avatar_for_group/","title":"Module invenio_rest_api_client.api.groups.get_avatar_for_group","text":""},{"location":"api/latest/invenio_rest_api_client/api/groups/get_avatar_for_group/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/groups/get_avatar_for_group/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    group_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_avatar_for_group_response_200.GetAvatarForGroupResponse200, NoneType]\n</code></pre> <p>Get avatar for group</p> <p>Parameters:</p> Name Type Description Default group_id str None <p>Returns:</p> Type Description None Union[Any, GetAvatarForGroupResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/get_avatar_for_group/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    group_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_avatar_for_group_response_200.GetAvatarForGroupResponse200]]\n</code></pre> <p>Get avatar for group</p> <p>Parameters:</p> Name Type Description Default group_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAvatarForGroupResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/get_avatar_for_group/#sync","title":"sync","text":"<pre><code>def sync(\n    group_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_avatar_for_group_response_200.GetAvatarForGroupResponse200, NoneType]\n</code></pre> <p>Get avatar for group</p> <p>Parameters:</p> Name Type Description Default group_id str None <p>Returns:</p> Type Description None Union[Any, GetAvatarForGroupResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/get_avatar_for_group/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    group_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_avatar_for_group_response_200.GetAvatarForGroupResponse200]]\n</code></pre> <p>Get avatar for group</p> <p>Parameters:</p> Name Type Description Default group_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAvatarForGroupResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/get_group_by_id/","title":"Module invenio_rest_api_client.api.groups.get_group_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/groups/get_group_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/groups/get_group_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    group_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_group_by_id_response_200.GetGroupByIdResponse200, NoneType]\n</code></pre> <p>Get group by ID</p> <p>Parameters:</p> Name Type Description Default group_id str None <p>Returns:</p> Type Description None Union[Any, GetGroupByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/get_group_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    group_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_group_by_id_response_200.GetGroupByIdResponse200]]\n</code></pre> <p>Get group by ID</p> <p>Parameters:</p> Name Type Description Default group_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetGroupByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/get_group_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    group_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_group_by_id_response_200.GetGroupByIdResponse200, NoneType]\n</code></pre> <p>Get group by ID</p> <p>Parameters:</p> Name Type Description Default group_id str None <p>Returns:</p> Type Description None Union[Any, GetGroupByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/get_group_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    group_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_group_by_id_response_200.GetGroupByIdResponse200]]\n</code></pre> <p>Get group by ID</p> <p>Parameters:</p> Name Type Description Default group_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetGroupByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/search_groups/","title":"Module invenio_rest_api_client.api.groups.search_groups","text":""},{"location":"api/latest/invenio_rest_api_client/api/groups/search_groups/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/groups/search_groups/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: str\n) -&gt; Union[Any, invenio_rest_api_client.models.search_groups_response_200.SearchGroupsResponse200, NoneType]\n</code></pre> <p>Search groups</p> <p>Parameters:</p> Name Type Description Default q str None <p>Returns:</p> Type Description None Union[Any, SearchGroupsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/search_groups/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: str\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_groups_response_200.SearchGroupsResponse200]]\n</code></pre> <p>Search groups</p> <p>Parameters:</p> Name Type Description Default q str None <p>Returns:</p> Type Description None Response[Union[Any, SearchGroupsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/search_groups/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: str\n) -&gt; Union[Any, invenio_rest_api_client.models.search_groups_response_200.SearchGroupsResponse200, NoneType]\n</code></pre> <p>Search groups</p> <p>Parameters:</p> Name Type Description Default q str None <p>Returns:</p> Type Description None Union[Any, SearchGroupsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/groups/search_groups/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: str\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_groups_response_200.SearchGroupsResponse200]]\n</code></pre> <p>Search groups</p> <p>Parameters:</p> Name Type Description Default q str None <p>Returns:</p> Type Description None Response[Union[Any, SearchGroupsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh/","title":"Module invenio_rest_api_client.api.oai_pmh","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.oai_pmh.get_metadata_formats</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh/get_metadata_formats/","title":"Module invenio_rest_api_client.api.oai_pmh.get_metadata_formats","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh/get_metadata_formats/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh/get_metadata_formats/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_metadata_formats_response_200.GetMetadataFormatsResponse200, NoneType]\n</code></pre> <p>Get metadata formats</p> <p>Returns:</p> Type Description None Union[Any, GetMetadataFormatsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh/get_metadata_formats/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_metadata_formats_response_200.GetMetadataFormatsResponse200]]\n</code></pre> <p>Get metadata formats</p> <p>Returns:</p> Type Description None Response[Union[Any, GetMetadataFormatsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh/get_metadata_formats/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_metadata_formats_response_200.GetMetadataFormatsResponse200, NoneType]\n</code></pre> <p>Get metadata formats</p> <p>Returns:</p> Type Description None Union[Any, GetMetadataFormatsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh/get_metadata_formats/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_metadata_formats_response_200.GetMetadataFormatsResponse200]]\n</code></pre> <p>Get metadata formats</p> <p>Returns:</p> Type Description None Response[Union[Any, GetMetadataFormatsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/","title":"Module invenio_rest_api_client.api.oai_pmh_sets","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.oai_pmh_sets.create_a_set</li> <li>invenio_rest_api_client.api.oai_pmh_sets.delete_a_set</li> <li>invenio_rest_api_client.api.oai_pmh_sets.get_a_set_by_id</li> <li>invenio_rest_api_client.api.oai_pmh_sets.search_sets</li> <li>invenio_rest_api_client.api.oai_pmh_sets.update_a_set</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/create_a_set/","title":"Module invenio_rest_api_client.api.oai_pmh_sets.create_a_set","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/create_a_set/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/create_a_set/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_set_body.CreateASetBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a set</p> <p>Parameters:</p> Name Type Description Default body CreateASetBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/create_a_set/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_set_body.CreateASetBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a set</p> <p>Parameters:</p> Name Type Description Default body CreateASetBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/create_a_set/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_set_body.CreateASetBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a set</p> <p>Parameters:</p> Name Type Description Default body CreateASetBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/create_a_set/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_set_body.CreateASetBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a set</p> <p>Parameters:</p> Name Type Description Default body CreateASetBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/delete_a_set/","title":"Module invenio_rest_api_client.api.oai_pmh_sets.delete_a_set","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/delete_a_set/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/delete_a_set/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_set_response_200.DeleteASetResponse200, NoneType]\n</code></pre> <p>Delete a set</p> <p>Parameters:</p> Name Type Description Default set_id str None <p>Returns:</p> Type Description None Union[Any, DeleteASetResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/delete_a_set/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_set_response_200.DeleteASetResponse200]]\n</code></pre> <p>Delete a set</p> <p>Parameters:</p> Name Type Description Default set_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteASetResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/delete_a_set/#sync","title":"sync","text":"<pre><code>def sync(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_set_response_200.DeleteASetResponse200, NoneType]\n</code></pre> <p>Delete a set</p> <p>Parameters:</p> Name Type Description Default set_id str None <p>Returns:</p> Type Description None Union[Any, DeleteASetResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/delete_a_set/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_set_response_200.DeleteASetResponse200]]\n</code></pre> <p>Delete a set</p> <p>Parameters:</p> Name Type Description Default set_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteASetResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/get_a_set_by_id/","title":"Module invenio_rest_api_client.api.oai_pmh_sets.get_a_set_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/get_a_set_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/get_a_set_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_set_by_id_response_200.GetASetByIdResponse200, NoneType]\n</code></pre> <p>Get a set by ID</p> <p>Parameters:</p> Name Type Description Default set_id str None <p>Returns:</p> Type Description None Union[Any, GetASetByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/get_a_set_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_set_by_id_response_200.GetASetByIdResponse200]]\n</code></pre> <p>Get a set by ID</p> <p>Parameters:</p> Name Type Description Default set_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetASetByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/get_a_set_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_set_by_id_response_200.GetASetByIdResponse200, NoneType]\n</code></pre> <p>Get a set by ID</p> <p>Parameters:</p> Name Type Description Default set_id str None <p>Returns:</p> Type Description None Union[Any, GetASetByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/get_a_set_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_set_by_id_response_200.GetASetByIdResponse200]]\n</code></pre> <p>Get a set by ID</p> <p>Parameters:</p> Name Type Description Default set_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetASetByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/search_sets/","title":"Module invenio_rest_api_client.api.oai_pmh_sets.search_sets","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/search_sets/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/search_sets/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_sets_response_200.SearchSetsResponse200, NoneType]\n</code></pre> <p>Search sets</p> <p>Returns:</p> Type Description None Union[Any, SearchSetsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/search_sets/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_sets_response_200.SearchSetsResponse200]]\n</code></pre> <p>Search sets</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchSetsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/search_sets/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_sets_response_200.SearchSetsResponse200, NoneType]\n</code></pre> <p>Search sets</p> <p>Returns:</p> Type Description None Union[Any, SearchSetsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/search_sets/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_sets_response_200.SearchSetsResponse200]]\n</code></pre> <p>Search sets</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchSetsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/update_a_set/","title":"Module invenio_rest_api_client.api.oai_pmh_sets.update_a_set","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/update_a_set/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/update_a_set/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_set_body.UpdateASetBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_set_response_200.UpdateASetResponse200, NoneType]\n</code></pre> <p>Update a set</p> <p>Parameters:</p> Name Type Description Default set_id str None body UpdateASetBody None <p>Returns:</p> Type Description None Union[Any, UpdateASetResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/update_a_set/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_set_body.UpdateASetBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_set_response_200.UpdateASetResponse200]]\n</code></pre> <p>Update a set</p> <p>Parameters:</p> Name Type Description Default set_id str None body UpdateASetBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateASetResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/update_a_set/#sync","title":"sync","text":"<pre><code>def sync(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_set_body.UpdateASetBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_set_response_200.UpdateASetResponse200, NoneType]\n</code></pre> <p>Update a set</p> <p>Parameters:</p> Name Type Description Default set_id str None body UpdateASetBody None <p>Returns:</p> Type Description None Union[Any, UpdateASetResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/oai_pmh_sets/update_a_set/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    set_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_set_body.UpdateASetBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_set_response_200.UpdateASetResponse200]]\n</code></pre> <p>Update a set</p> <p>Parameters:</p> Name Type Description Default set_id str None body UpdateASetBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateASetResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/","title":"Module invenio_rest_api_client.api.records","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/records/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.records.create_a_draft_record</li> <li>invenio_rest_api_client.api.records.create_an_access_link</li> <li>invenio_rest_api_client.api.records.delete_an_access_link</li> <li>invenio_rest_api_client.api.records.delete_record_community</li> <li>invenio_rest_api_client.api.records.get_a_record_by_id</li> <li>invenio_rest_api_client.api.records.get_an_access_link_by_id</li> <li>invenio_rest_api_client.api.records.list_access_links</li> <li>invenio_rest_api_client.api.records.search_records</li> <li>invenio_rest_api_client.api.records.update_an_access_link</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/records/create_a_draft_record/","title":"Module invenio_rest_api_client.api.records.create_a_draft_record","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/create_a_draft_record/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/create_a_draft_record/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_draft_record_body.CreateADraftRecordBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a draft record</p> <p>Parameters:</p> Name Type Description Default body CreateADraftRecordBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/create_a_draft_record/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_draft_record_body.CreateADraftRecordBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a draft record</p> <p>Parameters:</p> Name Type Description Default body CreateADraftRecordBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/create_a_draft_record/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_draft_record_body.CreateADraftRecordBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a draft record</p> <p>Parameters:</p> Name Type Description Default body CreateADraftRecordBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/create_a_draft_record/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_a_draft_record_body.CreateADraftRecordBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a draft record</p> <p>Parameters:</p> Name Type Description Default body CreateADraftRecordBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/create_an_access_link/","title":"Module invenio_rest_api_client.api.records.create_an_access_link","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/create_an_access_link/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/create_an_access_link/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_an_access_link_body.CreateAnAccessLinkBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None body CreateAnAccessLinkBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/create_an_access_link/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_an_access_link_body.CreateAnAccessLinkBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None body CreateAnAccessLinkBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/create_an_access_link/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_an_access_link_body.CreateAnAccessLinkBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None body CreateAnAccessLinkBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/create_an_access_link/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.create_an_access_link_body.CreateAnAccessLinkBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None body CreateAnAccessLinkBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/delete_an_access_link/","title":"Module invenio_rest_api_client.api.records.delete_an_access_link","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/delete_an_access_link/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/delete_an_access_link/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_an_access_link_response_200.DeleteAnAccessLinkResponse200, NoneType]\n</code></pre> <p>Delete an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None <p>Returns:</p> Type Description None Union[Any, DeleteAnAccessLinkResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/delete_an_access_link/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_an_access_link_response_200.DeleteAnAccessLinkResponse200]]\n</code></pre> <p>Delete an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteAnAccessLinkResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/delete_an_access_link/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_an_access_link_response_200.DeleteAnAccessLinkResponse200, NoneType]\n</code></pre> <p>Delete an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None <p>Returns:</p> Type Description None Union[Any, DeleteAnAccessLinkResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/delete_an_access_link/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_an_access_link_response_200.DeleteAnAccessLinkResponse200]]\n</code></pre> <p>Delete an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteAnAccessLinkResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/delete_record_community/","title":"Module invenio_rest_api_client.api.records.delete_record_community","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/delete_record_community/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/delete_record_community/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_record_community_response_200.DeleteRecordCommunityResponse200, NoneType]\n</code></pre> <p>Delete Record community</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, DeleteRecordCommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/delete_record_community/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_record_community_response_200.DeleteRecordCommunityResponse200]]\n</code></pre> <p>Delete Record community</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteRecordCommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/delete_record_community/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_record_community_response_200.DeleteRecordCommunityResponse200, NoneType]\n</code></pre> <p>Delete Record community</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, DeleteRecordCommunityResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/delete_record_community/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_record_community_response_200.DeleteRecordCommunityResponse200]]\n</code></pre> <p>Delete Record community</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteRecordCommunityResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/get_a_record_by_id/","title":"Module invenio_rest_api_client.api.records.get_a_record_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/get_a_record_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/get_a_record_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_record_by_id_response_200.GetARecordByIdResponse200, NoneType]\n</code></pre> <p>Get a record by ID</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, GetARecordByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/get_a_record_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_record_by_id_response_200.GetARecordByIdResponse200]]\n</code></pre> <p>Get a record by ID</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetARecordByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/get_a_record_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_record_by_id_response_200.GetARecordByIdResponse200, NoneType]\n</code></pre> <p>Get a record by ID</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, GetARecordByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/get_a_record_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_record_by_id_response_200.GetARecordByIdResponse200]]\n</code></pre> <p>Get a record by ID</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetARecordByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/get_an_access_link_by_id/","title":"Module invenio_rest_api_client.api.records.get_an_access_link_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/get_an_access_link_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/get_an_access_link_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_an_access_link_by_id_response_200.GetAnAccessLinkByIdResponse200, NoneType]\n</code></pre> <p>Get an access link by ID</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None <p>Returns:</p> Type Description None Union[Any, GetAnAccessLinkByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/get_an_access_link_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_an_access_link_by_id_response_200.GetAnAccessLinkByIdResponse200]]\n</code></pre> <p>Get an access link by ID</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAnAccessLinkByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/get_an_access_link_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_an_access_link_by_id_response_200.GetAnAccessLinkByIdResponse200, NoneType]\n</code></pre> <p>Get an access link by ID</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None <p>Returns:</p> Type Description None Union[Any, GetAnAccessLinkByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/get_an_access_link_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_an_access_link_by_id_response_200.GetAnAccessLinkByIdResponse200]]\n</code></pre> <p>Get an access link by ID</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAnAccessLinkByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/list_access_links/","title":"Module invenio_rest_api_client.api.records.list_access_links","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/list_access_links/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/list_access_links/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.list_access_links_response_200.ListAccessLinksResponse200, NoneType]\n</code></pre> <p>List access links</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ListAccessLinksResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/list_access_links/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.list_access_links_response_200.ListAccessLinksResponse200]]\n</code></pre> <p>List access links</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ListAccessLinksResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/list_access_links/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.list_access_links_response_200.ListAccessLinksResponse200, NoneType]\n</code></pre> <p>List access links</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ListAccessLinksResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/list_access_links/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.list_access_links_response_200.ListAccessLinksResponse200]]\n</code></pre> <p>List access links</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ListAccessLinksResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/search_records/","title":"Module invenio_rest_api_client.api.records.search_records","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/search_records/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/search_records/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    allversions: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_records_response_200.SearchRecordsResponse200, NoneType]\n</code></pre> <p>Search records</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None allversions Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchRecordsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/search_records/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    allversions: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_records_response_200.SearchRecordsResponse200]]\n</code></pre> <p>Search records</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None allversions Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchRecordsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/search_records/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    allversions: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_records_response_200.SearchRecordsResponse200, NoneType]\n</code></pre> <p>Search records</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None allversions Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchRecordsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/search_records/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    allversions: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_records_response_200.SearchRecordsResponse200]]\n</code></pre> <p>Search records</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None allversions Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchRecordsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/update_an_access_link/","title":"Module invenio_rest_api_client.api.records.update_an_access_link","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/update_an_access_link/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records/update_an_access_link/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_an_access_link_body.UpdateAnAccessLinkBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_an_access_link_response_200.UpdateAnAccessLinkResponse200, NoneType]\n</code></pre> <p>Update an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None body UpdateAnAccessLinkBody None <p>Returns:</p> Type Description None Union[Any, UpdateAnAccessLinkResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/update_an_access_link/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_an_access_link_body.UpdateAnAccessLinkBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_an_access_link_response_200.UpdateAnAccessLinkResponse200]]\n</code></pre> <p>Update an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None body UpdateAnAccessLinkBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateAnAccessLinkResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/update_an_access_link/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_an_access_link_body.UpdateAnAccessLinkBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_an_access_link_response_200.UpdateAnAccessLinkResponse200, NoneType]\n</code></pre> <p>Update an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None body UpdateAnAccessLinkBody None <p>Returns:</p> Type Description None Union[Any, UpdateAnAccessLinkResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records/update_an_access_link/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    link_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_an_access_link_body.UpdateAnAccessLinkBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_an_access_link_response_200.UpdateAnAccessLinkResponse200]]\n</code></pre> <p>Update an access link</p> <p>Parameters:</p> Name Type Description Default record_id str None link_id str None body UpdateAnAccessLinkBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateAnAccessLinkResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/","title":"Module invenio_rest_api_client.api.records_files","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/records_files/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.records_files.download_a_record_file</li> <li>invenio_rest_api_client.api.records_files.get_a_record_files_metadata</li> <li>invenio_rest_api_client.api.records_files.list_a_records_files</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/records_files/download_a_record_file/","title":"Module invenio_rest_api_client.api.records_files.download_a_record_file","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_files/download_a_record_file/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_files/download_a_record_file/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.download_a_record_file_response_200.DownloadARecordFileResponse200, NoneType]\n</code></pre> <p>Download a record file</p> <p>Parameters:</p> Name Type Description Default record_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, DownloadARecordFileResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/download_a_record_file/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.download_a_record_file_response_200.DownloadARecordFileResponse200]]\n</code></pre> <p>Download a record file</p> <p>Parameters:</p> Name Type Description Default record_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, DownloadARecordFileResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/download_a_record_file/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.download_a_record_file_response_200.DownloadARecordFileResponse200, NoneType]\n</code></pre> <p>Download a record file</p> <p>Parameters:</p> Name Type Description Default record_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, DownloadARecordFileResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/download_a_record_file/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.download_a_record_file_response_200.DownloadARecordFileResponse200]]\n</code></pre> <p>Download a record file</p> <p>Parameters:</p> Name Type Description Default record_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, DownloadARecordFileResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/get_a_record_files_metadata/","title":"Module invenio_rest_api_client.api.records_files.get_a_record_files_metadata","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_files/get_a_record_files_metadata/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_files/get_a_record_files_metadata/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_record_files_metadata_response_200.GetARecordFilesMetadataResponse200, NoneType]\n</code></pre> <p>Get a record file's metadata</p> <p>Parameters:</p> Name Type Description Default record_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, GetARecordFilesMetadataResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/get_a_record_files_metadata/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_record_files_metadata_response_200.GetARecordFilesMetadataResponse200]]\n</code></pre> <p>Get a record file's metadata</p> <p>Parameters:</p> Name Type Description Default record_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, GetARecordFilesMetadataResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/get_a_record_files_metadata/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_record_files_metadata_response_200.GetARecordFilesMetadataResponse200, NoneType]\n</code></pre> <p>Get a record file's metadata</p> <p>Parameters:</p> Name Type Description Default record_id str None file_name str None <p>Returns:</p> Type Description None Union[Any, GetARecordFilesMetadataResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/get_a_record_files_metadata/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    file_name: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_record_files_metadata_response_200.GetARecordFilesMetadataResponse200]]\n</code></pre> <p>Get a record file's metadata</p> <p>Parameters:</p> Name Type Description Default record_id str None file_name str None <p>Returns:</p> Type Description None Response[Union[Any, GetARecordFilesMetadataResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/list_a_records_files/","title":"Module invenio_rest_api_client.api.records_files.list_a_records_files","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_files/list_a_records_files/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_files/list_a_records_files/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.list_a_records_files_response_200.ListARecordsFilesResponse200, NoneType]\n</code></pre> <p>List a record's files</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ListARecordsFilesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/list_a_records_files/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.list_a_records_files_response_200.ListARecordsFilesResponse200]]\n</code></pre> <p>List a record's files</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ListARecordsFilesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/list_a_records_files/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.list_a_records_files_response_200.ListARecordsFilesResponse200, NoneType]\n</code></pre> <p>List a record's files</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, ListARecordsFilesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_files/list_a_records_files/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.list_a_records_files_response_200.ListARecordsFilesResponse200]]\n</code></pre> <p>List a record's files</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, ListARecordsFilesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/","title":"Module invenio_rest_api_client.api.records_versions","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/records_versions/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.records_versions.create_a_new_version</li> <li>invenio_rest_api_client.api.records_versions.get_all_versions</li> <li>invenio_rest_api_client.api.records_versions.get_latest_version</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/records_versions/create_a_new_version/","title":"Module invenio_rest_api_client.api.records_versions.create_a_new_version","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_versions/create_a_new_version/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_versions/create_a_new_version/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a new version</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/create_a_new_version/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a new version</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/create_a_new_version/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Create a new version</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/create_a_new_version/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Create a new version</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_all_versions/","title":"Module invenio_rest_api_client.api.records_versions.get_all_versions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_all_versions/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_all_versions/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_all_versions_response_200.GetAllVersionsResponse200, NoneType]\n</code></pre> <p>Get all versions</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, GetAllVersionsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_all_versions/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_all_versions_response_200.GetAllVersionsResponse200]]\n</code></pre> <p>Get all versions</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAllVersionsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_all_versions/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_all_versions_response_200.GetAllVersionsResponse200, NoneType]\n</code></pre> <p>Get all versions</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, GetAllVersionsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_all_versions/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_all_versions_response_200.GetAllVersionsResponse200]]\n</code></pre> <p>Get all versions</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAllVersionsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_latest_version/","title":"Module invenio_rest_api_client.api.records_versions.get_latest_version","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_latest_version/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_latest_version/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_latest_version_response_200.GetLatestVersionResponse200, NoneType]\n</code></pre> <p>Get latest version</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, GetLatestVersionResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_latest_version/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_latest_version_response_200.GetLatestVersionResponse200]]\n</code></pre> <p>Get latest version</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetLatestVersionResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_latest_version/#sync","title":"sync","text":"<pre><code>def sync(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_latest_version_response_200.GetLatestVersionResponse200, NoneType]\n</code></pre> <p>Get latest version</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Union[Any, GetLatestVersionResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/records_versions/get_latest_version/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    record_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_latest_version_response_200.GetLatestVersionResponse200]]\n</code></pre> <p>Get latest version</p> <p>Parameters:</p> Name Type Description Default record_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetLatestVersionResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/","title":"Module invenio_rest_api_client.api.request_actions","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/request_actions/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.request_actions.accept_a_request</li> <li>invenio_rest_api_client.api.request_actions.cancel_a_request</li> <li>invenio_rest_api_client.api.request_actions.decline_a_request</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/request_actions/accept_a_request/","title":"Module invenio_rest_api_client.api.request_actions.accept_a_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/request_actions/accept_a_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/request_actions/accept_a_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.accept_a_request_body.AcceptARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Accept a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body AcceptARequestBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/accept_a_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.accept_a_request_body.AcceptARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Accept a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body AcceptARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/accept_a_request/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.accept_a_request_body.AcceptARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Accept a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body AcceptARequestBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/accept_a_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.accept_a_request_body.AcceptARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Accept a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body AcceptARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/cancel_a_request/","title":"Module invenio_rest_api_client.api.request_actions.cancel_a_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/request_actions/cancel_a_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/request_actions/cancel_a_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.cancel_a_request_body.CancelARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Cancel a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body CancelARequestBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/cancel_a_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.cancel_a_request_body.CancelARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Cancel a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body CancelARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/cancel_a_request/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.cancel_a_request_body.CancelARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Cancel a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body CancelARequestBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/cancel_a_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.cancel_a_request_body.CancelARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Cancel a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body CancelARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/decline_a_request/","title":"Module invenio_rest_api_client.api.request_actions.decline_a_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/request_actions/decline_a_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/request_actions/decline_a_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.decline_a_request_body.DeclineARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Decline a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body DeclineARequestBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/decline_a_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.decline_a_request_body.DeclineARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Decline a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body DeclineARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/decline_a_request/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.decline_a_request_body.DeclineARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Decline a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body DeclineARequestBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/request_actions/decline_a_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.decline_a_request_body.DeclineARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Decline a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body DeclineARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/","title":"Module invenio_rest_api_client.api.requests","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/requests/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.requests.delete_a_comment</li> <li>invenio_rest_api_client.api.requests.get_a_comment</li> <li>invenio_rest_api_client.api.requests.get_a_request</li> <li>invenio_rest_api_client.api.requests.get_a_requests_timeline</li> <li>invenio_rest_api_client.api.requests.search_requests</li> <li>invenio_rest_api_client.api.requests.submit_a_comment_on_a_request</li> <li>invenio_rest_api_client.api.requests.update_a_comment</li> <li>invenio_rest_api_client.api.requests.update_a_request</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/requests/delete_a_comment/","title":"Module invenio_rest_api_client.api.requests.delete_a_comment","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/delete_a_comment/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/delete_a_comment/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_comment_response_200.DeleteACommentResponse200, NoneType]\n</code></pre> <p>Delete a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None <p>Returns:</p> Type Description None Union[Any, DeleteACommentResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/delete_a_comment/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_comment_response_200.DeleteACommentResponse200]]\n</code></pre> <p>Delete a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteACommentResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/delete_a_comment/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.delete_a_comment_response_200.DeleteACommentResponse200, NoneType]\n</code></pre> <p>Delete a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None <p>Returns:</p> Type Description None Union[Any, DeleteACommentResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/delete_a_comment/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.delete_a_comment_response_200.DeleteACommentResponse200]]\n</code></pre> <p>Delete a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None <p>Returns:</p> Type Description None Response[Union[Any, DeleteACommentResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_comment/","title":"Module invenio_rest_api_client.api.requests.get_a_comment","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_comment/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_comment/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_comment_response_200.GetACommentResponse200, NoneType]\n</code></pre> <p>Get a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None <p>Returns:</p> Type Description None Union[Any, GetACommentResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_comment/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_comment_response_200.GetACommentResponse200]]\n</code></pre> <p>Get a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetACommentResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_comment/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_comment_response_200.GetACommentResponse200, NoneType]\n</code></pre> <p>Get a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None <p>Returns:</p> Type Description None Union[Any, GetACommentResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_comment/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_comment_response_200.GetACommentResponse200]]\n</code></pre> <p>Get a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetACommentResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_request/","title":"Module invenio_rest_api_client.api.requests.get_a_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_request_response_200.GetARequestResponse200, NoneType]\n</code></pre> <p>Get a request</p> <p>Parameters:</p> Name Type Description Default request_id str None <p>Returns:</p> Type Description None Union[Any, GetARequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_request_response_200.GetARequestResponse200]]\n</code></pre> <p>Get a request</p> <p>Parameters:</p> Name Type Description Default request_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetARequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_request/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_request_response_200.GetARequestResponse200, NoneType]\n</code></pre> <p>Get a request</p> <p>Parameters:</p> Name Type Description Default request_id str None <p>Returns:</p> Type Description None Union[Any, GetARequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_request_response_200.GetARequestResponse200]]\n</code></pre> <p>Get a request</p> <p>Parameters:</p> Name Type Description Default request_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetARequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_requests_timeline/","title":"Module invenio_rest_api_client.api.requests.get_a_requests_timeline","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_requests_timeline/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_requests_timeline/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_requests_timeline_response_200.GetARequestsTimelineResponse200, NoneType]\n</code></pre> <p>Get a request's timeline</p> <p>Parameters:</p> Name Type Description Default request_id str None <p>Returns:</p> Type Description None Union[Any, GetARequestsTimelineResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_requests_timeline/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_requests_timeline_response_200.GetARequestsTimelineResponse200]]\n</code></pre> <p>Get a request's timeline</p> <p>Parameters:</p> Name Type Description Default request_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetARequestsTimelineResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_requests_timeline/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_requests_timeline_response_200.GetARequestsTimelineResponse200, NoneType]\n</code></pre> <p>Get a request's timeline</p> <p>Parameters:</p> Name Type Description Default request_id str None <p>Returns:</p> Type Description None Union[Any, GetARequestsTimelineResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/get_a_requests_timeline/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_requests_timeline_response_200.GetARequestsTimelineResponse200]]\n</code></pre> <p>Get a request's timeline</p> <p>Parameters:</p> Name Type Description Default request_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetARequestsTimelineResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/search_requests/","title":"Module invenio_rest_api_client.api.requests.search_requests","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/search_requests/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/search_requests/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_requests_response_200.SearchRequestsResponse200, NoneType]\n</code></pre> <p>Search requests</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchRequestsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/search_requests/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_requests_response_200.SearchRequestsResponse200]]\n</code></pre> <p>Search requests</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchRequestsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/search_requests/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_requests_response_200.SearchRequestsResponse200, NoneType]\n</code></pre> <p>Search requests</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchRequestsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/search_requests/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_requests_response_200.SearchRequestsResponse200]]\n</code></pre> <p>Search requests</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchRequestsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/submit_a_comment_on_a_request/","title":"Module invenio_rest_api_client.api.requests.submit_a_comment_on_a_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/submit_a_comment_on_a_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/submit_a_comment_on_a_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.submit_a_comment_on_a_request_body.SubmitACommentOnARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Submit a comment on a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body SubmitACommentOnARequestBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/submit_a_comment_on_a_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.submit_a_comment_on_a_request_body.SubmitACommentOnARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Submit a comment on a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body SubmitACommentOnARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/submit_a_comment_on_a_request/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.submit_a_comment_on_a_request_body.SubmitACommentOnARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Submit a comment on a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body SubmitACommentOnARequestBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/submit_a_comment_on_a_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.submit_a_comment_on_a_request_body.SubmitACommentOnARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Submit a comment on a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body SubmitACommentOnARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_comment/","title":"Module invenio_rest_api_client.api.requests.update_a_comment","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_comment/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_comment/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_comment_body.UpdateACommentBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_comment_response_200.UpdateACommentResponse200, NoneType]\n</code></pre> <p>Update a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None body UpdateACommentBody None <p>Returns:</p> Type Description None Union[Any, UpdateACommentResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_comment/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_comment_body.UpdateACommentBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_comment_response_200.UpdateACommentResponse200]]\n</code></pre> <p>Update a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None body UpdateACommentBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateACommentResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_comment/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_comment_body.UpdateACommentBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_comment_response_200.UpdateACommentResponse200, NoneType]\n</code></pre> <p>Update a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None body UpdateACommentBody None <p>Returns:</p> Type Description None Union[Any, UpdateACommentResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_comment/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    comment_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_comment_body.UpdateACommentBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_comment_response_200.UpdateACommentResponse200]]\n</code></pre> <p>Update a comment</p> <p>Parameters:</p> Name Type Description Default request_id str None comment_id str None body UpdateACommentBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateACommentResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_request/","title":"Module invenio_rest_api_client.api.requests.update_a_request","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_request/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_request/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_request_body.UpdateARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_request_response_200.UpdateARequestResponse200, NoneType]\n</code></pre> <p>Update a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body UpdateARequestBody None <p>Returns:</p> Type Description None Union[Any, UpdateARequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_request/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_request_body.UpdateARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_request_response_200.UpdateARequestResponse200]]\n</code></pre> <p>Update a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body UpdateARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateARequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_request/#sync","title":"sync","text":"<pre><code>def sync(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_request_body.UpdateARequestBody\n) -&gt; Union[Any, invenio_rest_api_client.models.update_a_request_response_200.UpdateARequestResponse200, NoneType]\n</code></pre> <p>Update a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body UpdateARequestBody None <p>Returns:</p> Type Description None Union[Any, UpdateARequestResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/requests/update_a_request/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    request_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    body: invenio_rest_api_client.models.update_a_request_body.UpdateARequestBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.update_a_request_response_200.UpdateARequestResponse200]]\n</code></pre> <p>Update a request</p> <p>Parameters:</p> Name Type Description Default request_id str None body UpdateARequestBody None <p>Returns:</p> Type Description None Response[Union[Any, UpdateARequestResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/statistics/","title":"Module invenio_rest_api_client.api.statistics","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/statistics/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.statistics.get_statistics</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/statistics/get_statistics/","title":"Module invenio_rest_api_client.api.statistics.get_statistics","text":""},{"location":"api/latest/invenio_rest_api_client/api/statistics/get_statistics/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/statistics/get_statistics/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client],\n    body: invenio_rest_api_client.models.get_statistics_body.GetStatisticsBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Get statistics</p> <p>Parameters:</p> Name Type Description Default body GetStatisticsBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/statistics/get_statistics/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client],\n    body: invenio_rest_api_client.models.get_statistics_body.GetStatisticsBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Get statistics</p> <p>Parameters:</p> Name Type Description Default body GetStatisticsBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/statistics/get_statistics/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client],\n    body: invenio_rest_api_client.models.get_statistics_body.GetStatisticsBody\n) -&gt; Union[Any, invenio_rest_api_client.models.created.Created, NoneType]\n</code></pre> <p>Get statistics</p> <p>Parameters:</p> Name Type Description Default body GetStatisticsBody None <p>Returns:</p> Type Description None Union[Any, Created] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/statistics/get_statistics/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: Union[invenio_rest_api_client.client.AuthenticatedClient, invenio_rest_api_client.client.Client],\n    body: invenio_rest_api_client.models.get_statistics_body.GetStatisticsBody\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.created.Created]]\n</code></pre> <p>Get statistics</p> <p>Parameters:</p> Name Type Description Default body GetStatisticsBody None <p>Returns:</p> Type Description None Response[Union[Any, Created]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/","title":"Module invenio_rest_api_client.api.users","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/users/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.users.get_a_user_by_id</li> <li>invenio_rest_api_client.api.users.get_all_draft_records</li> <li>invenio_rest_api_client.api.users.get_avatar_for_user</li> <li>invenio_rest_api_client.api.users.get_user_by_id_detailed</li> <li>invenio_rest_api_client.api.users.search_user_communities</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/users/get_a_user_by_id/","title":"Module invenio_rest_api_client.api.users.get_a_user_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/get_a_user_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/get_a_user_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_user_by_id_response_200.GetAUserByIdResponse200, NoneType]\n</code></pre> <p>Get a user by ID</p> <p>Returns:</p> Type Description None Union[Any, GetAUserByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_a_user_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_user_by_id_response_200.GetAUserByIdResponse200]]\n</code></pre> <p>Get a user by ID</p> <p>Returns:</p> Type Description None Response[Union[Any, GetAUserByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_a_user_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_user_by_id_response_200.GetAUserByIdResponse200, NoneType]\n</code></pre> <p>Get a user by ID</p> <p>Returns:</p> Type Description None Union[Any, GetAUserByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_a_user_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_user_by_id_response_200.GetAUserByIdResponse200]]\n</code></pre> <p>Get a user by ID</p> <p>Returns:</p> Type Description None Response[Union[Any, GetAUserByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_all_draft_records/","title":"Module invenio_rest_api_client.api.users.get_all_draft_records","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/get_all_draft_records/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/get_all_draft_records/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    search: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.get_all_draft_records_response_200.GetAllDraftRecordsResponse200, NoneType]\n</code></pre> <p>Get all draft records</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None search Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, GetAllDraftRecordsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_all_draft_records/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    search: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_all_draft_records_response_200.GetAllDraftRecordsResponse200]]\n</code></pre> <p>Get all draft records</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None search Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, GetAllDraftRecordsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_all_draft_records/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    search: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.get_all_draft_records_response_200.GetAllDraftRecordsResponse200, NoneType]\n</code></pre> <p>Get all draft records</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None search Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, GetAllDraftRecordsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_all_draft_records/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    search: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_all_draft_records_response_200.GetAllDraftRecordsResponse200]]\n</code></pre> <p>Get all draft records</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None search Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, GetAllDraftRecordsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_avatar_for_user/","title":"Module invenio_rest_api_client.api.users.get_avatar_for_user","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/get_avatar_for_user/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/get_avatar_for_user/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    user_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_avatar_for_user_response_200.GetAvatarForUserResponse200, NoneType]\n</code></pre> <p>Get avatar for user</p> <p>Parameters:</p> Name Type Description Default user_id str None <p>Returns:</p> Type Description None Union[Any, GetAvatarForUserResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_avatar_for_user/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    user_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_avatar_for_user_response_200.GetAvatarForUserResponse200]]\n</code></pre> <p>Get avatar for user</p> <p>Parameters:</p> Name Type Description Default user_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAvatarForUserResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_avatar_for_user/#sync","title":"sync","text":"<pre><code>def sync(\n    user_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_avatar_for_user_response_200.GetAvatarForUserResponse200, NoneType]\n</code></pre> <p>Get avatar for user</p> <p>Parameters:</p> Name Type Description Default user_id str None <p>Returns:</p> Type Description None Union[Any, GetAvatarForUserResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_avatar_for_user/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    user_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_avatar_for_user_response_200.GetAvatarForUserResponse200]]\n</code></pre> <p>Get avatar for user</p> <p>Parameters:</p> Name Type Description Default user_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAvatarForUserResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_user_by_id_detailed/","title":"Module invenio_rest_api_client.api.users.get_user_by_id_detailed","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/get_user_by_id_detailed/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/get_user_by_id_detailed/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    user_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_user_by_id_detailed_response_200.GetUserByIdDetailedResponse200, NoneType]\n</code></pre> <p>Get a user by ID</p> <p>Parameters:</p> Name Type Description Default user_id str None <p>Returns:</p> Type Description None Union[Any, GetUserByIdDetailedResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_user_by_id_detailed/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    user_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_user_by_id_detailed_response_200.GetUserByIdDetailedResponse200]]\n</code></pre> <p>Get a user by ID</p> <p>Parameters:</p> Name Type Description Default user_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetUserByIdDetailedResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_user_by_id_detailed/#sync","title":"sync","text":"<pre><code>def sync(\n    user_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_user_by_id_detailed_response_200.GetUserByIdDetailedResponse200, NoneType]\n</code></pre> <p>Get a user by ID</p> <p>Parameters:</p> Name Type Description Default user_id str None <p>Returns:</p> Type Description None Union[Any, GetUserByIdDetailedResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/get_user_by_id_detailed/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    user_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_user_by_id_detailed_response_200.GetUserByIdDetailedResponse200]]\n</code></pre> <p>Get a user by ID</p> <p>Parameters:</p> Name Type Description Default user_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetUserByIdDetailedResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/search_user_communities/","title":"Module invenio_rest_api_client.api.users.search_user_communities","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/search_user_communities/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/users/search_user_communities/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_user_communities_response_200.SearchUserCommunitiesResponse200, NoneType]\n</code></pre> <p>Search User Communities</p> <p>Parameters:</p> Name Type Description Default page Union[Unset, str] None type_ Union[Unset, str] None size Union[Unset, str] None sort Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchUserCommunitiesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/search_user_communities/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_user_communities_response_200.SearchUserCommunitiesResponse200]]\n</code></pre> <p>Search User Communities</p> <p>Parameters:</p> Name Type Description Default page Union[Unset, str] None type_ Union[Unset, str] None size Union[Unset, str] None sort Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchUserCommunitiesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/search_user_communities/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_user_communities_response_200.SearchUserCommunitiesResponse200, NoneType]\n</code></pre> <p>Search User Communities</p> <p>Parameters:</p> Name Type Description Default page Union[Unset, str] None type_ Union[Unset, str] None size Union[Unset, str] None sort Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchUserCommunitiesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/users/search_user_communities/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_user_communities_response_200.SearchUserCommunitiesResponse200]]\n</code></pre> <p>Search User Communities</p> <p>Parameters:</p> Name Type Description Default page Union[Unset, str] None type_ Union[Unset, str] None size Union[Unset, str] None sort Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchUserCommunitiesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/","title":"Module invenio_rest_api_client.api.vocabularies","text":"<p>Contains endpoint functions for accessing the API</p>"},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.api.vocabularies.get_a_vocabulary_record_by_id</li> <li>invenio_rest_api_client.api.vocabularies.get_names</li> <li>invenio_rest_api_client.api.vocabularies.get_names_by_id</li> <li>invenio_rest_api_client.api.vocabularies.search_vocabularies</li> <li>invenio_rest_api_client.api.vocabularies.search_vocabularies_languages</li> <li>invenio_rest_api_client.api.vocabularies.search_vocabularies_licenses</li> <li>invenio_rest_api_client.api.vocabularies.search_vocabularies_relationtypes</li> <li>invenio_rest_api_client.api.vocabularies.search_vocabularies_resourcetypes</li> <li>invenio_rest_api_client.api.vocabularies.specific_vocabularies_affiliations</li> <li>invenio_rest_api_client.api.vocabularies.specific_vocabularies_affiliations_by_id</li> <li>invenio_rest_api_client.api.vocabularies.specific_vocabularies_awards</li> <li>invenio_rest_api_client.api.vocabularies.specific_vocabularies_awards_by_id</li> <li>invenio_rest_api_client.api.vocabularies.specific_vocabularies_funders</li> <li>invenio_rest_api_client.api.vocabularies.specific_vocabularies_funders_by_id</li> <li>invenio_rest_api_client.api.vocabularies.specific_vocabularies_subjects</li> <li>invenio_rest_api_client.api.vocabularies.specific_vocabularies_subjects_by_id</li> <li>invenio_rest_api_client.api.vocabularies.vocabularies_contributorsroles</li> <li>invenio_rest_api_client.api.vocabularies.vocabularies_creatorsroles</li> <li>invenio_rest_api_client.api.vocabularies.vocabularies_datetypes</li> <li>invenio_rest_api_client.api.vocabularies.vocabularies_descriptiontypes</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_a_vocabulary_record_by_id/","title":"Module invenio_rest_api_client.api.vocabularies.get_a_vocabulary_record_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_a_vocabulary_record_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_a_vocabulary_record_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    vocabularies_type: str,\n    vocabularies_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_vocabulary_record_by_id_response_200.GetAVocabularyRecordByIdResponse200, NoneType]\n</code></pre> <p>Get a vocabulary record by ID</p> <p>Parameters:</p> Name Type Description Default vocabularies_type str None vocabularies_id str None <p>Returns:</p> Type Description None Union[Any, GetAVocabularyRecordByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_a_vocabulary_record_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    vocabularies_type: str,\n    vocabularies_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_vocabulary_record_by_id_response_200.GetAVocabularyRecordByIdResponse200]]\n</code></pre> <p>Get a vocabulary record by ID</p> <p>Parameters:</p> Name Type Description Default vocabularies_type str None vocabularies_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAVocabularyRecordByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_a_vocabulary_record_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    vocabularies_type: str,\n    vocabularies_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_a_vocabulary_record_by_id_response_200.GetAVocabularyRecordByIdResponse200, NoneType]\n</code></pre> <p>Get a vocabulary record by ID</p> <p>Parameters:</p> Name Type Description Default vocabularies_type str None vocabularies_id str None <p>Returns:</p> Type Description None Union[Any, GetAVocabularyRecordByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_a_vocabulary_record_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    vocabularies_type: str,\n    vocabularies_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_a_vocabulary_record_by_id_response_200.GetAVocabularyRecordByIdResponse200]]\n</code></pre> <p>Get a vocabulary record by ID</p> <p>Parameters:</p> Name Type Description Default vocabularies_type str None vocabularies_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetAVocabularyRecordByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names/","title":"Module invenio_rest_api_client.api.vocabularies.get_names","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.get_names_response_200.GetNamesResponse200, NoneType]\n</code></pre> <p>Get names</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None suggest Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, GetNamesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_names_response_200.GetNamesResponse200]]\n</code></pre> <p>Get names</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None suggest Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, GetNamesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.get_names_response_200.GetNamesResponse200, NoneType]\n</code></pre> <p>Get names</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None suggest Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, GetNamesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_names_response_200.GetNamesResponse200]]\n</code></pre> <p>Get names</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None suggest Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, GetNamesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names_by_id/","title":"Module invenio_rest_api_client.api.vocabularies.get_names_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    voc_names_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_names_by_id_response_200.GetNamesByIdResponse200, NoneType]\n</code></pre> <p>Get names by ID</p> <p>Parameters:</p> Name Type Description Default voc_names_id str None <p>Returns:</p> Type Description None Union[Any, GetNamesByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    voc_names_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_names_by_id_response_200.GetNamesByIdResponse200]]\n</code></pre> <p>Get names by ID</p> <p>Parameters:</p> Name Type Description Default voc_names_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetNamesByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    voc_names_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.get_names_by_id_response_200.GetNamesByIdResponse200, NoneType]\n</code></pre> <p>Get names by ID</p> <p>Parameters:</p> Name Type Description Default voc_names_id str None <p>Returns:</p> Type Description None Union[Any, GetNamesByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/get_names_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    voc_names_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.get_names_by_id_response_200.GetNamesByIdResponse200]]\n</code></pre> <p>Get names by ID</p> <p>Parameters:</p> Name Type Description Default voc_names_id str None <p>Returns:</p> Type Description None Response[Union[Any, GetNamesByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies/","title":"Module invenio_rest_api_client.api.vocabularies.search_vocabularies","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    vocabularies_type: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    tags: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    ln: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    accept_language: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_response_200.SearchVocabulariesResponse200, NoneType]\n</code></pre> <p>Search vocabularies</p> <p>Parameters:</p> Name Type Description Default vocabularies_type str None q Union[Unset, str] None suggest Union[Unset, str] None tags Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None ln Union[Unset, str] None accept_language Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    vocabularies_type: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    tags: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    ln: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    accept_language: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_response_200.SearchVocabulariesResponse200]]\n</code></pre> <p>Search vocabularies</p> <p>Parameters:</p> Name Type Description Default vocabularies_type str None q Union[Unset, str] None suggest Union[Unset, str] None tags Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None ln Union[Unset, str] None accept_language Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies/#sync","title":"sync","text":"<pre><code>def sync(\n    vocabularies_type: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    tags: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    ln: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    accept_language: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_response_200.SearchVocabulariesResponse200, NoneType]\n</code></pre> <p>Search vocabularies</p> <p>Parameters:</p> Name Type Description Default vocabularies_type str None q Union[Unset, str] None suggest Union[Unset, str] None tags Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None ln Union[Unset, str] None accept_language Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    vocabularies_type: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    tags: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    ln: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    accept_language: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_response_200.SearchVocabulariesResponse200]]\n</code></pre> <p>Search vocabularies</p> <p>Parameters:</p> Name Type Description Default vocabularies_type str None q Union[Unset, str] None suggest Union[Unset, str] None tags Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None ln Union[Unset, str] None accept_language Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_languages/","title":"Module invenio_rest_api_client.api.vocabularies.search_vocabularies_languages","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_languages/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_languages/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_languages_response_200.SearchVocabulariesLanguagesResponse200, NoneType]\n</code></pre> <p>Search vocabularies languages</p> <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesLanguagesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_languages/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_languages_response_200.SearchVocabulariesLanguagesResponse200]]\n</code></pre> <p>Search vocabularies languages</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesLanguagesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_languages/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_languages_response_200.SearchVocabulariesLanguagesResponse200, NoneType]\n</code></pre> <p>Search vocabularies languages</p> <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesLanguagesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_languages/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_languages_response_200.SearchVocabulariesLanguagesResponse200]]\n</code></pre> <p>Search vocabularies languages</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesLanguagesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_licenses/","title":"Module invenio_rest_api_client.api.vocabularies.search_vocabularies_licenses","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_licenses/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_licenses/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_licenses_response_200.SearchVocabulariesLicensesResponse200, NoneType]\n</code></pre> <p>Search vocabularies licenses</p> <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesLicensesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_licenses/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_licenses_response_200.SearchVocabulariesLicensesResponse200]]\n</code></pre> <p>Search vocabularies licenses</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesLicensesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_licenses/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_licenses_response_200.SearchVocabulariesLicensesResponse200, NoneType]\n</code></pre> <p>Search vocabularies licenses</p> <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesLicensesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_licenses/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_licenses_response_200.SearchVocabulariesLicensesResponse200]]\n</code></pre> <p>Search vocabularies licenses</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesLicensesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_relationtypes/","title":"Module invenio_rest_api_client.api.vocabularies.search_vocabularies_relationtypes","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_relationtypes/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_relationtypes/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_relationtypes_response_200.SearchVocabulariesRelationtypesResponse200, NoneType]\n</code></pre> <p>Search vocabularies relationtypes</p> <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesRelationtypesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_relationtypes/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_relationtypes_response_200.SearchVocabulariesRelationtypesResponse200]]\n</code></pre> <p>Search vocabularies relationtypes</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesRelationtypesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_relationtypes/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_relationtypes_response_200.SearchVocabulariesRelationtypesResponse200, NoneType]\n</code></pre> <p>Search vocabularies relationtypes</p> <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesRelationtypesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_relationtypes/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_relationtypes_response_200.SearchVocabulariesRelationtypesResponse200]]\n</code></pre> <p>Search vocabularies relationtypes</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesRelationtypesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_resourcetypes/","title":"Module invenio_rest_api_client.api.vocabularies.search_vocabularies_resourcetypes","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_resourcetypes/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_resourcetypes/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_resourcetypes_response_200.SearchVocabulariesResourcetypesResponse200, NoneType]\n</code></pre> <p>Search vocabularies resourcetypes</p> <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesResourcetypesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_resourcetypes/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_resourcetypes_response_200.SearchVocabulariesResourcetypesResponse200]]\n</code></pre> <p>Search vocabularies resourcetypes</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesResourcetypesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_resourcetypes/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.search_vocabularies_resourcetypes_response_200.SearchVocabulariesResourcetypesResponse200, NoneType]\n</code></pre> <p>Search vocabularies resourcetypes</p> <p>Returns:</p> Type Description None Union[Any, SearchVocabulariesResourcetypesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/search_vocabularies_resourcetypes/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.search_vocabularies_resourcetypes_response_200.SearchVocabulariesResourcetypesResponse200]]\n</code></pre> <p>Search vocabularies resourcetypes</p> <p>Returns:</p> Type Description None Response[Union[Any, SearchVocabulariesResourcetypesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations/","title":"Module invenio_rest_api_client.api.vocabularies.specific_vocabularies_affiliations","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_affiliations_response_200.SpecificVocabulariesAffiliationsResponse200, NoneType]\n</code></pre> <p>Specific vocabularies affiliations</p> <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesAffiliationsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_affiliations_response_200.SpecificVocabulariesAffiliationsResponse200]]\n</code></pre> <p>Specific vocabularies affiliations</p> <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesAffiliationsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_affiliations_response_200.SpecificVocabulariesAffiliationsResponse200, NoneType]\n</code></pre> <p>Specific vocabularies affiliations</p> <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesAffiliationsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_affiliations_response_200.SpecificVocabulariesAffiliationsResponse200]]\n</code></pre> <p>Specific vocabularies affiliations</p> <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesAffiliationsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations_by_id/","title":"Module invenio_rest_api_client.api.vocabularies.specific_vocabularies_affiliations_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    voc_affiliation_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_affiliations_by_id_response_200.SpecificVocabulariesAffiliationsByIdResponse200, NoneType]\n</code></pre> <p>Specific vocabularies affiliations by ID</p> <p>Parameters:</p> Name Type Description Default voc_affiliation_id str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesAffiliationsByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    voc_affiliation_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_affiliations_by_id_response_200.SpecificVocabulariesAffiliationsByIdResponse200]]\n</code></pre> <p>Specific vocabularies affiliations by ID</p> <p>Parameters:</p> Name Type Description Default voc_affiliation_id str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesAffiliationsByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    voc_affiliation_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_affiliations_by_id_response_200.SpecificVocabulariesAffiliationsByIdResponse200, NoneType]\n</code></pre> <p>Specific vocabularies affiliations by ID</p> <p>Parameters:</p> Name Type Description Default voc_affiliation_id str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesAffiliationsByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_affiliations_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    voc_affiliation_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_affiliations_by_id_response_200.SpecificVocabulariesAffiliationsByIdResponse200]]\n</code></pre> <p>Specific vocabularies affiliations by ID</p> <p>Parameters:</p> Name Type Description Default voc_affiliation_id str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesAffiliationsByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards/","title":"Module invenio_rest_api_client.api.vocabularies.specific_vocabularies_awards","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_awards_response_200.SpecificVocabulariesAwardsResponse200, NoneType]\n</code></pre> <p>Specific vocabularies awards</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None suggest Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesAwardsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_awards_response_200.SpecificVocabulariesAwardsResponse200]]\n</code></pre> <p>Specific vocabularies awards</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None suggest Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesAwardsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_awards_response_200.SpecificVocabulariesAwardsResponse200, NoneType]\n</code></pre> <p>Specific vocabularies awards</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None suggest Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesAwardsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_awards_response_200.SpecificVocabulariesAwardsResponse200]]\n</code></pre> <p>Specific vocabularies awards</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None suggest Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesAwardsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards_by_id/","title":"Module invenio_rest_api_client.api.vocabularies.specific_vocabularies_awards_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    voc_awards_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_awards_by_id_response_200.SpecificVocabulariesAwardsByIdResponse200, NoneType]\n</code></pre> <p>Specific vocabularies awards by ID</p> <p>Parameters:</p> Name Type Description Default voc_awards_id str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesAwardsByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    voc_awards_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_awards_by_id_response_200.SpecificVocabulariesAwardsByIdResponse200]]\n</code></pre> <p>Specific vocabularies awards by ID</p> <p>Parameters:</p> Name Type Description Default voc_awards_id str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesAwardsByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    voc_awards_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_awards_by_id_response_200.SpecificVocabulariesAwardsByIdResponse200, NoneType]\n</code></pre> <p>Specific vocabularies awards by ID</p> <p>Parameters:</p> Name Type Description Default voc_awards_id str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesAwardsByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_awards_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    voc_awards_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_awards_by_id_response_200.SpecificVocabulariesAwardsByIdResponse200]]\n</code></pre> <p>Specific vocabularies awards by ID</p> <p>Parameters:</p> Name Type Description Default voc_awards_id str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesAwardsByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders/","title":"Module invenio_rest_api_client.api.vocabularies.specific_vocabularies_funders","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_funders_response_200.SpecificVocabulariesFundersResponse200, NoneType]\n</code></pre> <p>Specific vocabularies funders</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None suggest Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesFundersResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_funders_response_200.SpecificVocabulariesFundersResponse200]]\n</code></pre> <p>Specific vocabularies funders</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None suggest Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesFundersResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_funders_response_200.SpecificVocabulariesFundersResponse200, NoneType]\n</code></pre> <p>Specific vocabularies funders</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None suggest Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesFundersResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    q: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    suggest: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sort: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    size: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    page: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_funders_response_200.SpecificVocabulariesFundersResponse200]]\n</code></pre> <p>Specific vocabularies funders</p> <p>Parameters:</p> Name Type Description Default q Union[Unset, str] None suggest Union[Unset, str] None sort Union[Unset, str] None size Union[Unset, str] None page Union[Unset, str] None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesFundersResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders_by_id/","title":"Module invenio_rest_api_client.api.vocabularies.specific_vocabularies_funders_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    voc_funders_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_funders_by_id_response_200.SpecificVocabulariesFundersByIdResponse200, NoneType]\n</code></pre> <p>Specific vocabularies funders by ID</p> <p>Parameters:</p> Name Type Description Default voc_funders_id str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesFundersByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    voc_funders_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_funders_by_id_response_200.SpecificVocabulariesFundersByIdResponse200]]\n</code></pre> <p>Specific vocabularies funders by ID</p> <p>Parameters:</p> Name Type Description Default voc_funders_id str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesFundersByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    voc_funders_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_funders_by_id_response_200.SpecificVocabulariesFundersByIdResponse200, NoneType]\n</code></pre> <p>Specific vocabularies funders by ID</p> <p>Parameters:</p> Name Type Description Default voc_funders_id str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesFundersByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_funders_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    voc_funders_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_funders_by_id_response_200.SpecificVocabulariesFundersByIdResponse200]]\n</code></pre> <p>Specific vocabularies funders by ID</p> <p>Parameters:</p> Name Type Description Default voc_funders_id str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesFundersByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects/","title":"Module invenio_rest_api_client.api.vocabularies.specific_vocabularies_subjects","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    suggest: str\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_subjects_response_200.SpecificVocabulariesSubjectsResponse200, NoneType]\n</code></pre> <p>Specific vocabularies subjects</p> <p>Parameters:</p> Name Type Description Default suggest str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesSubjectsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    suggest: str\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_subjects_response_200.SpecificVocabulariesSubjectsResponse200]]\n</code></pre> <p>Specific vocabularies subjects</p> <p>Parameters:</p> Name Type Description Default suggest str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesSubjectsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    suggest: str\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_subjects_response_200.SpecificVocabulariesSubjectsResponse200, NoneType]\n</code></pre> <p>Specific vocabularies subjects</p> <p>Parameters:</p> Name Type Description Default suggest str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesSubjectsResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient,\n    suggest: str\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_subjects_response_200.SpecificVocabulariesSubjectsResponse200]]\n</code></pre> <p>Specific vocabularies subjects</p> <p>Parameters:</p> Name Type Description Default suggest str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesSubjectsResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects_by_id/","title":"Module invenio_rest_api_client.api.vocabularies.specific_vocabularies_subjects_by_id","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects_by_id/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects_by_id/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    voc_subjects_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_subjects_by_id_response_200.SpecificVocabulariesSubjectsByIdResponse200, NoneType]\n</code></pre> <p>Specific vocabularies subjects by ID</p> <p>Parameters:</p> Name Type Description Default voc_subjects_id str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesSubjectsByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects_by_id/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    voc_subjects_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_subjects_by_id_response_200.SpecificVocabulariesSubjectsByIdResponse200]]\n</code></pre> <p>Specific vocabularies subjects by ID</p> <p>Parameters:</p> Name Type Description Default voc_subjects_id str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesSubjectsByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects_by_id/#sync","title":"sync","text":"<pre><code>def sync(\n    voc_subjects_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.specific_vocabularies_subjects_by_id_response_200.SpecificVocabulariesSubjectsByIdResponse200, NoneType]\n</code></pre> <p>Specific vocabularies subjects by ID</p> <p>Parameters:</p> Name Type Description Default voc_subjects_id str None <p>Returns:</p> Type Description None Union[Any, SpecificVocabulariesSubjectsByIdResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/specific_vocabularies_subjects_by_id/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    voc_subjects_id: str,\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.specific_vocabularies_subjects_by_id_response_200.SpecificVocabulariesSubjectsByIdResponse200]]\n</code></pre> <p>Specific vocabularies subjects by ID</p> <p>Parameters:</p> Name Type Description Default voc_subjects_id str None <p>Returns:</p> Type Description None Response[Union[Any, SpecificVocabulariesSubjectsByIdResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_contributorsroles/","title":"Module invenio_rest_api_client.api.vocabularies.vocabularies_contributorsroles","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_contributorsroles/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_contributorsroles/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.vocabularies_contributorsroles_response_200.VocabulariesContributorsrolesResponse200, NoneType]\n</code></pre> <p>vocabularies contributorsroles</p> <p>Returns:</p> Type Description None Union[Any, VocabulariesContributorsrolesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_contributorsroles/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.vocabularies_contributorsroles_response_200.VocabulariesContributorsrolesResponse200]]\n</code></pre> <p>vocabularies contributorsroles</p> <p>Returns:</p> Type Description None Response[Union[Any, VocabulariesContributorsrolesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_contributorsroles/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.vocabularies_contributorsroles_response_200.VocabulariesContributorsrolesResponse200, NoneType]\n</code></pre> <p>vocabularies contributorsroles</p> <p>Returns:</p> Type Description None Union[Any, VocabulariesContributorsrolesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_contributorsroles/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.vocabularies_contributorsroles_response_200.VocabulariesContributorsrolesResponse200]]\n</code></pre> <p>vocabularies contributorsroles</p> <p>Returns:</p> Type Description None Response[Union[Any, VocabulariesContributorsrolesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_creatorsroles/","title":"Module invenio_rest_api_client.api.vocabularies.vocabularies_creatorsroles","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_creatorsroles/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_creatorsroles/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.vocabularies_creatorsroles_response_200.VocabulariesCreatorsrolesResponse200, NoneType]\n</code></pre> <p>vocabularies creatorsroles</p> <p>Returns:</p> Type Description None Union[Any, VocabulariesCreatorsrolesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_creatorsroles/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.vocabularies_creatorsroles_response_200.VocabulariesCreatorsrolesResponse200]]\n</code></pre> <p>vocabularies creatorsroles</p> <p>Returns:</p> Type Description None Response[Union[Any, VocabulariesCreatorsrolesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_creatorsroles/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.vocabularies_creatorsroles_response_200.VocabulariesCreatorsrolesResponse200, NoneType]\n</code></pre> <p>vocabularies creatorsroles</p> <p>Returns:</p> Type Description None Union[Any, VocabulariesCreatorsrolesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_creatorsroles/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.vocabularies_creatorsroles_response_200.VocabulariesCreatorsrolesResponse200]]\n</code></pre> <p>vocabularies creatorsroles</p> <p>Returns:</p> Type Description None Response[Union[Any, VocabulariesCreatorsrolesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_datetypes/","title":"Module invenio_rest_api_client.api.vocabularies.vocabularies_datetypes","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_datetypes/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_datetypes/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.vocabularies_datetypes_response_200.VocabulariesDatetypesResponse200, NoneType]\n</code></pre> <p>vocabularies datetypes</p> <p>Returns:</p> Type Description None Union[Any, VocabulariesDatetypesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_datetypes/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.vocabularies_datetypes_response_200.VocabulariesDatetypesResponse200]]\n</code></pre> <p>vocabularies datetypes</p> <p>Returns:</p> Type Description None Response[Union[Any, VocabulariesDatetypesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_datetypes/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.vocabularies_datetypes_response_200.VocabulariesDatetypesResponse200, NoneType]\n</code></pre> <p>vocabularies datetypes</p> <p>Returns:</p> Type Description None Union[Any, VocabulariesDatetypesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_datetypes/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.vocabularies_datetypes_response_200.VocabulariesDatetypesResponse200]]\n</code></pre> <p>vocabularies datetypes</p> <p>Returns:</p> Type Description None Response[Union[Any, VocabulariesDatetypesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_descriptiontypes/","title":"Module invenio_rest_api_client.api.vocabularies.vocabularies_descriptiontypes","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_descriptiontypes/#functions","title":"Functions","text":""},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_descriptiontypes/#asyncio","title":"asyncio","text":"<pre><code>def asyncio(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.vocabularies_descriptiontypes_response_200.VocabulariesDescriptiontypesResponse200, NoneType]\n</code></pre> <p>vocabularies descriptiontypes</p> <p>Returns:</p> Type Description None Union[Any, VocabulariesDescriptiontypesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_descriptiontypes/#asyncio_detailed","title":"asyncio_detailed","text":"<pre><code>def asyncio_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.vocabularies_descriptiontypes_response_200.VocabulariesDescriptiontypesResponse200]]\n</code></pre> <p>vocabularies descriptiontypes</p> <p>Returns:</p> Type Description None Response[Union[Any, VocabulariesDescriptiontypesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_descriptiontypes/#sync","title":"sync","text":"<pre><code>def sync(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; Union[Any, invenio_rest_api_client.models.vocabularies_descriptiontypes_response_200.VocabulariesDescriptiontypesResponse200, NoneType]\n</code></pre> <p>vocabularies descriptiontypes</p> <p>Returns:</p> Type Description None Union[Any, VocabulariesDescriptiontypesResponse200] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/api/vocabularies/vocabularies_descriptiontypes/#sync_detailed","title":"sync_detailed","text":"<pre><code>def sync_detailed(\n    *,\n    client: invenio_rest_api_client.client.AuthenticatedClient\n) -&gt; invenio_rest_api_client.types.Response[typing.Union[typing.Any, invenio_rest_api_client.models.vocabularies_descriptiontypes_response_200.VocabulariesDescriptiontypesResponse200]]\n</code></pre> <p>vocabularies descriptiontypes</p> <p>Returns:</p> Type Description None Response[Union[Any, VocabulariesDescriptiontypesResponse200]] <p>Raises:</p> Type Description errors.UnexpectedStatus If the server returns an undocumented status code and Client.raise_on_unexpected_status is True. httpx.TimeoutException If the request takes longer than Client.timeout."},{"location":"api/latest/invenio_rest_api_client/models/","title":"Module invenio_rest_api_client.models","text":"<p>Contains all the data models used in inputs/outputs</p>"},{"location":"api/latest/invenio_rest_api_client/models/#sub-modules","title":"Sub-modules","text":"<ul> <li>invenio_rest_api_client.models.accept_a_request_body</li> <li>invenio_rest_api_client.models.access</li> <li>invenio_rest_api_client.models.access_files</li> <li>invenio_rest_api_client.models.access_record</li> <li>invenio_rest_api_client.models.add_group_members_body</li> <li>invenio_rest_api_client.models.additional_description</li> <li>invenio_rest_api_client.models.additional_description_type</li> <li>invenio_rest_api_client.models.additional_description_type_id</li> <li>invenio_rest_api_client.models.additional_description_type_title</li> <li>invenio_rest_api_client.models.additional_title</li> <li>invenio_rest_api_client.models.additional_title_type</li> <li>invenio_rest_api_client.models.additional_title_type_id</li> <li>invenio_rest_api_client.models.additional_title_type_title</li> <li>invenio_rest_api_client.models.affiliation</li> <li>invenio_rest_api_client.models.alternate_identifier</li> <li>invenio_rest_api_client.models.audit_log_entry</li> <li>invenio_rest_api_client.models.audit_log_entry_links</li> <li>invenio_rest_api_client.models.audit_log_entry_metadata</li> <li>invenio_rest_api_client.models.audit_log_entry_resource</li> <li>invenio_rest_api_client.models.audit_log_entry_user</li> <li>invenio_rest_api_client.models.audit_log_list</li> <li>invenio_rest_api_client.models.audit_log_list_aggregations</li> <li>invenio_rest_api_client.models.audit_log_list_hits</li> <li>invenio_rest_api_client.models.award</li> <li>invenio_rest_api_client.models.award_identifier</li> <li>invenio_rest_api_client.models.award_title</li> <li>invenio_rest_api_client.models.cancel_a_request_body</li> <li>invenio_rest_api_client.models.create_a_community_body</li> <li>invenio_rest_api_client.models.create_a_draft_record_body</li> <li>invenio_rest_api_client.models.create_a_draft_record_body_custom_fields</li> <li>invenio_rest_api_client.models.create_a_featured_community_entry_body</li> <li>invenio_rest_api_client.models.create_a_set_body</li> <li>invenio_rest_api_client.models.create_an_access_link_body</li> <li>invenio_rest_api_client.models.created</li> <li>invenio_rest_api_client.models.created_links</li> <li>invenio_rest_api_client.models.created_metadata</li> <li>invenio_rest_api_client.models.created_parent</li> <li>invenio_rest_api_client.models.createupdate_a_review_request_body</li> <li>invenio_rest_api_client.models.createupdate_a_review_request_response_200</li> <li>invenio_rest_api_client.models.creator</li> <li>invenio_rest_api_client.models.custom_fields</li> <li>invenio_rest_api_client.models.date</li> <li>invenio_rest_api_client.models.date_type</li> <li>invenio_rest_api_client.models.date_type_id</li> <li>invenio_rest_api_client.models.date_type_title</li> <li>invenio_rest_api_client.models.decline_a_request_body</li> <li>invenio_rest_api_client.models.delete_a_comment_response_200</li> <li>invenio_rest_api_client.models.delete_a_doi_response_200</li> <li>invenio_rest_api_client.models.delete_a_draft_file_response_200</li> <li>invenio_rest_api_client.models.delete_a_featured_community_entry_response_200</li> <li>invenio_rest_api_client.models.delete_a_review_request_response_200</li> <li>invenio_rest_api_client.models.delete_a_set_response_200</li> <li>invenio_rest_api_client.models.delete_an_access_link_response_200</li> <li>invenio_rest_api_client.models.delete_community_logo_response_200</li> <li>invenio_rest_api_client.models.delete_community_response_200</li> <li>invenio_rest_api_client.models.delete_record_community_response_200</li> <li>invenio_rest_api_client.models.deletediscard_a_draft_record_response_200</li> <li>invenio_rest_api_client.models.download_a_draft_file_response_200</li> <li>invenio_rest_api_client.models.download_a_record_file_response_200</li> <li>invenio_rest_api_client.models.embargo</li> <li>invenio_rest_api_client.models.export_record_as_csl_response_200</li> <li>invenio_rest_api_client.models.export_record_as_datacitejson_response_200</li> <li>invenio_rest_api_client.models.export_record_as_datacitexml_response_200</li> <li>invenio_rest_api_client.models.export_record_as_dublincore_xml_response_200</li> <li>invenio_rest_api_client.models.export_record_as_json_response_200</li> <li>invenio_rest_api_client.models.feature</li> <li>invenio_rest_api_client.models.feature_identifier</li> <li>invenio_rest_api_client.models.file_transfer</li> <li>invenio_rest_api_client.models.file_transfer_item</li> <li>invenio_rest_api_client.models.file_transfer_type</li> <li>invenio_rest_api_client.models.files</li> <li>invenio_rest_api_client.models.funder</li> <li>invenio_rest_api_client.models.funding</li> <li>invenio_rest_api_client.models.geo_json_line_string</li> <li>invenio_rest_api_client.models.geo_json_line_string_type</li> <li>invenio_rest_api_client.models.geo_json_multi_line_string</li> <li>invenio_rest_api_client.models.geo_json_multi_line_string_type</li> <li>invenio_rest_api_client.models.geo_json_multi_point</li> <li>invenio_rest_api_client.models.geo_json_multi_point_type</li> <li>invenio_rest_api_client.models.geo_json_multi_polygon</li> <li>invenio_rest_api_client.models.geo_json_multi_polygon_type</li> <li>invenio_rest_api_client.models.geo_json_point</li> <li>invenio_rest_api_client.models.geo_json_point_type</li> <li>invenio_rest_api_client.models.geo_json_polygon</li> <li>invenio_rest_api_client.models.geo_json_polygon_type</li> <li>invenio_rest_api_client.models.get_a_comment_response_200</li> <li>invenio_rest_api_client.models.get_a_community_response_200</li> <li>invenio_rest_api_client.models.get_a_draft_files_metadata_response_200</li> <li>invenio_rest_api_client.models.get_a_draft_records_response_200</li> <li>invenio_rest_api_client.models.get_a_record_by_id_response_200</li> <li>invenio_rest_api_client.models.get_a_record_files_metadata_response_200</li> <li>invenio_rest_api_client.models.get_a_request_response_200</li> <li>invenio_rest_api_client.models.get_a_requests_timeline_response_200</li> <li>invenio_rest_api_client.models.get_a_review_request_response_200</li> <li>invenio_rest_api_client.models.get_a_set_by_id_response_200</li> <li>invenio_rest_api_client.models.get_a_user_by_id_response_200</li> <li>invenio_rest_api_client.models.get_a_vocabulary_record_by_id_response_200</li> <li>invenio_rest_api_client.models.get_all_draft_records_response_200</li> <li>invenio_rest_api_client.models.get_all_versions_response_200</li> <li>invenio_rest_api_client.models.get_an_access_link_by_id_response_200</li> <li>invenio_rest_api_client.models.get_avatar_for_group_response_200</li> <li>invenio_rest_api_client.models.get_avatar_for_user_response_200</li> <li>invenio_rest_api_client.models.get_community_logo_response_200</li> <li>invenio_rest_api_client.models.get_community_records_response_200</li> <li>invenio_rest_api_client.models.get_featured_community_entry_response_200</li> <li>invenio_rest_api_client.models.get_group_by_id_response_200</li> <li>invenio_rest_api_client.models.get_latest_version_response_200</li> <li>invenio_rest_api_client.models.get_metadata_formats_response_200</li> <li>invenio_rest_api_client.models.get_names_by_id_response_200</li> <li>invenio_rest_api_client.models.get_names_response_200</li> <li>invenio_rest_api_client.models.get_statistics_body</li> <li>invenio_rest_api_client.models.get_user_by_id_detailed_response_200</li> <li>invenio_rest_api_client.models.identifier</li> <li>invenio_rest_api_client.models.identifier_scheme</li> <li>invenio_rest_api_client.models.invite_user_members_body</li> <li>invenio_rest_api_client.models.lang</li> <li>invenio_rest_api_client.models.list_a_drafts_files_response_200</li> <li>invenio_rest_api_client.models.list_a_records_files_response_200</li> <li>invenio_rest_api_client.models.list_access_links_response_200</li> <li>invenio_rest_api_client.models.location</li> <li>invenio_rest_api_client.models.metadata</li> <li>invenio_rest_api_client.models.person_or_org</li> <li>invenio_rest_api_client.models.person_or_org_identifier_scheme</li> <li>invenio_rest_api_client.models.person_or_org_type</li> <li>invenio_rest_api_client.models.pi_ds</li> <li>invenio_rest_api_client.models.pid</li> <li>invenio_rest_api_client.models.reference</li> <li>invenio_rest_api_client.models.related_identifier</li> <li>invenio_rest_api_client.models.related_identifier_resource_type</li> <li>invenio_rest_api_client.models.related_identifier_resource_type_id</li> <li>invenio_rest_api_client.models.related_identifier_resource_type_title</li> <li>invenio_rest_api_client.models.relation_type</li> <li>invenio_rest_api_client.models.relation_type_id</li> <li>invenio_rest_api_client.models.relation_type_title</li> <li>invenio_rest_api_client.models.remove_members_leave_community_response_200</li> <li>invenio_rest_api_client.models.rename_a_community_body</li> <li>invenio_rest_api_client.models.resource_type</li> <li>invenio_rest_api_client.models.resource_type_id</li> <li>invenio_rest_api_client.models.right</li> <li>invenio_rest_api_client.models.right_description</li> <li>invenio_rest_api_client.models.right_title</li> <li>invenio_rest_api_client.models.role</li> <li>invenio_rest_api_client.models.role_id</li> <li>invenio_rest_api_client.models.search_communities_response_200</li> <li>invenio_rest_api_client.models.search_featured_communities_response_200</li> <li>invenio_rest_api_client.models.search_groups_response_200</li> <li>invenio_rest_api_client.models.search_invitations_response_200</li> <li>invenio_rest_api_client.models.search_members_response_200</li> <li>invenio_rest_api_client.models.search_public_members_response_200</li> <li>invenio_rest_api_client.models.search_records_response_200</li> <li>invenio_rest_api_client.models.search_requests_response_200</li> <li>invenio_rest_api_client.models.search_sets_response_200</li> <li>invenio_rest_api_client.models.search_user_communities_response_200</li> <li>invenio_rest_api_client.models.search_vocabularies_languages_response_200</li> <li>invenio_rest_api_client.models.search_vocabularies_licenses_response_200</li> <li>invenio_rest_api_client.models.search_vocabularies_relationtypes_response_200</li> <li>invenio_rest_api_client.models.search_vocabularies_resourcetypes_response_200</li> <li>invenio_rest_api_client.models.search_vocabularies_response_200</li> <li>invenio_rest_api_client.models.specific_vocabularies_affiliations_by_id_response_200</li> <li>invenio_rest_api_client.models.specific_vocabularies_affiliations_response_200</li> <li>invenio_rest_api_client.models.specific_vocabularies_awards_by_id_response_200</li> <li>invenio_rest_api_client.models.specific_vocabularies_awards_response_200</li> <li>invenio_rest_api_client.models.specific_vocabularies_funders_by_id_response_200</li> <li>invenio_rest_api_client.models.specific_vocabularies_funders_response_200</li> <li>invenio_rest_api_client.models.specific_vocabularies_subjects_by_id_response_200</li> <li>invenio_rest_api_client.models.specific_vocabularies_subjects_response_200</li> <li>invenio_rest_api_client.models.step_2_upload_a_draft_files_content_response_200</li> <li>invenio_rest_api_client.models.subject</li> <li>invenio_rest_api_client.models.submit_a_comment_on_a_request_body</li> <li>invenio_rest_api_client.models.submit_a_record_for_review_body</li> <li>invenio_rest_api_client.models.update_a_comment_body</li> <li>invenio_rest_api_client.models.update_a_comment_response_200</li> <li>invenio_rest_api_client.models.update_a_community_body</li> <li>invenio_rest_api_client.models.update_a_community_response_200</li> <li>invenio_rest_api_client.models.update_a_draft_record_response_200</li> <li>invenio_rest_api_client.models.update_a_featured_community_entry_body</li> <li>invenio_rest_api_client.models.update_a_featured_community_entry_response_200</li> <li>invenio_rest_api_client.models.update_a_request_body</li> <li>invenio_rest_api_client.models.update_a_request_response_200</li> <li>invenio_rest_api_client.models.update_a_set_body</li> <li>invenio_rest_api_client.models.update_a_set_response_200</li> <li>invenio_rest_api_client.models.update_an_access_link_body</li> <li>invenio_rest_api_client.models.update_an_access_link_response_200</li> <li>invenio_rest_api_client.models.update_community_logo_response_200</li> <li>invenio_rest_api_client.models.update_draft_record</li> <li>invenio_rest_api_client.models.update_invitations_body</li> <li>invenio_rest_api_client.models.update_invitations_response_200</li> <li>invenio_rest_api_client.models.update_members_body</li> <li>invenio_rest_api_client.models.update_members_response_200</li> <li>invenio_rest_api_client.models.version</li> <li>invenio_rest_api_client.models.vocabularies_contributorsroles_response_200</li> <li>invenio_rest_api_client.models.vocabularies_creatorsroles_response_200</li> <li>invenio_rest_api_client.models.vocabularies_datetypes_response_200</li> <li>invenio_rest_api_client.models.vocabularies_descriptiontypes_response_200</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/#acceptarequestbody","title":"AcceptARequestBody","text":"<pre><code>class AcceptARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#access","title":"Access","text":"<pre><code>class Access(\n    record: invenio_rest_api_client.models.access_record.AccessRecord,\n    files: invenio_rest_api_client.models.access_files.AccessFiles,\n    embargo: Union[invenio_rest_api_client.types.Unset, ForwardRef('Embargo')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Denotes record-specific read (visibility) options.</p> <p>More informations can be found on InvenioRDM Official page: https://inveniordm.docs.cern.ch/reference/metadata/#access</p> <pre><code>Attributes:\n    record (AccessRecord): Read access to the record.\n\n        `public` means anyone can see the record/files, `restricted` means only the owner(s) or specific users can see\n        the record/files.\n    files (AccessFiles): Read access to the record's files.\n\n        `public` means anyone can see the record/files, `restricted` means only the owner(s) or specific users can see\n        the record/files.\n    embargo (Union[Unset, Embargo]): Only in the cases of `\"record\": \"restricted\"`` or `\"files\": \"restricted\"`` can\n        an embargo be provided as input.\n        However, once an embargo is lifted, the embargo section is kept for transparency.\n\n        Denotes when an embargo must be lifted, at which point the record is made publicly accessible.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_1","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_1","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_1","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>embargo\n</code></pre> <pre><code>files\n</code></pre> <pre><code>record\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_1","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_1","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#accessfiles","title":"AccessFiles","text":"<pre><code>class AccessFiles(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables","title":"Class variables","text":"<pre><code>PUBLIC\n</code></pre> <pre><code>RESTRICTED\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_2","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_2","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#accessrecord","title":"AccessRecord","text":"<pre><code>class AccessRecord(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_1","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_1","title":"Class variables","text":"<pre><code>PUBLIC\n</code></pre> <pre><code>RESTRICTED\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_3","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_1","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_3","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_1","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_1","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_1","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_1","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_1","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_1","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_1","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_1","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_1","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_1","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_1","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_1","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_1","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_1","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_1","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_1","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_1","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_1","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_1","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_1","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_1","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_1","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_1","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_1","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_1","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_1","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_1","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_1","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_1","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_1","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_1","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_1","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_1","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_1","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_1","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_1","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_1","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_1","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_1","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_1","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_1","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_1","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_1","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_1","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_1","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_1","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#addgroupmembersbody","title":"AddGroupMembersBody","text":"<pre><code>class AddGroupMembersBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_4","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_2","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_2","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_4","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_2","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#additionaldescription","title":"AdditionalDescription","text":"<pre><code>class AdditionalDescription(\n    description: str,\n    type_: 'AdditionalDescriptionType',\n    lang: Union[invenio_rest_api_client.types.Unset, ForwardRef('Lang')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Additional description in addition to the primary description (e.g. abstracts in other languages), methods or</p> <p>further notes.</p> <pre><code>Attributes:\n    description (str): Free text.\n    type_ (AdditionalDescriptionType): The type of the description.\n    lang (Union[Unset, Lang]): The language of the associated item.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_5","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_3","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_3","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>description\n</code></pre> <pre><code>lang\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_5","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_3","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#additionaldescriptiontype","title":"AdditionalDescriptionType","text":"<pre><code>class AdditionalDescriptionType(\n    id: invenio_rest_api_client.models.additional_description_type_id.AdditionalDescriptionTypeId,\n    title: 'AdditionalDescriptionTypeTitle'\n)\n</code></pre> <p>The type of the description.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes","title":"Attributes","text":"Name Type Description Default id AdditionalDescriptionTypeId Description type id from the controlled vocabulary None title AdditionalDescriptionTypeTitle The corresponding localized human readable label. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_6","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_4","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_4","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_6","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_4","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#additionaldescriptiontypeid","title":"AdditionalDescriptionTypeId","text":"<pre><code>class AdditionalDescriptionTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_2","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_2","title":"Class variables","text":"<pre><code>ABSTRACT\n</code></pre> <pre><code>METHODS\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>SERIES_INFORMATION\n</code></pre> <pre><code>TABLE_OF_CONTENTS\n</code></pre> <pre><code>TECHNICAL_INFO\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_7","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_2","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_7","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_2","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_2","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_2","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_2","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_2","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_2","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_2","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_2","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_2","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_2","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_2","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_2","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_2","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_2","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_2","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_2","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_2","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_2","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_2","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_2","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_2","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_2","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_2","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_2","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_2","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_2","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_2","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_2","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_2","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_2","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_2","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_2","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_2","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_2","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_2","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_2","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_2","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_2","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_2","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_2","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_2","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_2","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_2","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_2","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_2","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_2","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#additionaldescriptiontypetitle","title":"AdditionalDescriptionTypeTitle","text":"<pre><code>class AdditionalDescriptionTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_8","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_5","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_5","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_8","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_5","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#additionaltitle","title":"AdditionalTitle","text":"<pre><code>class AdditionalTitle(\n    title: str,\n    type_: 'AdditionalTitleType',\n    lang: Union[invenio_rest_api_client.types.Unset, ForwardRef('Lang')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Additional name or title by which a resource is known.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_1","title":"Attributes","text":"Name Type Description Default title str The additional title. None type_ AdditionalTitleType The type of the title. None lang Union[Unset, Lang] The language of the associated item. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_9","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_6","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_6","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>lang\n</code></pre> <pre><code>title\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_9","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_6","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#additionaltitletype","title":"AdditionalTitleType","text":"<pre><code>class AdditionalTitleType(\n    id: invenio_rest_api_client.models.additional_title_type_id.AdditionalTitleTypeId,\n    title: 'AdditionalTitleTypeTitle'\n)\n</code></pre> <p>The type of the title.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_2","title":"Attributes","text":"Name Type Description Default id AdditionalTitleTypeId Title type id from the controlled vocabulary. None title AdditionalTitleTypeTitle The corresponding localized human readable label None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_10","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_7","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_7","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_10","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_7","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#additionaltitletypeid","title":"AdditionalTitleTypeId","text":"<pre><code>class AdditionalTitleTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_3","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_3","title":"Class variables","text":"<pre><code>ALTERNATIVE_TITLE\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>SUBTITLE\n</code></pre> <pre><code>TRANSLATED_TITLE\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_11","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_3","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_11","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_3","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_3","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_3","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_3","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_3","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_3","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_3","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_3","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_3","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_3","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_3","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_3","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_3","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_3","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_3","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_3","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_3","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_3","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_3","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_3","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_3","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_3","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_3","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_3","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_3","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_3","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_3","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_3","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_3","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_3","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_3","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_3","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_3","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_3","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_3","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_3","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_3","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_3","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_3","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_3","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_3","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_3","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_3","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_3","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_3","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_3","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#additionaltitletypetitle","title":"AdditionalTitleTypeTitle","text":"<pre><code>class AdditionalTitleTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_12","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_8","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_8","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_12","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_8","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#affiliation","title":"Affiliation","text":"<pre><code>class Affiliation(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Affilations if <code>person_or_org.type</code> is <code>personal</code>.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_3","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] The organizational or institutional id from the controlled vocabulary. None name Union[Unset, str] The name of the organisation or institution. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_13","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_9","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_9","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>name\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_13","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_9","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#alternateidentifier","title":"AlternateIdentifier","text":"<pre><code>class AlternateIdentifier(\n    identifier: str,\n    scheme: invenio_rest_api_client.models.identifier_scheme.IdentifierScheme\n)\n</code></pre> <p>Persistent identifier for the resource other than the ones registered as system-managed internal or external</p> <p>persistent identifiers.</p> <pre><code>Attributes:\n    identifier (str): identifier value\n    scheme (IdentifierScheme): The scheme of the identifier\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_14","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_10","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_10","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_14","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_10","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#auditlogentry","title":"AuditLogEntry","text":"<pre><code>class AuditLogEntry(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    created: Union[invenio_rest_api_client.types.Unset, datetime.datetime] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    action: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    resource: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogEntryResource')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    metadata: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogEntryMetadata')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    user: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogEntryUser')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    links: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogEntryLinks')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Conflict - Resource already exists or operation conflicts</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_4","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] Unique identifier for the log entry Example: 9913abd2-1a7c-42cb-a73e-e48a9e1bf4f2. None created Union[Unset, datetime.datetime] Timestamp when the log entry was created Example:2025-06-20T08:05:27.730677+00:00. None action Union[Unset, str] Action performed Example: record.publish. None resource Union[Unset, AuditLogEntryResource] Resource affected by the action None metadata Union[Unset, AuditLogEntryMetadata] Additional metadata about the log entry None user Union[Unset, AuditLogEntryUser] User who performed the action None links Union[Unset, AuditLogEntryLinks] Links related to the log entry None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_15","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_11","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_11","title":"Instance variables","text":"<pre><code>action\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>created\n</code></pre> <pre><code>id\n</code></pre> <pre><code>links\n</code></pre> <pre><code>metadata\n</code></pre> <pre><code>resource\n</code></pre> <pre><code>user\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_15","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_11","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#auditlogentrylinks","title":"AuditLogEntryLinks","text":"<pre><code>class AuditLogEntryLinks(\n    self_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Links related to the log entry</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_5","title":"Attributes","text":"Name Type Description Default self_ Union[Unset, str] Self link to the log entry Example: https://example.com/api/audit-logs/9913abd2-1a7c-42cb-a73e-e48a9e1bf4f2. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_16","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_12","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_12","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>self_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_16","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_12","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#auditlogentrymetadata","title":"AuditLogEntryMetadata","text":"<pre><code>class AuditLogEntryMetadata(\n    ip_address: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    session: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    parent_pid: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    revision_id: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Additional metadata about the log entry</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_6","title":"Attributes","text":"Name Type Description Default ip_address Union[Unset, str] IP address from which the action was performed None session Union[Unset, str] Session identifier None parent_pid Union[Unset, str] Parent persistent identifier Example: 1av3p-t2p41. None revision_id Union[Unset, int] Revision ID of the resource Example: 110. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_17","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_13","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_13","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>ip_address\n</code></pre> <pre><code>parent_pid\n</code></pre> <pre><code>revision_id\n</code></pre> <pre><code>session\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_17","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_13","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#auditlogentryresource","title":"AuditLogEntryResource","text":"<pre><code>class AuditLogEntryResource(\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Resource affected by the action</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_7","title":"Attributes","text":"Name Type Description Default type_ Union[Unset, str] Type of the resource Example: record. None id Union[Unset, str] ID of the resource Example: 5anb0-85626. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_18","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_14","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_14","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_18","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_14","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#auditlogentryuser","title":"AuditLogEntryUser","text":"<pre><code>class AuditLogEntryUser(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    username: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    email: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>User who performed the action</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_8","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] User ID Example: 2. None username Union[Unset, str] Username Example: user. None email Union[Unset, str] User email address Example: user@demo.org. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_19","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_15","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_15","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>email\n</code></pre> <pre><code>id\n</code></pre> <pre><code>username\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_19","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_15","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#auditloglist","title":"AuditLogList","text":"<pre><code>class AuditLogList(\n    hits: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogListHits')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    aggregations: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogListAggregations')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>hits (Union[Unset, AuditLogListHits]): aggregations (Union[Unset, AuditLogListAggregations]): Aggregation results (if any)</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_20","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_16","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_16","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>aggregations\n</code></pre> <pre><code>hits\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_20","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_16","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#auditloglistaggregations","title":"AuditLogListAggregations","text":"<pre><code>class AuditLogListAggregations(\n\n)\n</code></pre> <p>Aggregation results (if any)</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_21","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_17","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_17","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_21","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_17","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#auditloglisthits","title":"AuditLogListHits","text":"<pre><code>class AuditLogListHits(\n    total: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    hits: Union[invenio_rest_api_client.types.Unset, list['AuditLogEntry']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>total (Union[Unset, int]): Total number of log entries hits (Union[Unset, list['AuditLogEntry']]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_22","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_18","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_18","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>hits\n</code></pre> <pre><code>total\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_22","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_18","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#award","title":"Award","text":"<pre><code>class Award(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    title: Union[invenio_rest_api_client.types.Unset, ForwardRef('AwardTitle')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    number: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifiers: Union[invenio_rest_api_client.types.Unset, list['AwardIdentifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>The award (grant) sponsored by the funder.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_9","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] The award id from the controlled vocabulary. None title Union[Unset, AwardTitle] The localized title of the award. None number Union[Unset, str] The code assigned by the funder to a sponsored award (grant). None identifiers Union[Unset, list['AwardIdentifier']] Identifiers for the award. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_23","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_19","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_19","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>identifiers\n</code></pre> <pre><code>number\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_23","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_19","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#awardidentifier","title":"AwardIdentifier","text":"<pre><code>class AwardIdentifier(\n    scheme: str,\n    identifier: str\n)\n</code></pre> <p>Identifier for the award.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_10","title":"Attributes","text":"Name Type Description Default scheme str The identifier scheme. None identifier str Actual value of the identifier. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_24","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_20","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_20","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_24","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_20","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#awardtitle","title":"AwardTitle","text":"<pre><code>class AwardTitle(\n\n)\n</code></pre> <p>The localized title of the award.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_25","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_21","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_21","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_25","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_21","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#cancelarequestbody","title":"CancelARequestBody","text":"<pre><code>class CancelARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_26","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_22","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_22","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_26","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_22","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createacommunitybody","title":"CreateACommunityBody","text":"<pre><code>class CreateACommunityBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_27","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_23","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_23","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_27","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_23","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createadraftrecordbody","title":"CreateADraftRecordBody","text":"<pre><code>class CreateADraftRecordBody(\n    access: Union[invenio_rest_api_client.types.Unset, ForwardRef('Access')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    files: Union[invenio_rest_api_client.types.Unset, ForwardRef('Files')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    metadata: Union[invenio_rest_api_client.types.Unset, ForwardRef('Metadata')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    custom_fields: Union[invenio_rest_api_client.types.Unset, ForwardRef('CreateADraftRecordBodyCustomFields')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    pids: Union[invenio_rest_api_client.types.Unset, ForwardRef('PIDs')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>access (Union[Unset, Access]): Denotes record-specific read (visibility) options.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#access\n</code></pre> <p>files (Union[Unset, Files]): Files options for the record.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/rest_api_drafts_records/#files-options\n</code></pre> <p>metadata (Union[Unset, Metadata]): Metadata schema of bibliographic records in InvenioRDM.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#metadata\n</code></pre> <p>custom_fields (Union[Unset, CreateADraftRecordBodyCustomFields]): pids (Union[Unset, PIDs]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_28","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_24","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_24","title":"Instance variables","text":"<pre><code>access\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>custom_fields\n</code></pre> <pre><code>files\n</code></pre> <pre><code>metadata\n</code></pre> <pre><code>pids\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_28","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_24","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createadraftrecordbodycustomfields","title":"CreateADraftRecordBodyCustomFields","text":"<pre><code>class CreateADraftRecordBodyCustomFields(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_29","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_25","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_25","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_29","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_25","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createafeaturedcommunityentrybody","title":"CreateAFeaturedCommunityEntryBody","text":"<pre><code>class CreateAFeaturedCommunityEntryBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_30","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_26","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_26","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_30","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_26","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createasetbody","title":"CreateASetBody","text":"<pre><code>class CreateASetBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_31","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_27","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_27","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_31","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_27","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createanaccesslinkbody","title":"CreateAnAccessLinkBody","text":"<pre><code>class CreateAnAccessLinkBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_32","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_28","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_28","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_32","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_28","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#created","title":"Created","text":"<pre><code>class Created(\n    access: Union[invenio_rest_api_client.types.Unset, ForwardRef('Access')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    created: Union[invenio_rest_api_client.types.Unset, datetime.datetime] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    expires_at: Union[invenio_rest_api_client.types.Unset, datetime.datetime] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    files: Union[invenio_rest_api_client.types.Unset, ForwardRef('Files')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_published: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    links: Union[invenio_rest_api_client.types.Unset, ForwardRef('CreatedLinks')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    metadata: Union[invenio_rest_api_client.types.Unset, ForwardRef('CreatedMetadata')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    parent: Union[invenio_rest_api_client.types.Unset, ForwardRef('CreatedParent')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    pids: Union[invenio_rest_api_client.types.Unset, ForwardRef('PIDs')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    revision_id: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    updated: Union[invenio_rest_api_client.types.Unset, datetime.datetime] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    versions: Union[invenio_rest_api_client.types.Unset, ForwardRef('Version')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>access (Union[Unset, Access]): Denotes record-specific read (visibility) options.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#access\n</code></pre> <p>created (Union[Unset, datetime.datetime]): expires_at (Union[Unset, datetime.datetime]): files (Union[Unset, Files]): Files options for the record.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/rest_api_drafts_records/#files-options\n</code></pre> <p>id (Union[Unset, str]): is_published (Union[Unset, bool]): links (Union[Unset, CreatedLinks]): metadata (Union[Unset, CreatedMetadata]): parent (Union[Unset, CreatedParent]): pids (Union[Unset, PIDs]): revision_id (Union[Unset, int]): updated (Union[Unset, datetime.datetime]): versions (Union[Unset, Version]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_33","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_29","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_29","title":"Instance variables","text":"<pre><code>access\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>created\n</code></pre> <pre><code>expires_at\n</code></pre> <pre><code>files\n</code></pre> <pre><code>id\n</code></pre> <pre><code>is_published\n</code></pre> <pre><code>links\n</code></pre> <pre><code>metadata\n</code></pre> <pre><code>parent\n</code></pre> <pre><code>pids\n</code></pre> <pre><code>revision_id\n</code></pre> <pre><code>updated\n</code></pre> <pre><code>versions\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_33","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_29","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createdlinks","title":"CreatedLinks","text":"<pre><code>class CreatedLinks(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_34","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_30","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_30","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_34","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_30","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createdmetadata","title":"CreatedMetadata","text":"<pre><code>class CreatedMetadata(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_35","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_31","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_31","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_35","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_31","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createdparent","title":"CreatedParent","text":"<pre><code>class CreatedParent(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_36","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_32","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_32","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_36","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_32","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createupdateareviewrequestbody","title":"CreateupdateAReviewRequestBody","text":"<pre><code>class CreateupdateAReviewRequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_37","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_33","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_33","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_37","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_33","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#createupdateareviewrequestresponse200","title":"CreateupdateAReviewRequestResponse200","text":"<pre><code>class CreateupdateAReviewRequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_38","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_34","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_34","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_38","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_34","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#creator","title":"Creator","text":"<pre><code>class Creator(\n    person_or_org: 'PersonOrOrg',\n    role: Union[invenio_rest_api_client.types.Unset, ForwardRef('Role')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    affiliations: Union[invenio_rest_api_client.types.Unset, list['Affiliation']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>person_or_org (PersonOrOrg): The person or organization. role (Union[Unset, Role]): The role of the person or organisation selected from a customizable controlled     vocabulary. affiliations (Union[Unset, list['Affiliation']]): Affilations if <code>person_or_org.type</code> is personal.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_39","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_35","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_35","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>affiliations\n</code></pre> <pre><code>person_or_org\n</code></pre> <pre><code>role\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_39","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_35","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#customfields","title":"CustomFields","text":"<pre><code>class CustomFields(\n\n)\n</code></pre> <p>Custom fields metadata for the record. (v10 and newer).</p> <p>More informations can be found on InvenioRDM Official page: https://inveniordm.docs.cern.ch/operate/customize/metadata/custom_fields/records/#declaring-custom-fields</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_40","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_36","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_36","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_40","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_36","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#date","title":"Date","text":"<pre><code>class Date(\n    date: datetime.date,\n    type_: 'DateType',\n    description: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Date relevant to the resource.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_11","title":"Attributes","text":"Name Type Description Default date datetime.date A date or time interval according to Extended Date Time Format Level 0. None type_ DateType The type of date. None description Union[Unset, str] None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_41","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_37","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_37","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>date\n</code></pre> <pre><code>description\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_41","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_37","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#datetype","title":"DateType","text":"<pre><code>class DateType(\n    id: invenio_rest_api_client.models.date_type_id.DateTypeId,\n    title: 'DateTypeTitle'\n)\n</code></pre> <p>The type of date.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_12","title":"Attributes","text":"Name Type Description Default id DateTypeId Date type id from the controlled vocabulary None title DateTypeTitle The corresponding localized human readable label None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_42","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_38","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_38","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_42","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_38","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#datetypeid","title":"DateTypeId","text":"<pre><code>class DateTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_4","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_4","title":"Class variables","text":"<pre><code>ACCEPTED\n</code></pre> <pre><code>AVAILABLE\n</code></pre> <pre><code>COLLECTED\n</code></pre> <pre><code>COPYRIGHTED\n</code></pre> <pre><code>CREATED\n</code></pre> <pre><code>ISSUED\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>SUBMITTED\n</code></pre> <pre><code>UPDATED\n</code></pre> <pre><code>VALID\n</code></pre> <pre><code>WITHDRAWN\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_43","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_4","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_43","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_4","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_4","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_4","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_4","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_4","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_4","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_4","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_4","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_4","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_4","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_4","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_4","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_4","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_4","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_4","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_4","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_4","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_4","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_4","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_4","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_4","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_4","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_4","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_4","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_4","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_4","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_4","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_4","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_4","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_4","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_4","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_4","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_4","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_4","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_4","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_4","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_4","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_4","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_4","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_4","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_4","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_4","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_4","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_4","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_4","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_4","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#datetypetitle","title":"DateTypeTitle","text":"<pre><code>class DateTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_44","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_39","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_39","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_44","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_39","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#declinearequestbody","title":"DeclineARequestBody","text":"<pre><code>class DeclineARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_45","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_40","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_40","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_45","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_40","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deleteacommentresponse200","title":"DeleteACommentResponse200","text":"<pre><code>class DeleteACommentResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_46","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_41","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_41","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_46","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_41","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deleteadoiresponse200","title":"DeleteADoiResponse200","text":"<pre><code>class DeleteADoiResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_47","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_42","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_42","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_47","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_42","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deleteadraftfileresponse200","title":"DeleteADraftFileResponse200","text":"<pre><code>class DeleteADraftFileResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_48","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_43","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_43","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_48","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_43","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deleteafeaturedcommunityentryresponse200","title":"DeleteAFeaturedCommunityEntryResponse200","text":"<pre><code>class DeleteAFeaturedCommunityEntryResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_49","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_44","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_44","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_49","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_44","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deleteareviewrequestresponse200","title":"DeleteAReviewRequestResponse200","text":"<pre><code>class DeleteAReviewRequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_50","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_45","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_45","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_50","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_45","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deleteasetresponse200","title":"DeleteASetResponse200","text":"<pre><code>class DeleteASetResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_51","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_46","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_46","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_51","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_46","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deleteanaccesslinkresponse200","title":"DeleteAnAccessLinkResponse200","text":"<pre><code>class DeleteAnAccessLinkResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_52","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_47","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_47","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_52","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_47","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deletecommunitylogoresponse200","title":"DeleteCommunityLogoResponse200","text":"<pre><code>class DeleteCommunityLogoResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_53","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_48","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_48","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_53","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_48","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deletecommunityresponse200","title":"DeleteCommunityResponse200","text":"<pre><code>class DeleteCommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_54","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_49","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_49","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_54","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_49","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deleterecordcommunityresponse200","title":"DeleteRecordCommunityResponse200","text":"<pre><code>class DeleteRecordCommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_55","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_50","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_50","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_55","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_50","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#deletediscardadraftrecordresponse200","title":"DeletediscardADraftRecordResponse200","text":"<pre><code>class DeletediscardADraftRecordResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_56","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_51","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_51","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_56","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_51","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#downloadadraftfileresponse200","title":"DownloadADraftFileResponse200","text":"<pre><code>class DownloadADraftFileResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_57","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_52","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_52","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_57","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_52","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#downloadarecordfileresponse200","title":"DownloadARecordFileResponse200","text":"<pre><code>class DownloadARecordFileResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_58","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_53","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_53","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_58","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_53","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#embargo","title":"Embargo","text":"<pre><code>class Embargo(\n    active: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    until: Union[invenio_rest_api_client.types.Unset, datetime.date] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    reason: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Only in the cases of <code>\"record\": \"restricted\"`` or</code>\"files\": \"restricted\"`` can an embargo be provided as input.</p> <p>However, once an embargo is lifted, the embargo section is kept for transparency.</p> <p>Denotes when an embargo must be lifted, at which point the record is made publicly accessible.</p> <pre><code>Attributes:\n    active (Union[Unset, bool]): Is the record under embargo or not.\n    until (Union[Unset, datetime.date]): Required if `\"active\": \"true\"`.\n    reason (Union[Unset, str]): Explanation for the embargo.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_59","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_54","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_54","title":"Instance variables","text":"<pre><code>active\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>reason\n</code></pre> <pre><code>until\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_59","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_54","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#exportrecordascslresponse200","title":"ExportRecordAsCslResponse200","text":"<pre><code>class ExportRecordAsCslResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_60","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_55","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_55","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_60","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_55","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#exportrecordasdatacitejsonresponse200","title":"ExportRecordAsDatacitejsonResponse200","text":"<pre><code>class ExportRecordAsDatacitejsonResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_61","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_56","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_56","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_61","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_56","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#exportrecordasdatacitexmlresponse200","title":"ExportRecordAsDatacitexmlResponse200","text":"<pre><code>class ExportRecordAsDatacitexmlResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_62","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_57","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_57","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_62","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_57","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#exportrecordasdublincorexmlresponse200","title":"ExportRecordAsDublincoreXmlResponse200","text":"<pre><code>class ExportRecordAsDublincoreXmlResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_63","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_58","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_58","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_63","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_58","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#exportrecordasjsonresponse200","title":"ExportRecordAsJsonResponse200","text":"<pre><code>class ExportRecordAsJsonResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_64","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_59","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_59","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_64","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_59","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#feature","title":"Feature","text":"<pre><code>class Feature(\n    geometry: Union[ForwardRef('GeoJSONLineString'), ForwardRef('GeoJSONMultiLineString'), ForwardRef('GeoJSONMultiPoint'), ForwardRef('GeoJSONMultiPolygon'), ForwardRef('GeoJSONPoint'), ForwardRef('GeoJSONPolygon'), invenio_rest_api_client.types.Unset] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifiers: Union[invenio_rest_api_client.types.Unset, list['FeatureIdentifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    place: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    description: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>A GeoJSON feature object.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_13","title":"Attributes","text":"Name Type Description Default geometry Union['GeoJSONLineString', 'GeoJSONMultiLineString', 'GeoJSONMultiPoint', 'GeoJSONMultiPolygon','GeoJSONPoint', 'GeoJSONPolygon', Unset] None identifiers Union[Unset, list['FeatureIdentifier']] A list of geographic location identifiers. None place Union[Unset, str] Free text, used to describe a geographical location. None description Union[Unset, str] Free text, used for any extra information related to the location. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_65","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_60","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_60","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>description\n</code></pre> <pre><code>geometry\n</code></pre> <pre><code>identifiers\n</code></pre> <pre><code>place\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_65","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_60","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#featureidentifier","title":"FeatureIdentifier","text":"<pre><code>class FeatureIdentifier(\n    id: str,\n    scheme: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>A geographic location identifier.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_14","title":"Attributes","text":"Name Type Description Default id str A globally unique identifier for the location. None scheme Union[Unset, str] The scheme of the identifier. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_66","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_61","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_61","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_66","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_61","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#filetransfer","title":"FileTransfer","text":"<pre><code>class FileTransfer(\n    type_: Union[invenio_rest_api_client.types.Unset, invenio_rest_api_client.models.file_transfer_type.FileTransferType] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    url: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (Union[Unset, FileTransferType]): The actual technology that is used to store a file url (Union[Unset, str]): URL to fetch the file from</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_67","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_62","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_62","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>type_\n</code></pre> <pre><code>url\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_67","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_62","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#filetransferitem","title":"FileTransferItem","text":"<pre><code>class FileTransferItem(\n    key: str,\n    size: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    checksum: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    transfer: Union[invenio_rest_api_client.types.Unset, ForwardRef('FileTransfer')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>A file object.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_15","title":"Attributes","text":"Name Type Description Default key str Key (filename) of the file None size Union[Unset, int] Size of the file in bytes. None checksum Union[Unset, str] Checksum of the file. None transfer Union[Unset, FileTransfer] None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_68","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_63","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_63","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>checksum\n</code></pre> <pre><code>key\n</code></pre> <pre><code>size\n</code></pre> <pre><code>transfer\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_68","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_63","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#filetransfertype","title":"FileTransferType","text":"<pre><code>class FileTransferType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_5","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_5","title":"Class variables","text":"<pre><code>F\n</code></pre> <pre><code>L\n</code></pre> <pre><code>M\n</code></pre> <pre><code>R\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_69","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_5","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_69","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_5","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_5","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_5","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_5","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_5","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_5","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_5","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_5","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_5","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_5","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_5","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_5","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_5","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_5","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_5","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_5","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_5","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_5","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_5","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_5","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_5","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_5","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_5","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_5","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_5","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_5","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_5","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_5","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_5","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_5","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_5","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_5","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_5","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_5","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_5","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_5","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_5","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_5","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_5","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_5","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_5","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_5","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_5","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_5","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_5","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_5","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#files","title":"Files","text":"<pre><code>class Files(\n    enabled: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    default_preview: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    order: Union[invenio_rest_api_client.types.Unset, list[str]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Files options for the record.</p> <p>More informations can be found on InvenioRDM Official page: https://inveniordm.docs.cern.ch/reference/rest_api_drafts_records/#files-options</p> <pre><code>Attributes:\n    enabled (Union[Unset, bool]): Should (and can) files be attached to this record or not.\n    default_preview (Union[Unset, str]): Filename of file to be previewed by default.\n    order (Union[Unset, list[str]]): Array of filename strings in display order.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_70","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_64","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_64","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>default_preview\n</code></pre> <pre><code>enabled\n</code></pre> <pre><code>order\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_70","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_64","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#funder","title":"Funder","text":"<pre><code>class Funder(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>The organisation of the funding provider.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_16","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] The funder id from the controlled vocabulary. None name Union[Unset, str] The name of the funder. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_71","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_65","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_65","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>name\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_71","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_65","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#funding","title":"Funding","text":"<pre><code>class Funding(\n    funder: 'Funder',\n    award: Union[invenio_rest_api_client.types.Unset, ForwardRef('Award')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Information about financial support (funding) for the resource being registered.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_17","title":"Attributes","text":"Name Type Description Default funder Funder The organisation of the funding provider. None award Union[Unset, Award] The award (grant) sponsored by the funder. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_72","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_66","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_66","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>award\n</code></pre> <pre><code>funder\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_72","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_66","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonlinestring","title":"GeoJSONLineString","text":"<pre><code>class GeoJSONLineString(\n    type_: invenio_rest_api_client.models.geo_json_line_string_type.GeoJSONLineStringType,\n    coordinates: list[list[float]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONLineStringType): coordinates (list[list[float]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_73","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_67","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_67","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_73","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_67","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonlinestringtype","title":"GeoJSONLineStringType","text":"<pre><code>class GeoJSONLineStringType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_6","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_6","title":"Class variables","text":"<pre><code>LINESTRING\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_74","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_6","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_74","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_6","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_6","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_6","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_6","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_6","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_6","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_6","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_6","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_6","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_6","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_6","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_6","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_6","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_6","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_6","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_6","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_6","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_6","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_6","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_6","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_6","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_6","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_6","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_6","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_6","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_6","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_6","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_6","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_6","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_6","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_6","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_6","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_6","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_6","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_6","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_6","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_6","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_6","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_6","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_6","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_6","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_6","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_6","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_6","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_6","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_6","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonmultilinestring","title":"GeoJSONMultiLineString","text":"<pre><code>class GeoJSONMultiLineString(\n    type_: invenio_rest_api_client.models.geo_json_multi_line_string_type.GeoJSONMultiLineStringType,\n    coordinates: list[list[list[float]]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONMultiLineStringType): coordinates (list[list[list[float]]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_75","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_68","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_68","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_75","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_68","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonmultilinestringtype","title":"GeoJSONMultiLineStringType","text":"<pre><code>class GeoJSONMultiLineStringType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_7","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_7","title":"Class variables","text":"<pre><code>MULTILINESTRING\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_76","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_7","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_76","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_7","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_7","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_7","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_7","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_7","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_7","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_7","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_7","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_7","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_7","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_7","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_7","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_7","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_7","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_7","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_7","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_7","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_7","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_7","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_7","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_7","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_7","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_7","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_7","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_7","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_7","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_7","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_7","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_7","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_7","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_7","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_7","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_7","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_7","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_7","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_7","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_7","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_7","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_7","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_7","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_7","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_7","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_7","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_7","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_7","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_7","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonmultipoint","title":"GeoJSONMultiPoint","text":"<pre><code>class GeoJSONMultiPoint(\n    type_: invenio_rest_api_client.models.geo_json_multi_point_type.GeoJSONMultiPointType,\n    coordinates: list[list[float]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONMultiPointType): coordinates (list[list[float]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_77","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_69","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_69","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_77","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_69","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonmultipointtype","title":"GeoJSONMultiPointType","text":"<pre><code>class GeoJSONMultiPointType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_8","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_8","title":"Class variables","text":"<pre><code>MULTIPOINT\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_78","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_8","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_78","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_8","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_8","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_8","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_8","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_8","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_8","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_8","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_8","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_8","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_8","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_8","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_8","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_8","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_8","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_8","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_8","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_8","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_8","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_8","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_8","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_8","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_8","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_8","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_8","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_8","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_8","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_8","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_8","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_8","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_8","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_8","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_8","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_8","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_8","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_8","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_8","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_8","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_8","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_8","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_8","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_8","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_8","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_8","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_8","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_8","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_8","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonmultipolygon","title":"GeoJSONMultiPolygon","text":"<pre><code>class GeoJSONMultiPolygon(\n    type_: invenio_rest_api_client.models.geo_json_multi_polygon_type.GeoJSONMultiPolygonType,\n    coordinates: list[list[list[list[float]]]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONMultiPolygonType): coordinates (list[list[list[list[float]]]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_79","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_70","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_70","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_79","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_70","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonmultipolygontype","title":"GeoJSONMultiPolygonType","text":"<pre><code>class GeoJSONMultiPolygonType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_9","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_9","title":"Class variables","text":"<pre><code>MULTIPOLYGON\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_80","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_9","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_80","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_9","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_9","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_9","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_9","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_9","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_9","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_9","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_9","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_9","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_9","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_9","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_9","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_9","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_9","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_9","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_9","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_9","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_9","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_9","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_9","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_9","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_9","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_9","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_9","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_9","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_9","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_9","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_9","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_9","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_9","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_9","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_9","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_9","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_9","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_9","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_9","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_9","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_9","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_9","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_9","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_9","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_9","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_9","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_9","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_9","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_9","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonpoint","title":"GeoJSONPoint","text":"<pre><code>class GeoJSONPoint(\n    type_: invenio_rest_api_client.models.geo_json_point_type.GeoJSONPointType,\n    coordinates: list[float],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONPointType): coordinates (list[float]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_81","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_71","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_71","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_81","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_71","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonpointtype","title":"GeoJSONPointType","text":"<pre><code>class GeoJSONPointType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_10","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_10","title":"Class variables","text":"<pre><code>POINT\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_82","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_10","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_82","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_10","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_10","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_10","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_10","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_10","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_10","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_10","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_10","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_10","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_10","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_10","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_10","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_10","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_10","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_10","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_10","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_10","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_10","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_10","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_10","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_10","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_10","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_10","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_10","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_10","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_10","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_10","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_10","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_10","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_10","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_10","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_10","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_10","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_10","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_10","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_10","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_10","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_10","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_10","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_10","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_10","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_10","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_10","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_10","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_10","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_10","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonpolygon","title":"GeoJSONPolygon","text":"<pre><code>class GeoJSONPolygon(\n    type_: invenio_rest_api_client.models.geo_json_polygon_type.GeoJSONPolygonType,\n    coordinates: list[list[list[float]]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONPolygonType): coordinates (list[list[list[float]]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_83","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_72","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_72","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_83","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_72","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#geojsonpolygontype","title":"GeoJSONPolygonType","text":"<pre><code>class GeoJSONPolygonType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_11","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_11","title":"Class variables","text":"<pre><code>POLYGON\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_84","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_11","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_84","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_11","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_11","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_11","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_11","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_11","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_11","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_11","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_11","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_11","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_11","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_11","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_11","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_11","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_11","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_11","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_11","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_11","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_11","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_11","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_11","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_11","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_11","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_11","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_11","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_11","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_11","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_11","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_11","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_11","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_11","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_11","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_11","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_11","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_11","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_11","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_11","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_11","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_11","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_11","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_11","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_11","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_11","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_11","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_11","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_11","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_11","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#getacommentresponse200","title":"GetACommentResponse200","text":"<pre><code>class GetACommentResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_85","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_73","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_73","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_85","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_73","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getacommunityresponse200","title":"GetACommunityResponse200","text":"<pre><code>class GetACommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_86","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_74","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_74","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_86","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_74","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getadraftfilesmetadataresponse200","title":"GetADraftFilesMetadataResponse200","text":"<pre><code>class GetADraftFilesMetadataResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_87","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_75","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_75","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_87","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_75","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getadraftrecordsresponse200","title":"GetADraftRecordsResponse200","text":"<pre><code>class GetADraftRecordsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_88","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_76","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_76","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_88","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_76","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getarecordbyidresponse200","title":"GetARecordByIdResponse200","text":"<pre><code>class GetARecordByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_89","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_77","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_77","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_89","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_77","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getarecordfilesmetadataresponse200","title":"GetARecordFilesMetadataResponse200","text":"<pre><code>class GetARecordFilesMetadataResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_90","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_78","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_78","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_90","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_78","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getarequestresponse200","title":"GetARequestResponse200","text":"<pre><code>class GetARequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_91","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_79","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_79","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_91","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_79","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getarequeststimelineresponse200","title":"GetARequestsTimelineResponse200","text":"<pre><code>class GetARequestsTimelineResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_92","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_80","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_80","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_92","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_80","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getareviewrequestresponse200","title":"GetAReviewRequestResponse200","text":"<pre><code>class GetAReviewRequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_93","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_81","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_81","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_93","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_81","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getasetbyidresponse200","title":"GetASetByIdResponse200","text":"<pre><code>class GetASetByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_94","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_82","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_82","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_94","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_82","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getauserbyidresponse200","title":"GetAUserByIdResponse200","text":"<pre><code>class GetAUserByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_95","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_83","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_83","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_95","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_83","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getavocabularyrecordbyidresponse200","title":"GetAVocabularyRecordByIdResponse200","text":"<pre><code>class GetAVocabularyRecordByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_96","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_84","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_84","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_96","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_84","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getalldraftrecordsresponse200","title":"GetAllDraftRecordsResponse200","text":"<pre><code>class GetAllDraftRecordsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_97","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_85","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_85","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_97","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_85","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getallversionsresponse200","title":"GetAllVersionsResponse200","text":"<pre><code>class GetAllVersionsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_98","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_86","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_86","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_98","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_86","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getanaccesslinkbyidresponse200","title":"GetAnAccessLinkByIdResponse200","text":"<pre><code>class GetAnAccessLinkByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_99","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_87","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_87","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_99","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_87","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getavatarforgroupresponse200","title":"GetAvatarForGroupResponse200","text":"<pre><code>class GetAvatarForGroupResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_100","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_88","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_88","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_100","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_88","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getavatarforuserresponse200","title":"GetAvatarForUserResponse200","text":"<pre><code>class GetAvatarForUserResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_101","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_89","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_89","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_101","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_89","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getcommunitylogoresponse200","title":"GetCommunityLogoResponse200","text":"<pre><code>class GetCommunityLogoResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_102","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_90","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_90","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_102","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_90","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getcommunityrecordsresponse200","title":"GetCommunityRecordsResponse200","text":"<pre><code>class GetCommunityRecordsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_103","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_91","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_91","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_103","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_91","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getfeaturedcommunityentryresponse200","title":"GetFeaturedCommunityEntryResponse200","text":"<pre><code>class GetFeaturedCommunityEntryResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_104","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_92","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_92","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_104","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_92","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getgroupbyidresponse200","title":"GetGroupByIdResponse200","text":"<pre><code>class GetGroupByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_105","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_93","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_93","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_105","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_93","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getlatestversionresponse200","title":"GetLatestVersionResponse200","text":"<pre><code>class GetLatestVersionResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_106","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_94","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_94","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_106","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_94","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getmetadataformatsresponse200","title":"GetMetadataFormatsResponse200","text":"<pre><code>class GetMetadataFormatsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_107","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_95","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_95","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_107","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_95","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getnamesbyidresponse200","title":"GetNamesByIdResponse200","text":"<pre><code>class GetNamesByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_108","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_96","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_96","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_108","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_96","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getnamesresponse200","title":"GetNamesResponse200","text":"<pre><code>class GetNamesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_109","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_97","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_97","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_109","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_97","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getstatisticsbody","title":"GetStatisticsBody","text":"<pre><code>class GetStatisticsBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_110","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_98","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_98","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_110","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_98","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#getuserbyiddetailedresponse200","title":"GetUserByIdDetailedResponse200","text":"<pre><code>class GetUserByIdDetailedResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_111","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_99","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_99","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_111","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_99","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#identifier","title":"Identifier","text":"<pre><code>class Identifier(\n    scheme: invenio_rest_api_client.models.person_or_org_identifier_scheme.PersonOrOrgIdentifierScheme,\n    identifier: str\n)\n</code></pre> <p>Person or organisation identifier.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_18","title":"Attributes","text":"Name Type Description Default scheme PersonOrOrgIdentifierScheme The identifier scheme.Note that the identifiers' schemes are passed lowercased e.g. ORCID is <code>orcid</code>. None identifier str Actual value of the identifier. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_112","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_100","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_100","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_112","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_100","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#identifierscheme","title":"IdentifierScheme","text":"<pre><code>class IdentifierScheme(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_12","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_12","title":"Class variables","text":"<pre><code>ADS\n</code></pre> <pre><code>ARK\n</code></pre> <pre><code>ARXIV\n</code></pre> <pre><code>CROSSREFFUNDERID\n</code></pre> <pre><code>DOI\n</code></pre> <pre><code>EAN13\n</code></pre> <pre><code>EISSN\n</code></pre> <pre><code>GRID\n</code></pre> <pre><code>HANDLE\n</code></pre> <pre><code>IGSN\n</code></pre> <pre><code>ISBN\n</code></pre> <pre><code>ISNI\n</code></pre> <pre><code>ISSN\n</code></pre> <pre><code>ISTC\n</code></pre> <pre><code>LISSN\n</code></pre> <pre><code>LSID\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>PMID\n</code></pre> <pre><code>PURL\n</code></pre> <pre><code>UPC\n</code></pre> <pre><code>URL\n</code></pre> <pre><code>URN\n</code></pre> <pre><code>W3ID\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_113","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_12","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_113","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_12","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_12","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_12","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_12","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_12","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_12","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_12","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_12","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_12","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_12","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_12","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_12","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_12","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_12","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_12","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_12","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_12","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_12","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_12","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_12","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_12","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_12","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_12","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_12","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_12","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_12","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_12","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_12","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_12","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_12","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_12","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_12","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_12","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_12","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_12","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_12","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_12","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_12","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_12","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_12","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_12","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_12","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_12","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_12","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_12","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_12","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#inviteusermembersbody","title":"InviteUserMembersBody","text":"<pre><code>class InviteUserMembersBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_114","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_101","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_101","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_114","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_101","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#lang","title":"Lang","text":"<pre><code>class Lang(\n    id: str\n)\n</code></pre> <p>The language of the associated item.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_19","title":"Attributes","text":"Name Type Description Default id str The ISO-639-3 language code. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_115","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_102","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_102","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_115","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_102","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#listadraftsfilesresponse200","title":"ListADraftsFilesResponse200","text":"<pre><code>class ListADraftsFilesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_116","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_103","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_103","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_116","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_103","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#listarecordsfilesresponse200","title":"ListARecordsFilesResponse200","text":"<pre><code>class ListARecordsFilesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_117","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_104","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_104","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_117","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_104","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#listaccesslinksresponse200","title":"ListAccessLinksResponse200","text":"<pre><code>class ListAccessLinksResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_118","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_105","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_105","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_118","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_105","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#location","title":"Location","text":"<pre><code>class Location(\n    features: list['Feature']\n)\n</code></pre> <p>Spatial region or named place where the data was gathered or about which the data is focused.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_20","title":"Attributes","text":"Name Type Description Default features list['Feature'] A list of GeoJSON feature objects. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_119","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_106","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_106","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>features\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_119","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_106","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#metadata","title":"Metadata","text":"<pre><code>class Metadata(\n    resource_type: 'ResourceType',\n    title: str,\n    publication_date: datetime.date,\n    creators: list['Creator'],\n    publisher: str,\n    additional_titles: Union[invenio_rest_api_client.types.Unset, list['AdditionalTitle']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    description: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    additional_descriptions: Union[invenio_rest_api_client.types.Unset, list['AdditionalDescription']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    rights: Union[invenio_rest_api_client.types.Unset, list['Right']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    copyright_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    contributors: Union[invenio_rest_api_client.types.Unset, Any] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    subjects: Union[invenio_rest_api_client.types.Unset, list['Subject']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    languages: Union[invenio_rest_api_client.types.Unset, list['Lang']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    dates: Union[invenio_rest_api_client.types.Unset, list['Date']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    version: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifiers: Union[invenio_rest_api_client.types.Unset, list['AlternateIdentifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    related_identifiers: Union[invenio_rest_api_client.types.Unset, list['RelatedIdentifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sizes: Union[invenio_rest_api_client.types.Unset, list[str]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    formats: Union[invenio_rest_api_client.types.Unset, list[str]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    locations: Union[invenio_rest_api_client.types.Unset, list['Location']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    funding: Union[invenio_rest_api_client.types.Unset, list['Funding']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    references: Union[invenio_rest_api_client.types.Unset, list['Reference']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Metadata schema of bibliographic records in InvenioRDM.</p> <p>More informations can be found on InvenioRDM Official page: https://inveniordm.docs.cern.ch/reference/metadata/#metadata</p> <pre><code>Attributes:\n    resource_type (ResourceType): The type of the resource described by the record.\n    title (str): A primary name or primary title by which a resource is known.\n    publication_date (datetime.date): The date when the resource was or will be made publicly available.\n    creators (list['Creator']): The creators field registers those persons or organisations that should be credited\n        for the resource described by the record.\n    publisher (str): The name of the entity that holds, archives, publishes, prints, distributes, releases, issues,\n        or produces the resource.\n    additional_titles (Union[Unset, list['AdditionalTitle']]): Additional names or titles by which a resource is\n        known\n    description (Union[Unset, str]): The description of a record.\n    additional_descriptions (Union[Unset, list['AdditionalDescription']]): Additional descriptions in addition to\n        the primary description (e.g. abstracts in other languages), methods or further notes.\n    rights (Union[Unset, list['Right']]): Rights management statement for the resource.\n    copyright_ (Union[Unset, str]): The copyright field allows authors or depositors to specify a copyright\n        statement for the record.\n    contributors (Union[Unset, Any]): The organisations or persons responsible for collecting, managing,\n        distributing, or otherwise contributing to the development of the resource.\n    subjects (Union[Unset, list['Subject']]): Subject, keyword, classification code, or key phrase describing the\n        resource.\n    languages (Union[Unset, list['Lang']]): The languages of the resource.\n    dates (Union[Unset, list['Date']]): Different dates relevant to the resource.\n    version (Union[Unset, str]): The version number of the resource.\n    identifiers (Union[Unset, list['AlternateIdentifier']]): Persistent identifiers for the resource other than the\n        ones registered as system-managed internal or external persistent identifiers.\n    related_identifiers (Union[Unset, list['RelatedIdentifier']]): Identifiers of related resources.\n    sizes (Union[Unset, list[str]]): Size (e.g. bytes, pages, inches, etc.) or duration (extent), e.g. hours,\n        minutes, days, etc., of a resource.\n    formats (Union[Unset, list[str]]): Technical format of the resource.\n    locations (Union[Unset, list['Location']]): Spatial region or named place where the data was gathered or about\n        which the data is focused.\n    funding (Union[Unset, list['Funding']]): Information about financial support (funding) for the resource being\n        registered.\n    references (Union[Unset, list['Reference']]): A list of reference strings.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_120","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_107","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_107","title":"Instance variables","text":"<pre><code>additional_descriptions\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>additional_titles\n</code></pre> <pre><code>contributors\n</code></pre> <pre><code>copyright_\n</code></pre> <pre><code>creators\n</code></pre> <pre><code>dates\n</code></pre> <pre><code>description\n</code></pre> <pre><code>formats\n</code></pre> <pre><code>funding\n</code></pre> <pre><code>identifiers\n</code></pre> <pre><code>languages\n</code></pre> <pre><code>locations\n</code></pre> <pre><code>publication_date\n</code></pre> <pre><code>publisher\n</code></pre> <pre><code>references\n</code></pre> <pre><code>related_identifiers\n</code></pre> <pre><code>resource_type\n</code></pre> <pre><code>rights\n</code></pre> <pre><code>sizes\n</code></pre> <pre><code>subjects\n</code></pre> <pre><code>title\n</code></pre> <pre><code>version\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_120","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_107","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#pid","title":"PID","text":"<pre><code>class PID(\n    identifier: Union[invenio_rest_api_client.types.Unset, Any] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    provider: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    client: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>An external persistent identifier object.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_21","title":"Attributes","text":"Name Type Description Default identifier Union[Unset, Any] An identifier. None provider Union[Unset, str] The provider of the persistent identifier. None client Union[Unset, str] Client identifier for the specific PID. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_121","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_108","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_108","title":"Instance variables","text":"<pre><code>client\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>provider\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_121","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_108","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#pids","title":"PIDs","text":"<pre><code>class PIDs(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_122","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_109","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_109","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_122","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_109","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#personororg","title":"PersonOrOrg","text":"<pre><code>class PersonOrOrg(\n    type_: invenio_rest_api_client.models.person_or_org_type.PersonOrOrgType,\n    given_name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    family_name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifiers: Union[invenio_rest_api_client.types.Unset, list['Identifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>The person or organization.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_22","title":"Attributes","text":"Name Type Description Default type_ PersonOrOrgType The type of name. None given_name Union[Unset, str] Given name(s). None family_name Union[Unset, str] Family name. None name Union[Unset, str] The full name of the organisation.For a person, this field is generated from <code>given_name</code> and <code>family_name</code>. None identifiers Union[Unset, list['Identifier']] Person or organisation identifiers. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_123","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_110","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_110","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>family_name\n</code></pre> <pre><code>given_name\n</code></pre> <pre><code>identifiers\n</code></pre> <pre><code>name\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_123","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_110","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#personororgidentifierscheme","title":"PersonOrOrgIdentifierScheme","text":"<pre><code>class PersonOrOrgIdentifierScheme(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_13","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_13","title":"Class variables","text":"<pre><code>GND\n</code></pre> <pre><code>ISNI\n</code></pre> <pre><code>ORCID\n</code></pre> <pre><code>ROR\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_124","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_13","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_124","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_13","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_13","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_13","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_13","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_13","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_13","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_13","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_13","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_13","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_13","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_13","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_13","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_13","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_13","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_13","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_13","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_13","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_13","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_13","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_13","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_13","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_13","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_13","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_13","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_13","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_13","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_13","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_13","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_13","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_13","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_13","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_13","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_13","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_13","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_13","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_13","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_13","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_13","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_13","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_13","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_13","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_13","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_13","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_13","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_13","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_13","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#personororgtype","title":"PersonOrOrgType","text":"<pre><code>class PersonOrOrgType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_14","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_14","title":"Class variables","text":"<pre><code>ORGANIZATIONAL\n</code></pre> <pre><code>PERSONAL\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_125","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_14","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_125","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_14","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_14","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_14","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_14","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_14","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_14","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_14","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_14","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_14","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_14","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_14","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_14","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_14","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_14","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_14","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_14","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_14","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_14","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_14","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_14","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_14","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_14","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_14","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_14","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_14","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_14","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_14","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_14","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_14","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_14","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_14","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_14","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_14","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_14","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_14","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_14","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_14","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_14","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_14","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_14","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_14","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_14","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_14","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_14","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_14","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_14","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#reference","title":"Reference","text":"<pre><code>class Reference(\n    reference: str,\n    scheme: Union[invenio_rest_api_client.types.Unset, invenio_rest_api_client.models.identifier_scheme.IdentifierScheme] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifier: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Reference string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_23","title":"Attributes","text":"Name Type Description Default reference str The full reference string. None scheme Union[Unset, IdentifierScheme] The scheme of the identifier None identifier Union[Unset, str] The identifier if known. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_126","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_111","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_111","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>reference\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_126","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_111","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#relatedidentifier","title":"RelatedIdentifier","text":"<pre><code>class RelatedIdentifier(\n    identifier: str,\n    scheme: invenio_rest_api_client.models.identifier_scheme.IdentifierScheme,\n    relation_type: 'RelationType',\n    resource_type: Union[invenio_rest_api_client.types.Unset, ForwardRef('RelatedIdentifierResourceType')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Identifier of related resources.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_24","title":"Attributes","text":"Name Type Description Default identifier str A global unique persistent identifier for a related resource. None scheme IdentifierScheme The scheme of the identifier None relation_type RelationType The relation of the record to this related resource. None resource_type Union[Unset, RelatedIdentifierResourceType] The resource type of the related resource None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_127","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_112","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_112","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>relation_type\n</code></pre> <pre><code>resource_type\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_127","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_112","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#relatedidentifierresourcetype","title":"RelatedIdentifierResourceType","text":"<pre><code>class RelatedIdentifierResourceType(\n    id: invenio_rest_api_client.models.related_identifier_resource_type_id.RelatedIdentifierResourceTypeId,\n    title: 'RelatedIdentifierResourceTypeTitle'\n)\n</code></pre> <p>The resource type of the related resource</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_25","title":"Attributes","text":"Name Type Description Default id RelatedIdentifierResourceTypeId Date type id from the controlled vocabulary. None title RelatedIdentifierResourceTypeTitle The corresponding localized human readable label None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_128","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_113","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_113","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_128","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_113","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#relatedidentifierresourcetypeid","title":"RelatedIdentifierResourceTypeId","text":"<pre><code>class RelatedIdentifierResourceTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_15","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_15","title":"Class variables","text":"<pre><code>AUDIO\n</code></pre> <pre><code>DATASET\n</code></pre> <pre><code>EVENT\n</code></pre> <pre><code>IMAGE\n</code></pre> <pre><code>IMAGE_DIAGRAM\n</code></pre> <pre><code>IMAGE_DRAWING\n</code></pre> <pre><code>IMAGE_FIGURE\n</code></pre> <pre><code>IMAGE_OTHER\n</code></pre> <pre><code>IMAGE_PHOTO\n</code></pre> <pre><code>IMAGE_PLOT\n</code></pre> <pre><code>LESSON\n</code></pre> <pre><code>MODEL\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>PHYSICALOBJECT\n</code></pre> <pre><code>POSTER\n</code></pre> <pre><code>PRESENTATION\n</code></pre> <pre><code>PUBLICATION\n</code></pre> <pre><code>PUBLICATION_ANNOTATIONCOLLECTION\n</code></pre> <pre><code>PUBLICATION_ARTICLE\n</code></pre> <pre><code>PUBLICATION_BOOK\n</code></pre> <pre><code>PUBLICATION_CONFERENCEPAPER\n</code></pre> <pre><code>PUBLICATION_CONFERENCEPROCEEDING\n</code></pre> <pre><code>PUBLICATION_DATAMANAGEMENTPLAN\n</code></pre> <pre><code>PUBLICATION_DATAPAPER\n</code></pre> <pre><code>PUBLICATION_DELIVERABLE\n</code></pre> <pre><code>PUBLICATION_DISSERTATION\n</code></pre> <pre><code>PUBLICATION_JOURNAL\n</code></pre> <pre><code>PUBLICATION_MILESTONE\n</code></pre> <pre><code>PUBLICATION_OTHER\n</code></pre> <pre><code>PUBLICATION_PATENT\n</code></pre> <pre><code>PUBLICATION_PEERREVIEW\n</code></pre> <pre><code>PUBLICATION_PREPRINT\n</code></pre> <pre><code>PUBLICATION_PROPOSAL\n</code></pre> <pre><code>PUBLICATION_REPORT\n</code></pre> <pre><code>PUBLICATION_SECTION\n</code></pre> <pre><code>PUBLICATION_SOFTWAREDOCUMENTATION\n</code></pre> <pre><code>PUBLICATION_STANDARD\n</code></pre> <pre><code>PUBLICATION_TAXONOMICTREATMENT\n</code></pre> <pre><code>PUBLICATION_TECHNICALNOTE\n</code></pre> <pre><code>PUBLICATION_THESIS\n</code></pre> <pre><code>PUBLICATION_WORKINGPAPER\n</code></pre> <pre><code>SOFTWARE\n</code></pre> <pre><code>SOFTWARE_COMPUTATIONALNOTEBOOK\n</code></pre> <pre><code>VIDEO\n</code></pre> <pre><code>WORKFLOW\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_129","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_15","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_129","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_15","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_15","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_15","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_15","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_15","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_15","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_15","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_15","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_15","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_15","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_15","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_15","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_15","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_15","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_15","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_15","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_15","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_15","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_15","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_15","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_15","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_15","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_15","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_15","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_15","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_15","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_15","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_15","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_15","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_15","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_15","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_15","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_15","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_15","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_15","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_15","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_15","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_15","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_15","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_15","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_15","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_15","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_15","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_15","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_15","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_15","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#relatedidentifierresourcetypetitle","title":"RelatedIdentifierResourceTypeTitle","text":"<pre><code>class RelatedIdentifierResourceTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_130","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_114","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_114","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_130","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_114","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#relationtype","title":"RelationType","text":"<pre><code>class RelationType(\n    id: invenio_rest_api_client.models.relation_type_id.RelationTypeId,\n    title: 'RelationTypeTitle'\n)\n</code></pre> <p>The relation of the record to this related resource.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_26","title":"Attributes","text":"Name Type Description Default id RelationTypeId Relation type id from the controlled vocabulary None title RelationTypeTitle The corresponding localized human readable label None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_131","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_115","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_115","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_131","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_115","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#relationtypeid","title":"RelationTypeId","text":"<pre><code>class RelationTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_16","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_16","title":"Class variables","text":"<pre><code>CITES\n</code></pre> <pre><code>COMPILES\n</code></pre> <pre><code>CONTINUES\n</code></pre> <pre><code>DESCRIBES\n</code></pre> <pre><code>DOCUMENTS\n</code></pre> <pre><code>HASMETADATA\n</code></pre> <pre><code>HASPART\n</code></pre> <pre><code>HASVERSION\n</code></pre> <pre><code>ISCITEDBY\n</code></pre> <pre><code>ISCOMPILEDBY\n</code></pre> <pre><code>ISCONTINUEDBY\n</code></pre> <pre><code>ISDERIVEDFROM\n</code></pre> <pre><code>ISDESCRIBEDBY\n</code></pre> <pre><code>ISDOCUMENTEDBY\n</code></pre> <pre><code>ISIDENTICALTO\n</code></pre> <pre><code>ISMETADATAFOR\n</code></pre> <pre><code>ISNEWVERSIONOF\n</code></pre> <pre><code>ISOBSOLETEDBY\n</code></pre> <pre><code>ISORIGINALFORMOF\n</code></pre> <pre><code>ISPARTOF\n</code></pre> <pre><code>ISPREVIOUSVERSIONOF\n</code></pre> <pre><code>ISPUBLISHEDIN\n</code></pre> <pre><code>ISREFERENCEDBY\n</code></pre> <pre><code>ISREQUIREDBY\n</code></pre> <pre><code>ISREVIEWEDBY\n</code></pre> <pre><code>ISSOURCEOF\n</code></pre> <pre><code>ISSUPPLEMENTEDBY\n</code></pre> <pre><code>ISSUPPLEMENTTO\n</code></pre> <pre><code>ISVARIANTFORMOF\n</code></pre> <pre><code>ISVERSIONOF\n</code></pre> <pre><code>OBSOLETES\n</code></pre> <pre><code>REFERENCES\n</code></pre> <pre><code>REQUIRES\n</code></pre> <pre><code>REVIEWS\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_132","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_16","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_132","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_16","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_16","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_16","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_16","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_16","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_16","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_16","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_16","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_16","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_16","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_16","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_16","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_16","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_16","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_16","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_16","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_16","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_16","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_16","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_16","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_16","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_16","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_16","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_16","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_16","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_16","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_16","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_16","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_16","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_16","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_16","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_16","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_16","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_16","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_16","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_16","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_16","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_16","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_16","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_16","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_16","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_16","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_16","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_16","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_16","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_16","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#relationtypetitle","title":"RelationTypeTitle","text":"<pre><code>class RelationTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_133","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_116","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_116","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_133","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_116","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#removemembersleavecommunityresponse200","title":"RemoveMembersLeaveCommunityResponse200","text":"<pre><code>class RemoveMembersLeaveCommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_134","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_117","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_117","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_134","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_117","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#renameacommunitybody","title":"RenameACommunityBody","text":"<pre><code>class RenameACommunityBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_135","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_118","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_118","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_135","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_118","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#resourcetype","title":"ResourceType","text":"<pre><code>class ResourceType(\n    id: invenio_rest_api_client.models.resource_type_id.ResourceTypeId\n)\n</code></pre> <p>The type of the resource described by the record.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_27","title":"Attributes","text":"Name Type Description Default id ResourceTypeId The resource type id from the controlled vocabulary. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_136","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_119","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_119","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_136","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_119","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#resourcetypeid","title":"ResourceTypeId","text":"<pre><code>class ResourceTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_17","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_17","title":"Class variables","text":"<pre><code>AUDIO\n</code></pre> <pre><code>DATASET\n</code></pre> <pre><code>EVENT\n</code></pre> <pre><code>IMAGE\n</code></pre> <pre><code>IMAGE_DIAGRAM\n</code></pre> <pre><code>IMAGE_DRAWING\n</code></pre> <pre><code>IMAGE_FIGURE\n</code></pre> <pre><code>IMAGE_OTHER\n</code></pre> <pre><code>IMAGE_PHOTO\n</code></pre> <pre><code>IMAGE_PLOT\n</code></pre> <pre><code>LESSON\n</code></pre> <pre><code>MODEL\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>PHYSICALOBJECT\n</code></pre> <pre><code>POSTER\n</code></pre> <pre><code>PRESENTATION\n</code></pre> <pre><code>PUBLICATION\n</code></pre> <pre><code>PUBLICATION_ANNOTATIONCOLLECTION\n</code></pre> <pre><code>PUBLICATION_ARTICLE\n</code></pre> <pre><code>PUBLICATION_BOOK\n</code></pre> <pre><code>PUBLICATION_CONFERENCEPAPER\n</code></pre> <pre><code>PUBLICATION_CONFERENCEPROCEEDING\n</code></pre> <pre><code>PUBLICATION_DATAMANAGEMENTPLAN\n</code></pre> <pre><code>PUBLICATION_DATAPAPER\n</code></pre> <pre><code>PUBLICATION_DELIVERABLE\n</code></pre> <pre><code>PUBLICATION_DISSERTATION\n</code></pre> <pre><code>PUBLICATION_JOURNAL\n</code></pre> <pre><code>PUBLICATION_MILESTONE\n</code></pre> <pre><code>PUBLICATION_OTHER\n</code></pre> <pre><code>PUBLICATION_PATENT\n</code></pre> <pre><code>PUBLICATION_PEERREVIEW\n</code></pre> <pre><code>PUBLICATION_PREPRINT\n</code></pre> <pre><code>PUBLICATION_PROPOSAL\n</code></pre> <pre><code>PUBLICATION_REPORT\n</code></pre> <pre><code>PUBLICATION_SECTION\n</code></pre> <pre><code>PUBLICATION_SOFTWAREDOCUMENTATION\n</code></pre> <pre><code>PUBLICATION_STANDARD\n</code></pre> <pre><code>PUBLICATION_TAXONOMICTREATMENT\n</code></pre> <pre><code>PUBLICATION_TECHNICALNOTE\n</code></pre> <pre><code>PUBLICATION_THESIS\n</code></pre> <pre><code>PUBLICATION_WORKINGPAPER\n</code></pre> <pre><code>SOFTWARE\n</code></pre> <pre><code>SOFTWARE_COMPUTATIONALNOTEBOOK\n</code></pre> <pre><code>VIDEO\n</code></pre> <pre><code>WORKFLOW\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_137","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_17","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_137","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_17","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_17","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_17","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_17","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_17","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_17","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_17","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_17","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_17","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_17","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_17","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_17","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_17","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_17","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_17","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_17","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_17","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_17","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_17","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_17","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_17","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_17","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_17","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_17","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_17","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_17","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_17","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_17","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_17","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_17","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_17","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_17","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_17","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_17","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_17","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_17","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_17","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_17","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_17","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_17","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_17","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_17","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_17","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_17","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_17","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_17","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#right","title":"Right","text":"<pre><code>class Right(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    title: Union[invenio_rest_api_client.types.Unset, ForwardRef('RightTitle')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    description: Union[invenio_rest_api_client.types.Unset, ForwardRef('RightDescription')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    links: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Right management statement for the resource.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_28","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] Identifier value. None title Union[Unset, RightTitle] Localized human readable title. None description Union[Unset, RightDescription] Localized license description text None links Union[Unset, str] Link to full license. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_138","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_120","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_120","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>description\n</code></pre> <pre><code>id\n</code></pre> <pre><code>links\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_138","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_120","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#rightdescription","title":"RightDescription","text":"<pre><code>class RightDescription(\n\n)\n</code></pre> <p>Localized license description text</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_139","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_121","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_121","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_139","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_121","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#righttitle","title":"RightTitle","text":"<pre><code>class RightTitle(\n\n)\n</code></pre> <p>Localized human readable title.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_140","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_122","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_122","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_140","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_122","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#role","title":"Role","text":"<pre><code>class Role(\n    id: invenio_rest_api_client.models.role_id.RoleId\n)\n</code></pre> <p>The role of the person or organisation selected from a customizable controlled vocabulary.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_29","title":"Attributes","text":"Name Type Description Default id RoleId The role's controlled vocabulary identifier. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_141","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_123","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_123","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_141","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_123","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#roleid","title":"RoleId","text":"<pre><code>class RoleId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ancestors-in-mro_18","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/#class-variables_18","title":"Class variables","text":"<pre><code>CONTACTPERSON\n</code></pre> <pre><code>DATACOLLECTOR\n</code></pre> <pre><code>DATACURATOR\n</code></pre> <pre><code>DATAMANAGER\n</code></pre> <pre><code>DISTRIBUTOR\n</code></pre> <pre><code>EDITOR\n</code></pre> <pre><code>HOSTINGINSTITUTION\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>PRODUCER\n</code></pre> <pre><code>PROJECTLEADER\n</code></pre> <pre><code>PROJECTMANAGER\n</code></pre> <pre><code>PROJECTMEMBER\n</code></pre> <pre><code>REGISTRATIONAGENCY\n</code></pre> <pre><code>REGISTRATIONAUTHORITY\n</code></pre> <pre><code>RELATEDPERSON\n</code></pre> <pre><code>RESEARCHER\n</code></pre> <pre><code>RESEARCHGROUP\n</code></pre> <pre><code>RIGHTSHOLDER\n</code></pre> <pre><code>SPONSOR\n</code></pre> <pre><code>SUPERVISOR\n</code></pre> <pre><code>WORKPACKAGELEADER\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_142","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#maketrans_18","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_142","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#capitalize_18","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#casefold_18","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#center_18","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#count_18","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#encode_18","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#endswith_18","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#expandtabs_18","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#find_18","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_18","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#format_map_18","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/#index_18","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalnum_18","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isalpha_18","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isascii_18","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdecimal_18","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isdigit_18","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isidentifier_18","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/#islower_18","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isnumeric_18","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isprintable_18","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isspace_18","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#istitle_18","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#isupper_18","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#join_18","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/#ljust_18","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lower_18","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#lstrip_18","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#partition_18","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removeprefix_18","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#removesuffix_18","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#replace_18","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rfind_18","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rindex_18","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rjust_18","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rpartition_18","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rsplit_18","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#rstrip_18","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#split_18","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#splitlines_18","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#startswith_18","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#strip_18","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#swapcase_18","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#title_18","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#translate_18","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#upper_18","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#zfill_18","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#searchcommunitiesresponse200","title":"SearchCommunitiesResponse200","text":"<pre><code>class SearchCommunitiesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_143","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_124","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_124","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_143","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_124","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchfeaturedcommunitiesresponse200","title":"SearchFeaturedCommunitiesResponse200","text":"<pre><code>class SearchFeaturedCommunitiesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_144","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_125","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_125","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_144","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_125","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchgroupsresponse200","title":"SearchGroupsResponse200","text":"<pre><code>class SearchGroupsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_145","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_126","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_126","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_145","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_126","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchinvitationsresponse200","title":"SearchInvitationsResponse200","text":"<pre><code>class SearchInvitationsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_146","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_127","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_127","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_146","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_127","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchmembersresponse200","title":"SearchMembersResponse200","text":"<pre><code>class SearchMembersResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_147","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_128","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_128","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_147","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_128","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchpublicmembersresponse200","title":"SearchPublicMembersResponse200","text":"<pre><code>class SearchPublicMembersResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_148","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_129","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_129","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_148","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_129","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchrecordsresponse200","title":"SearchRecordsResponse200","text":"<pre><code>class SearchRecordsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_149","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_130","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_130","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_149","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_130","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchrequestsresponse200","title":"SearchRequestsResponse200","text":"<pre><code>class SearchRequestsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_150","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_131","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_131","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_150","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_131","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchsetsresponse200","title":"SearchSetsResponse200","text":"<pre><code>class SearchSetsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_151","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_132","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_132","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_151","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_132","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchusercommunitiesresponse200","title":"SearchUserCommunitiesResponse200","text":"<pre><code>class SearchUserCommunitiesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_152","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_133","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_133","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_152","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_133","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchvocabularieslanguagesresponse200","title":"SearchVocabulariesLanguagesResponse200","text":"<pre><code>class SearchVocabulariesLanguagesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_153","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_134","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_134","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_153","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_134","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchvocabularieslicensesresponse200","title":"SearchVocabulariesLicensesResponse200","text":"<pre><code>class SearchVocabulariesLicensesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_154","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_135","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_135","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_154","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_135","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchvocabulariesrelationtypesresponse200","title":"SearchVocabulariesRelationtypesResponse200","text":"<pre><code>class SearchVocabulariesRelationtypesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_155","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_136","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_136","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_155","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_136","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchvocabulariesresourcetypesresponse200","title":"SearchVocabulariesResourcetypesResponse200","text":"<pre><code>class SearchVocabulariesResourcetypesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_156","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_137","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_137","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_156","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_137","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#searchvocabulariesresponse200","title":"SearchVocabulariesResponse200","text":"<pre><code>class SearchVocabulariesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_157","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_138","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_138","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_157","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_138","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#specificvocabulariesaffiliationsbyidresponse200","title":"SpecificVocabulariesAffiliationsByIdResponse200","text":"<pre><code>class SpecificVocabulariesAffiliationsByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_158","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_139","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_139","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_158","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_139","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#specificvocabulariesaffiliationsresponse200","title":"SpecificVocabulariesAffiliationsResponse200","text":"<pre><code>class SpecificVocabulariesAffiliationsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_159","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_140","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_140","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_159","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_140","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#specificvocabulariesawardsbyidresponse200","title":"SpecificVocabulariesAwardsByIdResponse200","text":"<pre><code>class SpecificVocabulariesAwardsByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_160","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_141","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_141","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_160","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_141","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#specificvocabulariesawardsresponse200","title":"SpecificVocabulariesAwardsResponse200","text":"<pre><code>class SpecificVocabulariesAwardsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_161","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_142","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_142","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_161","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_142","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#specificvocabulariesfundersbyidresponse200","title":"SpecificVocabulariesFundersByIdResponse200","text":"<pre><code>class SpecificVocabulariesFundersByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_162","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_143","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_143","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_162","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_143","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#specificvocabulariesfundersresponse200","title":"SpecificVocabulariesFundersResponse200","text":"<pre><code>class SpecificVocabulariesFundersResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_163","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_144","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_144","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_163","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_144","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#specificvocabulariessubjectsbyidresponse200","title":"SpecificVocabulariesSubjectsByIdResponse200","text":"<pre><code>class SpecificVocabulariesSubjectsByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_164","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_145","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_145","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_164","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_145","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#specificvocabulariessubjectsresponse200","title":"SpecificVocabulariesSubjectsResponse200","text":"<pre><code>class SpecificVocabulariesSubjectsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_165","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_146","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_146","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_165","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_146","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#step2uploadadraftfilescontentresponse200","title":"Step2UploadADraftFilesContentResponse200","text":"<pre><code>class Step2UploadADraftFilesContentResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_166","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_147","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_147","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_166","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_147","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#subject","title":"Subject","text":"<pre><code>class Subject(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    subject: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Subject, keyword, classification code, or key phrase describing the resource.</p>"},{"location":"api/latest/invenio_rest_api_client/models/#attributes_30","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] The identifier of the subject from the controlled vocabulary. None subject Union[Unset, str] A custom keyword. None"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_167","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_148","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_148","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>subject\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_167","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_148","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#submitacommentonarequestbody","title":"SubmitACommentOnARequestBody","text":"<pre><code>class SubmitACommentOnARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_168","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_149","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_149","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_168","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_149","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#submitarecordforreviewbody","title":"SubmitARecordForReviewBody","text":"<pre><code>class SubmitARecordForReviewBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_169","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_150","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_150","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_169","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_150","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateacommentbody","title":"UpdateACommentBody","text":"<pre><code>class UpdateACommentBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_170","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_151","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_151","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_170","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_151","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateacommentresponse200","title":"UpdateACommentResponse200","text":"<pre><code>class UpdateACommentResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_171","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_152","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_152","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_171","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_152","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateacommunitybody","title":"UpdateACommunityBody","text":"<pre><code>class UpdateACommunityBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_172","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_153","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_153","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_172","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_153","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateacommunityresponse200","title":"UpdateACommunityResponse200","text":"<pre><code>class UpdateACommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_173","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_154","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_154","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_173","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_154","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateadraftrecordresponse200","title":"UpdateADraftRecordResponse200","text":"<pre><code>class UpdateADraftRecordResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_174","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_155","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_155","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_174","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_155","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateafeaturedcommunityentrybody","title":"UpdateAFeaturedCommunityEntryBody","text":"<pre><code>class UpdateAFeaturedCommunityEntryBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_175","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_156","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_156","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_175","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_156","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateafeaturedcommunityentryresponse200","title":"UpdateAFeaturedCommunityEntryResponse200","text":"<pre><code>class UpdateAFeaturedCommunityEntryResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_176","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_157","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_157","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_176","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_157","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updatearequestbody","title":"UpdateARequestBody","text":"<pre><code>class UpdateARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_177","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_158","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_158","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_177","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_158","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updatearequestresponse200","title":"UpdateARequestResponse200","text":"<pre><code>class UpdateARequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_178","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_159","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_159","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_178","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_159","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateasetbody","title":"UpdateASetBody","text":"<pre><code>class UpdateASetBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_179","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_160","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_160","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_179","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_160","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateasetresponse200","title":"UpdateASetResponse200","text":"<pre><code>class UpdateASetResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_180","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_161","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_161","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_180","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_161","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateanaccesslinkbody","title":"UpdateAnAccessLinkBody","text":"<pre><code>class UpdateAnAccessLinkBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_181","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_162","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_162","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_181","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_162","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateanaccesslinkresponse200","title":"UpdateAnAccessLinkResponse200","text":"<pre><code>class UpdateAnAccessLinkResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_182","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_163","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_163","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_182","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_163","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updatecommunitylogoresponse200","title":"UpdateCommunityLogoResponse200","text":"<pre><code>class UpdateCommunityLogoResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_183","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_164","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_164","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_183","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_164","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updatedraftrecord","title":"UpdateDraftRecord","text":"<pre><code>class UpdateDraftRecord(\n    access: Union[invenio_rest_api_client.types.Unset, ForwardRef('Access')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    files: Union[invenio_rest_api_client.types.Unset, ForwardRef('Files')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    metadata: Union[invenio_rest_api_client.types.Unset, ForwardRef('Metadata')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    custom_fields: Union[invenio_rest_api_client.types.Unset, ForwardRef('CustomFields')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>access (Union[Unset, Access]): Denotes record-specific read (visibility) options.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#access\n</code></pre> <p>files (Union[Unset, Files]): Files options for the record.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/rest_api_drafts_records/#files-options\n</code></pre> <p>metadata (Union[Unset, Metadata]): Metadata schema of bibliographic records in InvenioRDM.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#metadata\n</code></pre> <p>custom_fields (Union[Unset, CustomFields]): Custom fields metadata for the record. (v10 and newer).</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/operate/customize/metadata/custom_fields/records/#declaring-custom-fields\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_184","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_165","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_165","title":"Instance variables","text":"<pre><code>access\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>custom_fields\n</code></pre> <pre><code>files\n</code></pre> <pre><code>metadata\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_184","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_165","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateinvitationsbody","title":"UpdateInvitationsBody","text":"<pre><code>class UpdateInvitationsBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_185","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_166","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_166","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_185","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_166","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updateinvitationsresponse200","title":"UpdateInvitationsResponse200","text":"<pre><code>class UpdateInvitationsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_186","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_167","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_167","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_186","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_167","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updatemembersbody","title":"UpdateMembersBody","text":"<pre><code>class UpdateMembersBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_187","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_168","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_168","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_187","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_168","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#updatemembersresponse200","title":"UpdateMembersResponse200","text":"<pre><code>class UpdateMembersResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_188","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_169","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_169","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_188","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_169","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#version","title":"Version","text":"<pre><code>class Version(\n    index: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_latest: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_latest_draft: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>index (Union[Unset, int]): is_latest (Union[Unset, bool]): is_latest_draft (Union[Unset, bool]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_189","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_170","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_170","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>index\n</code></pre> <pre><code>is_latest\n</code></pre> <pre><code>is_latest_draft\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_189","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_170","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#vocabulariescontributorsrolesresponse200","title":"VocabulariesContributorsrolesResponse200","text":"<pre><code>class VocabulariesContributorsrolesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_190","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_171","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_171","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_190","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_171","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#vocabulariescreatorsrolesresponse200","title":"VocabulariesCreatorsrolesResponse200","text":"<pre><code>class VocabulariesCreatorsrolesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_191","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_172","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_172","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_191","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_172","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#vocabulariesdatetypesresponse200","title":"VocabulariesDatetypesResponse200","text":"<pre><code>class VocabulariesDatetypesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_192","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_173","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_173","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_192","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_173","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#vocabulariesdescriptiontypesresponse200","title":"VocabulariesDescriptiontypesResponse200","text":"<pre><code>class VocabulariesDescriptiontypesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#static-methods_193","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#from_dict_174","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#instance-variables_174","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/#methods_193","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/#to_dict_174","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/","title":"Module invenio_rest_api_client.models.accept_a_request_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/#acceptarequestbody","title":"AcceptARequestBody","text":"<pre><code>class AcceptARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/accept_a_request_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/access/","title":"Module invenio_rest_api_client.models.access","text":""},{"location":"api/latest/invenio_rest_api_client/models/access/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/access/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/access/#access","title":"Access","text":"<pre><code>class Access(\n    record: invenio_rest_api_client.models.access_record.AccessRecord,\n    files: invenio_rest_api_client.models.access_files.AccessFiles,\n    embargo: Union[invenio_rest_api_client.types.Unset, ForwardRef('Embargo')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Denotes record-specific read (visibility) options.</p> <p>More informations can be found on InvenioRDM Official page: https://inveniordm.docs.cern.ch/reference/metadata/#access</p> <pre><code>Attributes:\n    record (AccessRecord): Read access to the record.\n\n        `public` means anyone can see the record/files, `restricted` means only the owner(s) or specific users can see\n        the record/files.\n    files (AccessFiles): Read access to the record's files.\n\n        `public` means anyone can see the record/files, `restricted` means only the owner(s) or specific users can see\n        the record/files.\n    embargo (Union[Unset, Embargo]): Only in the cases of `\"record\": \"restricted\"`` or `\"files\": \"restricted\"`` can\n        an embargo be provided as input.\n        However, once an embargo is lifted, the embargo section is kept for transparency.\n\n        Denotes when an embargo must be lifted, at which point the record is made publicly accessible.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/access/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/access/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/access/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>embargo\n</code></pre> <pre><code>files\n</code></pre> <pre><code>record\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/access/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/access/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/","title":"Module invenio_rest_api_client.models.access_files","text":""},{"location":"api/latest/invenio_rest_api_client/models/access_files/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/access_files/#accessfiles","title":"AccessFiles","text":"<pre><code>class AccessFiles(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#class-variables","title":"Class variables","text":"<pre><code>PUBLIC\n</code></pre> <pre><code>RESTRICTED\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/access_files/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/access_files/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_files/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/","title":"Module invenio_rest_api_client.models.access_record","text":""},{"location":"api/latest/invenio_rest_api_client/models/access_record/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/access_record/#accessrecord","title":"AccessRecord","text":"<pre><code>class AccessRecord(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#class-variables","title":"Class variables","text":"<pre><code>PUBLIC\n</code></pre> <pre><code>RESTRICTED\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/access_record/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/access_record/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/access_record/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/","title":"Module invenio_rest_api_client.models.add_group_members_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/#addgroupmembersbody","title":"AddGroupMembersBody","text":"<pre><code>class AddGroupMembersBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/add_group_members_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description/","title":"Module invenio_rest_api_client.models.additional_description","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description/#additionaldescription","title":"AdditionalDescription","text":"<pre><code>class AdditionalDescription(\n    description: str,\n    type_: 'AdditionalDescriptionType',\n    lang: Union[invenio_rest_api_client.types.Unset, ForwardRef('Lang')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Additional description in addition to the primary description (e.g. abstracts in other languages), methods or</p> <p>further notes.</p> <pre><code>Attributes:\n    description (str): Free text.\n    type_ (AdditionalDescriptionType): The type of the description.\n    lang (Union[Unset, Lang]): The language of the associated item.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>description\n</code></pre> <pre><code>lang\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/","title":"Module invenio_rest_api_client.models.additional_description_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#additionaldescriptiontype","title":"AdditionalDescriptionType","text":"<pre><code>class AdditionalDescriptionType(\n    id: invenio_rest_api_client.models.additional_description_type_id.AdditionalDescriptionTypeId,\n    title: 'AdditionalDescriptionTypeTitle'\n)\n</code></pre> <p>The type of the description.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#attributes","title":"Attributes","text":"Name Type Description Default id AdditionalDescriptionTypeId Description type id from the controlled vocabulary None title AdditionalDescriptionTypeTitle The corresponding localized human readable label. None"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/","title":"Module invenio_rest_api_client.models.additional_description_type_id","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#additionaldescriptiontypeid","title":"AdditionalDescriptionTypeId","text":"<pre><code>class AdditionalDescriptionTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#class-variables","title":"Class variables","text":"<pre><code>ABSTRACT\n</code></pre> <pre><code>METHODS\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>SERIES_INFORMATION\n</code></pre> <pre><code>TABLE_OF_CONTENTS\n</code></pre> <pre><code>TECHNICAL_INFO\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_id/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/","title":"Module invenio_rest_api_client.models.additional_description_type_title","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/#additionaldescriptiontypetitle","title":"AdditionalDescriptionTypeTitle","text":"<pre><code>class AdditionalDescriptionTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_description_type_title/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title/","title":"Module invenio_rest_api_client.models.additional_title","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#additionaltitle","title":"AdditionalTitle","text":"<pre><code>class AdditionalTitle(\n    title: str,\n    type_: 'AdditionalTitleType',\n    lang: Union[invenio_rest_api_client.types.Unset, ForwardRef('Lang')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Additional name or title by which a resource is known.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#attributes","title":"Attributes","text":"Name Type Description Default title str The additional title. None type_ AdditionalTitleType The type of the title. None lang Union[Unset, Lang] The language of the associated item. None"},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>lang\n</code></pre> <pre><code>title\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/","title":"Module invenio_rest_api_client.models.additional_title_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#additionaltitletype","title":"AdditionalTitleType","text":"<pre><code>class AdditionalTitleType(\n    id: invenio_rest_api_client.models.additional_title_type_id.AdditionalTitleTypeId,\n    title: 'AdditionalTitleTypeTitle'\n)\n</code></pre> <p>The type of the title.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#attributes","title":"Attributes","text":"Name Type Description Default id AdditionalTitleTypeId Title type id from the controlled vocabulary. None title AdditionalTitleTypeTitle The corresponding localized human readable label None"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/","title":"Module invenio_rest_api_client.models.additional_title_type_id","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#additionaltitletypeid","title":"AdditionalTitleTypeId","text":"<pre><code>class AdditionalTitleTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#class-variables","title":"Class variables","text":"<pre><code>ALTERNATIVE_TITLE\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>SUBTITLE\n</code></pre> <pre><code>TRANSLATED_TITLE\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_id/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/","title":"Module invenio_rest_api_client.models.additional_title_type_title","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/#additionaltitletypetitle","title":"AdditionalTitleTypeTitle","text":"<pre><code>class AdditionalTitleTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label</p>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/additional_title_type_title/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/affiliation/","title":"Module invenio_rest_api_client.models.affiliation","text":""},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#affiliation","title":"Affiliation","text":"<pre><code>class Affiliation(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Affilations if <code>person_or_org.type</code> is <code>personal</code>.</p>"},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#attributes","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] The organizational or institutional id from the controlled vocabulary. None name Union[Unset, str] The name of the organisation or institution. None"},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>name\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/affiliation/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/","title":"Module invenio_rest_api_client.models.alternate_identifier","text":""},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/#alternateidentifier","title":"AlternateIdentifier","text":"<pre><code>class AlternateIdentifier(\n    identifier: str,\n    scheme: invenio_rest_api_client.models.identifier_scheme.IdentifierScheme\n)\n</code></pre> <p>Persistent identifier for the resource other than the ones registered as system-managed internal or external</p> <p>persistent identifiers.</p> <pre><code>Attributes:\n    identifier (str): identifier value\n    scheme (IdentifierScheme): The scheme of the identifier\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/alternate_identifier/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/","title":"Module invenio_rest_api_client.models.audit_log_entry","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#auditlogentry","title":"AuditLogEntry","text":"<pre><code>class AuditLogEntry(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    created: Union[invenio_rest_api_client.types.Unset, datetime.datetime] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    action: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    resource: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogEntryResource')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    metadata: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogEntryMetadata')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    user: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogEntryUser')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    links: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogEntryLinks')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Conflict - Resource already exists or operation conflicts</p>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#attributes","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] Unique identifier for the log entry Example: 9913abd2-1a7c-42cb-a73e-e48a9e1bf4f2. None created Union[Unset, datetime.datetime] Timestamp when the log entry was created Example:2025-06-20T08:05:27.730677+00:00. None action Union[Unset, str] Action performed Example: record.publish. None resource Union[Unset, AuditLogEntryResource] Resource affected by the action None metadata Union[Unset, AuditLogEntryMetadata] Additional metadata about the log entry None user Union[Unset, AuditLogEntryUser] User who performed the action None links Union[Unset, AuditLogEntryLinks] Links related to the log entry None"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#instance-variables","title":"Instance variables","text":"<pre><code>action\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>created\n</code></pre> <pre><code>id\n</code></pre> <pre><code>links\n</code></pre> <pre><code>metadata\n</code></pre> <pre><code>resource\n</code></pre> <pre><code>user\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/","title":"Module invenio_rest_api_client.models.audit_log_entry_links","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#auditlogentrylinks","title":"AuditLogEntryLinks","text":"<pre><code>class AuditLogEntryLinks(\n    self_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Links related to the log entry</p>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#attributes","title":"Attributes","text":"Name Type Description Default self_ Union[Unset, str] Self link to the log entry Example: https://example.com/api/audit-logs/9913abd2-1a7c-42cb-a73e-e48a9e1bf4f2. None"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>self_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_links/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/","title":"Module invenio_rest_api_client.models.audit_log_entry_metadata","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#auditlogentrymetadata","title":"AuditLogEntryMetadata","text":"<pre><code>class AuditLogEntryMetadata(\n    ip_address: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    session: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    parent_pid: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    revision_id: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Additional metadata about the log entry</p>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#attributes","title":"Attributes","text":"Name Type Description Default ip_address Union[Unset, str] IP address from which the action was performed None session Union[Unset, str] Session identifier None parent_pid Union[Unset, str] Parent persistent identifier Example: 1av3p-t2p41. None revision_id Union[Unset, int] Revision ID of the resource Example: 110. None"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>ip_address\n</code></pre> <pre><code>parent_pid\n</code></pre> <pre><code>revision_id\n</code></pre> <pre><code>session\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_metadata/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/","title":"Module invenio_rest_api_client.models.audit_log_entry_resource","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#auditlogentryresource","title":"AuditLogEntryResource","text":"<pre><code>class AuditLogEntryResource(\n    type_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Resource affected by the action</p>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#attributes","title":"Attributes","text":"Name Type Description Default type_ Union[Unset, str] Type of the resource Example: record. None id Union[Unset, str] ID of the resource Example: 5anb0-85626. None"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_resource/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/","title":"Module invenio_rest_api_client.models.audit_log_entry_user","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#auditlogentryuser","title":"AuditLogEntryUser","text":"<pre><code>class AuditLogEntryUser(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    username: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    email: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>User who performed the action</p>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#attributes","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] User ID Example: 2. None username Union[Unset, str] Username Example: user. None email Union[Unset, str] User email address Example: user@demo.org. None"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>email\n</code></pre> <pre><code>id\n</code></pre> <pre><code>username\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_entry_user/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/","title":"Module invenio_rest_api_client.models.audit_log_list","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/#auditloglist","title":"AuditLogList","text":"<pre><code>class AuditLogList(\n    hits: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogListHits')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    aggregations: Union[invenio_rest_api_client.types.Unset, ForwardRef('AuditLogListAggregations')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>hits (Union[Unset, AuditLogListHits]): aggregations (Union[Unset, AuditLogListAggregations]): Aggregation results (if any)</p>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>aggregations\n</code></pre> <pre><code>hits\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/","title":"Module invenio_rest_api_client.models.audit_log_list_aggregations","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/#auditloglistaggregations","title":"AuditLogListAggregations","text":"<pre><code>class AuditLogListAggregations(\n\n)\n</code></pre> <p>Aggregation results (if any)</p>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_aggregations/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/","title":"Module invenio_rest_api_client.models.audit_log_list_hits","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/#auditloglisthits","title":"AuditLogListHits","text":"<pre><code>class AuditLogListHits(\n    total: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    hits: Union[invenio_rest_api_client.types.Unset, list['AuditLogEntry']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>total (Union[Unset, int]): Total number of log entries hits (Union[Unset, list['AuditLogEntry']]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>hits\n</code></pre> <pre><code>total\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/audit_log_list_hits/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award/","title":"Module invenio_rest_api_client.models.award","text":""},{"location":"api/latest/invenio_rest_api_client/models/award/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/award/#award","title":"Award","text":"<pre><code>class Award(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    title: Union[invenio_rest_api_client.types.Unset, ForwardRef('AwardTitle')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    number: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifiers: Union[invenio_rest_api_client.types.Unset, list['AwardIdentifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>The award (grant) sponsored by the funder.</p>"},{"location":"api/latest/invenio_rest_api_client/models/award/#attributes","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] The award id from the controlled vocabulary. None title Union[Unset, AwardTitle] The localized title of the award. None number Union[Unset, str] The code assigned by the funder to a sponsored award (grant). None identifiers Union[Unset, list['AwardIdentifier']] Identifiers for the award. None"},{"location":"api/latest/invenio_rest_api_client/models/award/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/award/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>identifiers\n</code></pre> <pre><code>number\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/award/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/","title":"Module invenio_rest_api_client.models.award_identifier","text":""},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#awardidentifier","title":"AwardIdentifier","text":"<pre><code>class AwardIdentifier(\n    scheme: str,\n    identifier: str\n)\n</code></pre> <p>Identifier for the award.</p>"},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#attributes","title":"Attributes","text":"Name Type Description Default scheme str The identifier scheme. None identifier str Actual value of the identifier. None"},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/award_identifier/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award_title/","title":"Module invenio_rest_api_client.models.award_title","text":""},{"location":"api/latest/invenio_rest_api_client/models/award_title/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award_title/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/award_title/#awardtitle","title":"AwardTitle","text":"<pre><code>class AwardTitle(\n\n)\n</code></pre> <p>The localized title of the award.</p>"},{"location":"api/latest/invenio_rest_api_client/models/award_title/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/award_title/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award_title/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/award_title/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/award_title/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/","title":"Module invenio_rest_api_client.models.cancel_a_request_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/#cancelarequestbody","title":"CancelARequestBody","text":"<pre><code>class CancelARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/cancel_a_request_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/","title":"Module invenio_rest_api_client.models.create_a_community_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/#createacommunitybody","title":"CreateACommunityBody","text":"<pre><code>class CreateACommunityBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_community_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/","title":"Module invenio_rest_api_client.models.create_a_draft_record_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/#createadraftrecordbody","title":"CreateADraftRecordBody","text":"<pre><code>class CreateADraftRecordBody(\n    access: Union[invenio_rest_api_client.types.Unset, ForwardRef('Access')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    files: Union[invenio_rest_api_client.types.Unset, ForwardRef('Files')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    metadata: Union[invenio_rest_api_client.types.Unset, ForwardRef('Metadata')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    custom_fields: Union[invenio_rest_api_client.types.Unset, ForwardRef('CreateADraftRecordBodyCustomFields')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    pids: Union[invenio_rest_api_client.types.Unset, ForwardRef('PIDs')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>access (Union[Unset, Access]): Denotes record-specific read (visibility) options.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#access\n</code></pre> <p>files (Union[Unset, Files]): Files options for the record.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/rest_api_drafts_records/#files-options\n</code></pre> <p>metadata (Union[Unset, Metadata]): Metadata schema of bibliographic records in InvenioRDM.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#metadata\n</code></pre> <p>custom_fields (Union[Unset, CreateADraftRecordBodyCustomFields]): pids (Union[Unset, PIDs]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/#instance-variables","title":"Instance variables","text":"<pre><code>access\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>custom_fields\n</code></pre> <pre><code>files\n</code></pre> <pre><code>metadata\n</code></pre> <pre><code>pids\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/","title":"Module invenio_rest_api_client.models.create_a_draft_record_body_custom_fields","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/#createadraftrecordbodycustomfields","title":"CreateADraftRecordBodyCustomFields","text":"<pre><code>class CreateADraftRecordBodyCustomFields(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_draft_record_body_custom_fields/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/","title":"Module invenio_rest_api_client.models.create_a_featured_community_entry_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/#createafeaturedcommunityentrybody","title":"CreateAFeaturedCommunityEntryBody","text":"<pre><code>class CreateAFeaturedCommunityEntryBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_featured_community_entry_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/","title":"Module invenio_rest_api_client.models.create_a_set_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/#createasetbody","title":"CreateASetBody","text":"<pre><code>class CreateASetBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_a_set_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/","title":"Module invenio_rest_api_client.models.create_an_access_link_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/#createanaccesslinkbody","title":"CreateAnAccessLinkBody","text":"<pre><code>class CreateAnAccessLinkBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/create_an_access_link_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created/","title":"Module invenio_rest_api_client.models.created","text":""},{"location":"api/latest/invenio_rest_api_client/models/created/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/created/#created","title":"Created","text":"<pre><code>class Created(\n    access: Union[invenio_rest_api_client.types.Unset, ForwardRef('Access')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    created: Union[invenio_rest_api_client.types.Unset, datetime.datetime] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    expires_at: Union[invenio_rest_api_client.types.Unset, datetime.datetime] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    files: Union[invenio_rest_api_client.types.Unset, ForwardRef('Files')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_published: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    links: Union[invenio_rest_api_client.types.Unset, ForwardRef('CreatedLinks')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    metadata: Union[invenio_rest_api_client.types.Unset, ForwardRef('CreatedMetadata')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    parent: Union[invenio_rest_api_client.types.Unset, ForwardRef('CreatedParent')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    pids: Union[invenio_rest_api_client.types.Unset, ForwardRef('PIDs')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    revision_id: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    updated: Union[invenio_rest_api_client.types.Unset, datetime.datetime] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    versions: Union[invenio_rest_api_client.types.Unset, ForwardRef('Version')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>access (Union[Unset, Access]): Denotes record-specific read (visibility) options.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#access\n</code></pre> <p>created (Union[Unset, datetime.datetime]): expires_at (Union[Unset, datetime.datetime]): files (Union[Unset, Files]): Files options for the record.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/rest_api_drafts_records/#files-options\n</code></pre> <p>id (Union[Unset, str]): is_published (Union[Unset, bool]): links (Union[Unset, CreatedLinks]): metadata (Union[Unset, CreatedMetadata]): parent (Union[Unset, CreatedParent]): pids (Union[Unset, PIDs]): revision_id (Union[Unset, int]): updated (Union[Unset, datetime.datetime]): versions (Union[Unset, Version]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/created/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/created/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created/#instance-variables","title":"Instance variables","text":"<pre><code>access\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>created\n</code></pre> <pre><code>expires_at\n</code></pre> <pre><code>files\n</code></pre> <pre><code>id\n</code></pre> <pre><code>is_published\n</code></pre> <pre><code>links\n</code></pre> <pre><code>metadata\n</code></pre> <pre><code>parent\n</code></pre> <pre><code>pids\n</code></pre> <pre><code>revision_id\n</code></pre> <pre><code>updated\n</code></pre> <pre><code>versions\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/created/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_links/","title":"Module invenio_rest_api_client.models.created_links","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_links/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_links/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_links/#createdlinks","title":"CreatedLinks","text":"<pre><code>class CreatedLinks(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_links/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_links/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_links/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_links/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_links/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/","title":"Module invenio_rest_api_client.models.created_metadata","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/#createdmetadata","title":"CreatedMetadata","text":"<pre><code>class CreatedMetadata(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_metadata/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_parent/","title":"Module invenio_rest_api_client.models.created_parent","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_parent/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_parent/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_parent/#createdparent","title":"CreatedParent","text":"<pre><code>class CreatedParent(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_parent/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_parent/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_parent/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/created_parent/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/created_parent/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/","title":"Module invenio_rest_api_client.models.createupdate_a_review_request_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/#createupdateareviewrequestbody","title":"CreateupdateAReviewRequestBody","text":"<pre><code>class CreateupdateAReviewRequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/","title":"Module invenio_rest_api_client.models.createupdate_a_review_request_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/#createupdateareviewrequestresponse200","title":"CreateupdateAReviewRequestResponse200","text":"<pre><code>class CreateupdateAReviewRequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/createupdate_a_review_request_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/creator/","title":"Module invenio_rest_api_client.models.creator","text":""},{"location":"api/latest/invenio_rest_api_client/models/creator/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/creator/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/creator/#creator","title":"Creator","text":"<pre><code>class Creator(\n    person_or_org: 'PersonOrOrg',\n    role: Union[invenio_rest_api_client.types.Unset, ForwardRef('Role')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    affiliations: Union[invenio_rest_api_client.types.Unset, list['Affiliation']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>person_or_org (PersonOrOrg): The person or organization. role (Union[Unset, Role]): The role of the person or organisation selected from a customizable controlled     vocabulary. affiliations (Union[Unset, list['Affiliation']]): Affilations if <code>person_or_org.type</code> is personal.</p>"},{"location":"api/latest/invenio_rest_api_client/models/creator/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/creator/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/creator/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>affiliations\n</code></pre> <pre><code>person_or_org\n</code></pre> <pre><code>role\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/creator/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/creator/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/","title":"Module invenio_rest_api_client.models.custom_fields","text":""},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/#customfields","title":"CustomFields","text":"<pre><code>class CustomFields(\n\n)\n</code></pre> <p>Custom fields metadata for the record. (v10 and newer).</p> <p>More informations can be found on InvenioRDM Official page: https://inveniordm.docs.cern.ch/operate/customize/metadata/custom_fields/records/#declaring-custom-fields</p>"},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/custom_fields/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date/","title":"Module invenio_rest_api_client.models.date","text":""},{"location":"api/latest/invenio_rest_api_client/models/date/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/date/#date","title":"Date","text":"<pre><code>class Date(\n    date: datetime.date,\n    type_: 'DateType',\n    description: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Date relevant to the resource.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date/#attributes","title":"Attributes","text":"Name Type Description Default date datetime.date A date or time interval according to Extended Date Time Format Level 0. None type_ DateType The type of date. None description Union[Unset, str] None"},{"location":"api/latest/invenio_rest_api_client/models/date/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/date/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>date\n</code></pre> <pre><code>description\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/date/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type/","title":"Module invenio_rest_api_client.models.date_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type/#datetype","title":"DateType","text":"<pre><code>class DateType(\n    id: invenio_rest_api_client.models.date_type_id.DateTypeId,\n    title: 'DateTypeTitle'\n)\n</code></pre> <p>The type of date.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type/#attributes","title":"Attributes","text":"Name Type Description Default id DateTypeId Date type id from the controlled vocabulary None title DateTypeTitle The corresponding localized human readable label None"},{"location":"api/latest/invenio_rest_api_client/models/date_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/","title":"Module invenio_rest_api_client.models.date_type_id","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#datetypeid","title":"DateTypeId","text":"<pre><code>class DateTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#class-variables","title":"Class variables","text":"<pre><code>ACCEPTED\n</code></pre> <pre><code>AVAILABLE\n</code></pre> <pre><code>COLLECTED\n</code></pre> <pre><code>COPYRIGHTED\n</code></pre> <pre><code>CREATED\n</code></pre> <pre><code>ISSUED\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>SUBMITTED\n</code></pre> <pre><code>UPDATED\n</code></pre> <pre><code>VALID\n</code></pre> <pre><code>WITHDRAWN\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_id/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/","title":"Module invenio_rest_api_client.models.date_type_title","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/#datetypetitle","title":"DateTypeTitle","text":"<pre><code>class DateTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label</p>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/date_type_title/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/","title":"Module invenio_rest_api_client.models.decline_a_request_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/#declinearequestbody","title":"DeclineARequestBody","text":"<pre><code>class DeclineARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/decline_a_request_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/","title":"Module invenio_rest_api_client.models.delete_a_comment_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/#deleteacommentresponse200","title":"DeleteACommentResponse200","text":"<pre><code>class DeleteACommentResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_comment_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/","title":"Module invenio_rest_api_client.models.delete_a_doi_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/#deleteadoiresponse200","title":"DeleteADoiResponse200","text":"<pre><code>class DeleteADoiResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_doi_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/","title":"Module invenio_rest_api_client.models.delete_a_draft_file_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/#deleteadraftfileresponse200","title":"DeleteADraftFileResponse200","text":"<pre><code>class DeleteADraftFileResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_draft_file_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/","title":"Module invenio_rest_api_client.models.delete_a_featured_community_entry_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/#deleteafeaturedcommunityentryresponse200","title":"DeleteAFeaturedCommunityEntryResponse200","text":"<pre><code>class DeleteAFeaturedCommunityEntryResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_featured_community_entry_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/","title":"Module invenio_rest_api_client.models.delete_a_review_request_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/#deleteareviewrequestresponse200","title":"DeleteAReviewRequestResponse200","text":"<pre><code>class DeleteAReviewRequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_review_request_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/","title":"Module invenio_rest_api_client.models.delete_a_set_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/#deleteasetresponse200","title":"DeleteASetResponse200","text":"<pre><code>class DeleteASetResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_a_set_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/","title":"Module invenio_rest_api_client.models.delete_an_access_link_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/#deleteanaccesslinkresponse200","title":"DeleteAnAccessLinkResponse200","text":"<pre><code>class DeleteAnAccessLinkResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_an_access_link_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/","title":"Module invenio_rest_api_client.models.delete_community_logo_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/#deletecommunitylogoresponse200","title":"DeleteCommunityLogoResponse200","text":"<pre><code>class DeleteCommunityLogoResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_community_logo_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/","title":"Module invenio_rest_api_client.models.delete_community_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/#deletecommunityresponse200","title":"DeleteCommunityResponse200","text":"<pre><code>class DeleteCommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_community_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/","title":"Module invenio_rest_api_client.models.delete_record_community_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/#deleterecordcommunityresponse200","title":"DeleteRecordCommunityResponse200","text":"<pre><code>class DeleteRecordCommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/delete_record_community_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/","title":"Module invenio_rest_api_client.models.deletediscard_a_draft_record_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/#deletediscardadraftrecordresponse200","title":"DeletediscardADraftRecordResponse200","text":"<pre><code>class DeletediscardADraftRecordResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/deletediscard_a_draft_record_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/","title":"Module invenio_rest_api_client.models.download_a_draft_file_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/#downloadadraftfileresponse200","title":"DownloadADraftFileResponse200","text":"<pre><code>class DownloadADraftFileResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/download_a_draft_file_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/","title":"Module invenio_rest_api_client.models.download_a_record_file_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/#downloadarecordfileresponse200","title":"DownloadARecordFileResponse200","text":"<pre><code>class DownloadARecordFileResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/download_a_record_file_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/embargo/","title":"Module invenio_rest_api_client.models.embargo","text":""},{"location":"api/latest/invenio_rest_api_client/models/embargo/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/embargo/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/embargo/#embargo","title":"Embargo","text":"<pre><code>class Embargo(\n    active: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    until: Union[invenio_rest_api_client.types.Unset, datetime.date] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    reason: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Only in the cases of <code>\"record\": \"restricted\"`` or</code>\"files\": \"restricted\"`` can an embargo be provided as input.</p> <p>However, once an embargo is lifted, the embargo section is kept for transparency.</p> <p>Denotes when an embargo must be lifted, at which point the record is made publicly accessible.</p> <pre><code>Attributes:\n    active (Union[Unset, bool]): Is the record under embargo or not.\n    until (Union[Unset, datetime.date]): Required if `\"active\": \"true\"`.\n    reason (Union[Unset, str]): Explanation for the embargo.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/embargo/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/embargo/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/embargo/#instance-variables","title":"Instance variables","text":"<pre><code>active\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>reason\n</code></pre> <pre><code>until\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/embargo/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/embargo/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/","title":"Module invenio_rest_api_client.models.export_record_as_csl_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/#exportrecordascslresponse200","title":"ExportRecordAsCslResponse200","text":"<pre><code>class ExportRecordAsCslResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_csl_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/","title":"Module invenio_rest_api_client.models.export_record_as_datacitejson_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/#exportrecordasdatacitejsonresponse200","title":"ExportRecordAsDatacitejsonResponse200","text":"<pre><code>class ExportRecordAsDatacitejsonResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitejson_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/","title":"Module invenio_rest_api_client.models.export_record_as_datacitexml_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/#exportrecordasdatacitexmlresponse200","title":"ExportRecordAsDatacitexmlResponse200","text":"<pre><code>class ExportRecordAsDatacitexmlResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_datacitexml_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/","title":"Module invenio_rest_api_client.models.export_record_as_dublincore_xml_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/#exportrecordasdublincorexmlresponse200","title":"ExportRecordAsDublincoreXmlResponse200","text":"<pre><code>class ExportRecordAsDublincoreXmlResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_dublincore_xml_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/","title":"Module invenio_rest_api_client.models.export_record_as_json_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/#exportrecordasjsonresponse200","title":"ExportRecordAsJsonResponse200","text":"<pre><code>class ExportRecordAsJsonResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/export_record_as_json_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/feature/","title":"Module invenio_rest_api_client.models.feature","text":""},{"location":"api/latest/invenio_rest_api_client/models/feature/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/feature/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/feature/#feature","title":"Feature","text":"<pre><code>class Feature(\n    geometry: Union[ForwardRef('GeoJSONLineString'), ForwardRef('GeoJSONMultiLineString'), ForwardRef('GeoJSONMultiPoint'), ForwardRef('GeoJSONMultiPolygon'), ForwardRef('GeoJSONPoint'), ForwardRef('GeoJSONPolygon'), invenio_rest_api_client.types.Unset] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifiers: Union[invenio_rest_api_client.types.Unset, list['FeatureIdentifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    place: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    description: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>A GeoJSON feature object.</p>"},{"location":"api/latest/invenio_rest_api_client/models/feature/#attributes","title":"Attributes","text":"Name Type Description Default geometry Union['GeoJSONLineString', 'GeoJSONMultiLineString', 'GeoJSONMultiPoint', 'GeoJSONMultiPolygon','GeoJSONPoint', 'GeoJSONPolygon', Unset] None identifiers Union[Unset, list['FeatureIdentifier']] A list of geographic location identifiers. None place Union[Unset, str] Free text, used to describe a geographical location. None description Union[Unset, str] Free text, used for any extra information related to the location. None"},{"location":"api/latest/invenio_rest_api_client/models/feature/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/feature/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/feature/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>description\n</code></pre> <pre><code>geometry\n</code></pre> <pre><code>identifiers\n</code></pre> <pre><code>place\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/feature/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/feature/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/","title":"Module invenio_rest_api_client.models.feature_identifier","text":""},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#featureidentifier","title":"FeatureIdentifier","text":"<pre><code>class FeatureIdentifier(\n    id: str,\n    scheme: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>A geographic location identifier.</p>"},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#attributes","title":"Attributes","text":"Name Type Description Default id str A globally unique identifier for the location. None scheme Union[Unset, str] The scheme of the identifier. None"},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/feature_identifier/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/","title":"Module invenio_rest_api_client.models.file_transfer","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/#filetransfer","title":"FileTransfer","text":"<pre><code>class FileTransfer(\n    type_: Union[invenio_rest_api_client.types.Unset, invenio_rest_api_client.models.file_transfer_type.FileTransferType] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    url: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (Union[Unset, FileTransferType]): The actual technology that is used to store a file url (Union[Unset, str]): URL to fetch the file from</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>type_\n</code></pre> <pre><code>url\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/","title":"Module invenio_rest_api_client.models.file_transfer_item","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#filetransferitem","title":"FileTransferItem","text":"<pre><code>class FileTransferItem(\n    key: str,\n    size: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    checksum: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    transfer: Union[invenio_rest_api_client.types.Unset, ForwardRef('FileTransfer')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>A file object.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#attributes","title":"Attributes","text":"Name Type Description Default key str Key (filename) of the file None size Union[Unset, int] Size of the file in bytes. None checksum Union[Unset, str] Checksum of the file. None transfer Union[Unset, FileTransfer] None"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>checksum\n</code></pre> <pre><code>key\n</code></pre> <pre><code>size\n</code></pre> <pre><code>transfer\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_item/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/","title":"Module invenio_rest_api_client.models.file_transfer_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#filetransfertype","title":"FileTransferType","text":"<pre><code>class FileTransferType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#class-variables","title":"Class variables","text":"<pre><code>F\n</code></pre> <pre><code>L\n</code></pre> <pre><code>M\n</code></pre> <pre><code>R\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/file_transfer_type/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/files/","title":"Module invenio_rest_api_client.models.files","text":""},{"location":"api/latest/invenio_rest_api_client/models/files/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/files/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/files/#files","title":"Files","text":"<pre><code>class Files(\n    enabled: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    default_preview: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    order: Union[invenio_rest_api_client.types.Unset, list[str]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Files options for the record.</p> <p>More informations can be found on InvenioRDM Official page: https://inveniordm.docs.cern.ch/reference/rest_api_drafts_records/#files-options</p> <pre><code>Attributes:\n    enabled (Union[Unset, bool]): Should (and can) files be attached to this record or not.\n    default_preview (Union[Unset, str]): Filename of file to be previewed by default.\n    order (Union[Unset, list[str]]): Array of filename strings in display order.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/files/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/files/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/files/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>default_preview\n</code></pre> <pre><code>enabled\n</code></pre> <pre><code>order\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/files/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/files/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/funder/","title":"Module invenio_rest_api_client.models.funder","text":""},{"location":"api/latest/invenio_rest_api_client/models/funder/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/funder/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/funder/#funder","title":"Funder","text":"<pre><code>class Funder(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>The organisation of the funding provider.</p>"},{"location":"api/latest/invenio_rest_api_client/models/funder/#attributes","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] The funder id from the controlled vocabulary. None name Union[Unset, str] The name of the funder. None"},{"location":"api/latest/invenio_rest_api_client/models/funder/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/funder/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/funder/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>name\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/funder/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/funder/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/funding/","title":"Module invenio_rest_api_client.models.funding","text":""},{"location":"api/latest/invenio_rest_api_client/models/funding/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/funding/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/funding/#funding","title":"Funding","text":"<pre><code>class Funding(\n    funder: 'Funder',\n    award: Union[invenio_rest_api_client.types.Unset, ForwardRef('Award')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Information about financial support (funding) for the resource being registered.</p>"},{"location":"api/latest/invenio_rest_api_client/models/funding/#attributes","title":"Attributes","text":"Name Type Description Default funder Funder The organisation of the funding provider. None award Union[Unset, Award] The award (grant) sponsored by the funder. None"},{"location":"api/latest/invenio_rest_api_client/models/funding/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/funding/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/funding/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>award\n</code></pre> <pre><code>funder\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/funding/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/funding/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/","title":"Module invenio_rest_api_client.models.geo_json_line_string","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/#geojsonlinestring","title":"GeoJSONLineString","text":"<pre><code>class GeoJSONLineString(\n    type_: invenio_rest_api_client.models.geo_json_line_string_type.GeoJSONLineStringType,\n    coordinates: list[list[float]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONLineStringType): coordinates (list[list[float]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/","title":"Module invenio_rest_api_client.models.geo_json_line_string_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#geojsonlinestringtype","title":"GeoJSONLineStringType","text":"<pre><code>class GeoJSONLineStringType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#class-variables","title":"Class variables","text":"<pre><code>LINESTRING\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_line_string_type/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/","title":"Module invenio_rest_api_client.models.geo_json_multi_line_string","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/#geojsonmultilinestring","title":"GeoJSONMultiLineString","text":"<pre><code>class GeoJSONMultiLineString(\n    type_: invenio_rest_api_client.models.geo_json_multi_line_string_type.GeoJSONMultiLineStringType,\n    coordinates: list[list[list[float]]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONMultiLineStringType): coordinates (list[list[list[float]]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/","title":"Module invenio_rest_api_client.models.geo_json_multi_line_string_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#geojsonmultilinestringtype","title":"GeoJSONMultiLineStringType","text":"<pre><code>class GeoJSONMultiLineStringType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#class-variables","title":"Class variables","text":"<pre><code>MULTILINESTRING\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_line_string_type/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/","title":"Module invenio_rest_api_client.models.geo_json_multi_point","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/#geojsonmultipoint","title":"GeoJSONMultiPoint","text":"<pre><code>class GeoJSONMultiPoint(\n    type_: invenio_rest_api_client.models.geo_json_multi_point_type.GeoJSONMultiPointType,\n    coordinates: list[list[float]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONMultiPointType): coordinates (list[list[float]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/","title":"Module invenio_rest_api_client.models.geo_json_multi_point_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#geojsonmultipointtype","title":"GeoJSONMultiPointType","text":"<pre><code>class GeoJSONMultiPointType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#class-variables","title":"Class variables","text":"<pre><code>MULTIPOINT\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_point_type/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/","title":"Module invenio_rest_api_client.models.geo_json_multi_polygon","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/#geojsonmultipolygon","title":"GeoJSONMultiPolygon","text":"<pre><code>class GeoJSONMultiPolygon(\n    type_: invenio_rest_api_client.models.geo_json_multi_polygon_type.GeoJSONMultiPolygonType,\n    coordinates: list[list[list[list[float]]]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONMultiPolygonType): coordinates (list[list[list[list[float]]]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/","title":"Module invenio_rest_api_client.models.geo_json_multi_polygon_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#geojsonmultipolygontype","title":"GeoJSONMultiPolygonType","text":"<pre><code>class GeoJSONMultiPolygonType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#class-variables","title":"Class variables","text":"<pre><code>MULTIPOLYGON\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_multi_polygon_type/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/","title":"Module invenio_rest_api_client.models.geo_json_point","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/#geojsonpoint","title":"GeoJSONPoint","text":"<pre><code>class GeoJSONPoint(\n    type_: invenio_rest_api_client.models.geo_json_point_type.GeoJSONPointType,\n    coordinates: list[float],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONPointType): coordinates (list[float]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/","title":"Module invenio_rest_api_client.models.geo_json_point_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#geojsonpointtype","title":"GeoJSONPointType","text":"<pre><code>class GeoJSONPointType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#class-variables","title":"Class variables","text":"<pre><code>POINT\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_point_type/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/","title":"Module invenio_rest_api_client.models.geo_json_polygon","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/#geojsonpolygon","title":"GeoJSONPolygon","text":"<pre><code>class GeoJSONPolygon(\n    type_: invenio_rest_api_client.models.geo_json_polygon_type.GeoJSONPolygonType,\n    coordinates: list[list[list[float]]],\n    bbox: Union[invenio_rest_api_client.types.Unset, list[float]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>type_ (GeoJSONPolygonType): coordinates (list[list[list[float]]]): bbox (Union[Unset, list[float]]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>bbox\n</code></pre> <pre><code>coordinates\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/","title":"Module invenio_rest_api_client.models.geo_json_polygon_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#geojsonpolygontype","title":"GeoJSONPolygonType","text":"<pre><code>class GeoJSONPolygonType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#class-variables","title":"Class variables","text":"<pre><code>POLYGON\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/geo_json_polygon_type/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/","title":"Module invenio_rest_api_client.models.get_a_comment_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/#getacommentresponse200","title":"GetACommentResponse200","text":"<pre><code>class GetACommentResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_comment_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/","title":"Module invenio_rest_api_client.models.get_a_community_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/#getacommunityresponse200","title":"GetACommunityResponse200","text":"<pre><code>class GetACommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_community_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/","title":"Module invenio_rest_api_client.models.get_a_draft_files_metadata_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/#getadraftfilesmetadataresponse200","title":"GetADraftFilesMetadataResponse200","text":"<pre><code>class GetADraftFilesMetadataResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_files_metadata_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/","title":"Module invenio_rest_api_client.models.get_a_draft_records_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/#getadraftrecordsresponse200","title":"GetADraftRecordsResponse200","text":"<pre><code>class GetADraftRecordsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_draft_records_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/","title":"Module invenio_rest_api_client.models.get_a_record_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/#getarecordbyidresponse200","title":"GetARecordByIdResponse200","text":"<pre><code>class GetARecordByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/","title":"Module invenio_rest_api_client.models.get_a_record_files_metadata_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/#getarecordfilesmetadataresponse200","title":"GetARecordFilesMetadataResponse200","text":"<pre><code>class GetARecordFilesMetadataResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_record_files_metadata_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/","title":"Module invenio_rest_api_client.models.get_a_request_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/#getarequestresponse200","title":"GetARequestResponse200","text":"<pre><code>class GetARequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_request_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/","title":"Module invenio_rest_api_client.models.get_a_requests_timeline_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/#getarequeststimelineresponse200","title":"GetARequestsTimelineResponse200","text":"<pre><code>class GetARequestsTimelineResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_requests_timeline_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/","title":"Module invenio_rest_api_client.models.get_a_review_request_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/#getareviewrequestresponse200","title":"GetAReviewRequestResponse200","text":"<pre><code>class GetAReviewRequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_review_request_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/","title":"Module invenio_rest_api_client.models.get_a_set_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/#getasetbyidresponse200","title":"GetASetByIdResponse200","text":"<pre><code>class GetASetByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_set_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/","title":"Module invenio_rest_api_client.models.get_a_user_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/#getauserbyidresponse200","title":"GetAUserByIdResponse200","text":"<pre><code>class GetAUserByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_user_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/","title":"Module invenio_rest_api_client.models.get_a_vocabulary_record_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/#getavocabularyrecordbyidresponse200","title":"GetAVocabularyRecordByIdResponse200","text":"<pre><code>class GetAVocabularyRecordByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_a_vocabulary_record_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/","title":"Module invenio_rest_api_client.models.get_all_draft_records_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/#getalldraftrecordsresponse200","title":"GetAllDraftRecordsResponse200","text":"<pre><code>class GetAllDraftRecordsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_all_draft_records_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/","title":"Module invenio_rest_api_client.models.get_all_versions_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/#getallversionsresponse200","title":"GetAllVersionsResponse200","text":"<pre><code>class GetAllVersionsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_all_versions_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/","title":"Module invenio_rest_api_client.models.get_an_access_link_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/#getanaccesslinkbyidresponse200","title":"GetAnAccessLinkByIdResponse200","text":"<pre><code>class GetAnAccessLinkByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_an_access_link_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/","title":"Module invenio_rest_api_client.models.get_avatar_for_group_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/#getavatarforgroupresponse200","title":"GetAvatarForGroupResponse200","text":"<pre><code>class GetAvatarForGroupResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_group_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/","title":"Module invenio_rest_api_client.models.get_avatar_for_user_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/#getavatarforuserresponse200","title":"GetAvatarForUserResponse200","text":"<pre><code>class GetAvatarForUserResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_avatar_for_user_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/","title":"Module invenio_rest_api_client.models.get_community_logo_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/#getcommunitylogoresponse200","title":"GetCommunityLogoResponse200","text":"<pre><code>class GetCommunityLogoResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_community_logo_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/","title":"Module invenio_rest_api_client.models.get_community_records_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/#getcommunityrecordsresponse200","title":"GetCommunityRecordsResponse200","text":"<pre><code>class GetCommunityRecordsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_community_records_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/","title":"Module invenio_rest_api_client.models.get_featured_community_entry_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/#getfeaturedcommunityentryresponse200","title":"GetFeaturedCommunityEntryResponse200","text":"<pre><code>class GetFeaturedCommunityEntryResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_featured_community_entry_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/","title":"Module invenio_rest_api_client.models.get_group_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/#getgroupbyidresponse200","title":"GetGroupByIdResponse200","text":"<pre><code>class GetGroupByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_group_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/","title":"Module invenio_rest_api_client.models.get_latest_version_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/#getlatestversionresponse200","title":"GetLatestVersionResponse200","text":"<pre><code>class GetLatestVersionResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_latest_version_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/","title":"Module invenio_rest_api_client.models.get_metadata_formats_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/#getmetadataformatsresponse200","title":"GetMetadataFormatsResponse200","text":"<pre><code>class GetMetadataFormatsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_metadata_formats_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/","title":"Module invenio_rest_api_client.models.get_names_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/#getnamesbyidresponse200","title":"GetNamesByIdResponse200","text":"<pre><code>class GetNamesByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_names_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/","title":"Module invenio_rest_api_client.models.get_names_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/#getnamesresponse200","title":"GetNamesResponse200","text":"<pre><code>class GetNamesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_names_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/","title":"Module invenio_rest_api_client.models.get_statistics_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/#getstatisticsbody","title":"GetStatisticsBody","text":"<pre><code>class GetStatisticsBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_statistics_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/","title":"Module invenio_rest_api_client.models.get_user_by_id_detailed_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/#getuserbyiddetailedresponse200","title":"GetUserByIdDetailedResponse200","text":"<pre><code>class GetUserByIdDetailedResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/get_user_by_id_detailed_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/identifier/","title":"Module invenio_rest_api_client.models.identifier","text":""},{"location":"api/latest/invenio_rest_api_client/models/identifier/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/identifier/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/identifier/#identifier","title":"Identifier","text":"<pre><code>class Identifier(\n    scheme: invenio_rest_api_client.models.person_or_org_identifier_scheme.PersonOrOrgIdentifierScheme,\n    identifier: str\n)\n</code></pre> <p>Person or organisation identifier.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier/#attributes","title":"Attributes","text":"Name Type Description Default scheme PersonOrOrgIdentifierScheme The identifier scheme.Note that the identifiers' schemes are passed lowercased e.g. ORCID is <code>orcid</code>. None identifier str Actual value of the identifier. None"},{"location":"api/latest/invenio_rest_api_client/models/identifier/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/identifier/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/identifier/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/identifier/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/identifier/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/","title":"Module invenio_rest_api_client.models.identifier_scheme","text":""},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#identifierscheme","title":"IdentifierScheme","text":"<pre><code>class IdentifierScheme(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#class-variables","title":"Class variables","text":"<pre><code>ADS\n</code></pre> <pre><code>ARK\n</code></pre> <pre><code>ARXIV\n</code></pre> <pre><code>CROSSREFFUNDERID\n</code></pre> <pre><code>DOI\n</code></pre> <pre><code>EAN13\n</code></pre> <pre><code>EISSN\n</code></pre> <pre><code>GRID\n</code></pre> <pre><code>HANDLE\n</code></pre> <pre><code>IGSN\n</code></pre> <pre><code>ISBN\n</code></pre> <pre><code>ISNI\n</code></pre> <pre><code>ISSN\n</code></pre> <pre><code>ISTC\n</code></pre> <pre><code>LISSN\n</code></pre> <pre><code>LSID\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>PMID\n</code></pre> <pre><code>PURL\n</code></pre> <pre><code>UPC\n</code></pre> <pre><code>URL\n</code></pre> <pre><code>URN\n</code></pre> <pre><code>W3ID\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/identifier_scheme/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/","title":"Module invenio_rest_api_client.models.invite_user_members_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/#inviteusermembersbody","title":"InviteUserMembersBody","text":"<pre><code>class InviteUserMembersBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/invite_user_members_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/lang/","title":"Module invenio_rest_api_client.models.lang","text":""},{"location":"api/latest/invenio_rest_api_client/models/lang/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/lang/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/lang/#lang","title":"Lang","text":"<pre><code>class Lang(\n    id: str\n)\n</code></pre> <p>The language of the associated item.</p>"},{"location":"api/latest/invenio_rest_api_client/models/lang/#attributes","title":"Attributes","text":"Name Type Description Default id str The ISO-639-3 language code. None"},{"location":"api/latest/invenio_rest_api_client/models/lang/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/lang/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/lang/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/lang/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/lang/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/","title":"Module invenio_rest_api_client.models.list_a_drafts_files_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/#listadraftsfilesresponse200","title":"ListADraftsFilesResponse200","text":"<pre><code>class ListADraftsFilesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_a_drafts_files_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/","title":"Module invenio_rest_api_client.models.list_a_records_files_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/#listarecordsfilesresponse200","title":"ListARecordsFilesResponse200","text":"<pre><code>class ListARecordsFilesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_a_records_files_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/","title":"Module invenio_rest_api_client.models.list_access_links_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/#listaccesslinksresponse200","title":"ListAccessLinksResponse200","text":"<pre><code>class ListAccessLinksResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/list_access_links_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/location/","title":"Module invenio_rest_api_client.models.location","text":""},{"location":"api/latest/invenio_rest_api_client/models/location/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/location/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/location/#location","title":"Location","text":"<pre><code>class Location(\n    features: list['Feature']\n)\n</code></pre> <p>Spatial region or named place where the data was gathered or about which the data is focused.</p>"},{"location":"api/latest/invenio_rest_api_client/models/location/#attributes","title":"Attributes","text":"Name Type Description Default features list['Feature'] A list of GeoJSON feature objects. None"},{"location":"api/latest/invenio_rest_api_client/models/location/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/location/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/location/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>features\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/location/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/location/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/metadata/","title":"Module invenio_rest_api_client.models.metadata","text":""},{"location":"api/latest/invenio_rest_api_client/models/metadata/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/metadata/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/metadata/#metadata","title":"Metadata","text":"<pre><code>class Metadata(\n    resource_type: 'ResourceType',\n    title: str,\n    publication_date: datetime.date,\n    creators: list['Creator'],\n    publisher: str,\n    additional_titles: Union[invenio_rest_api_client.types.Unset, list['AdditionalTitle']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    description: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    additional_descriptions: Union[invenio_rest_api_client.types.Unset, list['AdditionalDescription']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    rights: Union[invenio_rest_api_client.types.Unset, list['Right']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    copyright_: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    contributors: Union[invenio_rest_api_client.types.Unset, Any] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    subjects: Union[invenio_rest_api_client.types.Unset, list['Subject']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    languages: Union[invenio_rest_api_client.types.Unset, list['Lang']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    dates: Union[invenio_rest_api_client.types.Unset, list['Date']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    version: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifiers: Union[invenio_rest_api_client.types.Unset, list['AlternateIdentifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    related_identifiers: Union[invenio_rest_api_client.types.Unset, list['RelatedIdentifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    sizes: Union[invenio_rest_api_client.types.Unset, list[str]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    formats: Union[invenio_rest_api_client.types.Unset, list[str]] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    locations: Union[invenio_rest_api_client.types.Unset, list['Location']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    funding: Union[invenio_rest_api_client.types.Unset, list['Funding']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    references: Union[invenio_rest_api_client.types.Unset, list['Reference']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Metadata schema of bibliographic records in InvenioRDM.</p> <p>More informations can be found on InvenioRDM Official page: https://inveniordm.docs.cern.ch/reference/metadata/#metadata</p> <pre><code>Attributes:\n    resource_type (ResourceType): The type of the resource described by the record.\n    title (str): A primary name or primary title by which a resource is known.\n    publication_date (datetime.date): The date when the resource was or will be made publicly available.\n    creators (list['Creator']): The creators field registers those persons or organisations that should be credited\n        for the resource described by the record.\n    publisher (str): The name of the entity that holds, archives, publishes, prints, distributes, releases, issues,\n        or produces the resource.\n    additional_titles (Union[Unset, list['AdditionalTitle']]): Additional names or titles by which a resource is\n        known\n    description (Union[Unset, str]): The description of a record.\n    additional_descriptions (Union[Unset, list['AdditionalDescription']]): Additional descriptions in addition to\n        the primary description (e.g. abstracts in other languages), methods or further notes.\n    rights (Union[Unset, list['Right']]): Rights management statement for the resource.\n    copyright_ (Union[Unset, str]): The copyright field allows authors or depositors to specify a copyright\n        statement for the record.\n    contributors (Union[Unset, Any]): The organisations or persons responsible for collecting, managing,\n        distributing, or otherwise contributing to the development of the resource.\n    subjects (Union[Unset, list['Subject']]): Subject, keyword, classification code, or key phrase describing the\n        resource.\n    languages (Union[Unset, list['Lang']]): The languages of the resource.\n    dates (Union[Unset, list['Date']]): Different dates relevant to the resource.\n    version (Union[Unset, str]): The version number of the resource.\n    identifiers (Union[Unset, list['AlternateIdentifier']]): Persistent identifiers for the resource other than the\n        ones registered as system-managed internal or external persistent identifiers.\n    related_identifiers (Union[Unset, list['RelatedIdentifier']]): Identifiers of related resources.\n    sizes (Union[Unset, list[str]]): Size (e.g. bytes, pages, inches, etc.) or duration (extent), e.g. hours,\n        minutes, days, etc., of a resource.\n    formats (Union[Unset, list[str]]): Technical format of the resource.\n    locations (Union[Unset, list['Location']]): Spatial region or named place where the data was gathered or about\n        which the data is focused.\n    funding (Union[Unset, list['Funding']]): Information about financial support (funding) for the resource being\n        registered.\n    references (Union[Unset, list['Reference']]): A list of reference strings.\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/metadata/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/metadata/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/metadata/#instance-variables","title":"Instance variables","text":"<pre><code>additional_descriptions\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>additional_titles\n</code></pre> <pre><code>contributors\n</code></pre> <pre><code>copyright_\n</code></pre> <pre><code>creators\n</code></pre> <pre><code>dates\n</code></pre> <pre><code>description\n</code></pre> <pre><code>formats\n</code></pre> <pre><code>funding\n</code></pre> <pre><code>identifiers\n</code></pre> <pre><code>languages\n</code></pre> <pre><code>locations\n</code></pre> <pre><code>publication_date\n</code></pre> <pre><code>publisher\n</code></pre> <pre><code>references\n</code></pre> <pre><code>related_identifiers\n</code></pre> <pre><code>resource_type\n</code></pre> <pre><code>rights\n</code></pre> <pre><code>sizes\n</code></pre> <pre><code>subjects\n</code></pre> <pre><code>title\n</code></pre> <pre><code>version\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/metadata/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/metadata/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/","title":"Module invenio_rest_api_client.models.person_or_org","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#personororg","title":"PersonOrOrg","text":"<pre><code>class PersonOrOrg(\n    type_: invenio_rest_api_client.models.person_or_org_type.PersonOrOrgType,\n    given_name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    family_name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    name: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifiers: Union[invenio_rest_api_client.types.Unset, list['Identifier']] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>The person or organization.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#attributes","title":"Attributes","text":"Name Type Description Default type_ PersonOrOrgType The type of name. None given_name Union[Unset, str] Given name(s). None family_name Union[Unset, str] Family name. None name Union[Unset, str] The full name of the organisation.For a person, this field is generated from <code>given_name</code> and <code>family_name</code>. None identifiers Union[Unset, list['Identifier']] Person or organisation identifiers. None"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>family_name\n</code></pre> <pre><code>given_name\n</code></pre> <pre><code>identifiers\n</code></pre> <pre><code>name\n</code></pre> <pre><code>type_\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/","title":"Module invenio_rest_api_client.models.person_or_org_identifier_scheme","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#personororgidentifierscheme","title":"PersonOrOrgIdentifierScheme","text":"<pre><code>class PersonOrOrgIdentifierScheme(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#class-variables","title":"Class variables","text":"<pre><code>GND\n</code></pre> <pre><code>ISNI\n</code></pre> <pre><code>ORCID\n</code></pre> <pre><code>ROR\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_identifier_scheme/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/","title":"Module invenio_rest_api_client.models.person_or_org_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#personororgtype","title":"PersonOrOrgType","text":"<pre><code>class PersonOrOrgType(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#class-variables","title":"Class variables","text":"<pre><code>ORGANIZATIONAL\n</code></pre> <pre><code>PERSONAL\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/person_or_org_type/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/","title":"Module invenio_rest_api_client.models.pi_ds","text":""},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/#pids","title":"PIDs","text":"<pre><code>class PIDs(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/pi_ds/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/pid/","title":"Module invenio_rest_api_client.models.pid","text":""},{"location":"api/latest/invenio_rest_api_client/models/pid/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/pid/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/pid/#pid","title":"PID","text":"<pre><code>class PID(\n    identifier: Union[invenio_rest_api_client.types.Unset, Any] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    provider: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    client: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>An external persistent identifier object.</p>"},{"location":"api/latest/invenio_rest_api_client/models/pid/#attributes","title":"Attributes","text":"Name Type Description Default identifier Union[Unset, Any] An identifier. None provider Union[Unset, str] The provider of the persistent identifier. None client Union[Unset, str] Client identifier for the specific PID. None"},{"location":"api/latest/invenio_rest_api_client/models/pid/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/pid/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/pid/#instance-variables","title":"Instance variables","text":"<pre><code>client\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>provider\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/pid/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/pid/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/reference/","title":"Module invenio_rest_api_client.models.reference","text":""},{"location":"api/latest/invenio_rest_api_client/models/reference/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/reference/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/reference/#reference","title":"Reference","text":"<pre><code>class Reference(\n    reference: str,\n    scheme: Union[invenio_rest_api_client.types.Unset, invenio_rest_api_client.models.identifier_scheme.IdentifierScheme] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    identifier: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Reference string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/reference/#attributes","title":"Attributes","text":"Name Type Description Default reference str The full reference string. None scheme Union[Unset, IdentifierScheme] The scheme of the identifier None identifier Union[Unset, str] The identifier if known. None"},{"location":"api/latest/invenio_rest_api_client/models/reference/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/reference/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/reference/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>reference\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/reference/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/reference/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/","title":"Module invenio_rest_api_client.models.related_identifier","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#relatedidentifier","title":"RelatedIdentifier","text":"<pre><code>class RelatedIdentifier(\n    identifier: str,\n    scheme: invenio_rest_api_client.models.identifier_scheme.IdentifierScheme,\n    relation_type: 'RelationType',\n    resource_type: Union[invenio_rest_api_client.types.Unset, ForwardRef('RelatedIdentifierResourceType')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Identifier of related resources.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#attributes","title":"Attributes","text":"Name Type Description Default identifier str A global unique persistent identifier for a related resource. None scheme IdentifierScheme The scheme of the identifier None relation_type RelationType The relation of the record to this related resource. None resource_type Union[Unset, RelatedIdentifierResourceType] The resource type of the related resource None"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>identifier\n</code></pre> <pre><code>relation_type\n</code></pre> <pre><code>resource_type\n</code></pre> <pre><code>scheme\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/","title":"Module invenio_rest_api_client.models.related_identifier_resource_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#relatedidentifierresourcetype","title":"RelatedIdentifierResourceType","text":"<pre><code>class RelatedIdentifierResourceType(\n    id: invenio_rest_api_client.models.related_identifier_resource_type_id.RelatedIdentifierResourceTypeId,\n    title: 'RelatedIdentifierResourceTypeTitle'\n)\n</code></pre> <p>The resource type of the related resource</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#attributes","title":"Attributes","text":"Name Type Description Default id RelatedIdentifierResourceTypeId Date type id from the controlled vocabulary. None title RelatedIdentifierResourceTypeTitle The corresponding localized human readable label None"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/","title":"Module invenio_rest_api_client.models.related_identifier_resource_type_id","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#relatedidentifierresourcetypeid","title":"RelatedIdentifierResourceTypeId","text":"<pre><code>class RelatedIdentifierResourceTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#class-variables","title":"Class variables","text":"<pre><code>AUDIO\n</code></pre> <pre><code>DATASET\n</code></pre> <pre><code>EVENT\n</code></pre> <pre><code>IMAGE\n</code></pre> <pre><code>IMAGE_DIAGRAM\n</code></pre> <pre><code>IMAGE_DRAWING\n</code></pre> <pre><code>IMAGE_FIGURE\n</code></pre> <pre><code>IMAGE_OTHER\n</code></pre> <pre><code>IMAGE_PHOTO\n</code></pre> <pre><code>IMAGE_PLOT\n</code></pre> <pre><code>LESSON\n</code></pre> <pre><code>MODEL\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>PHYSICALOBJECT\n</code></pre> <pre><code>POSTER\n</code></pre> <pre><code>PRESENTATION\n</code></pre> <pre><code>PUBLICATION\n</code></pre> <pre><code>PUBLICATION_ANNOTATIONCOLLECTION\n</code></pre> <pre><code>PUBLICATION_ARTICLE\n</code></pre> <pre><code>PUBLICATION_BOOK\n</code></pre> <pre><code>PUBLICATION_CONFERENCEPAPER\n</code></pre> <pre><code>PUBLICATION_CONFERENCEPROCEEDING\n</code></pre> <pre><code>PUBLICATION_DATAMANAGEMENTPLAN\n</code></pre> <pre><code>PUBLICATION_DATAPAPER\n</code></pre> <pre><code>PUBLICATION_DELIVERABLE\n</code></pre> <pre><code>PUBLICATION_DISSERTATION\n</code></pre> <pre><code>PUBLICATION_JOURNAL\n</code></pre> <pre><code>PUBLICATION_MILESTONE\n</code></pre> <pre><code>PUBLICATION_OTHER\n</code></pre> <pre><code>PUBLICATION_PATENT\n</code></pre> <pre><code>PUBLICATION_PEERREVIEW\n</code></pre> <pre><code>PUBLICATION_PREPRINT\n</code></pre> <pre><code>PUBLICATION_PROPOSAL\n</code></pre> <pre><code>PUBLICATION_REPORT\n</code></pre> <pre><code>PUBLICATION_SECTION\n</code></pre> <pre><code>PUBLICATION_SOFTWAREDOCUMENTATION\n</code></pre> <pre><code>PUBLICATION_STANDARD\n</code></pre> <pre><code>PUBLICATION_TAXONOMICTREATMENT\n</code></pre> <pre><code>PUBLICATION_TECHNICALNOTE\n</code></pre> <pre><code>PUBLICATION_THESIS\n</code></pre> <pre><code>PUBLICATION_WORKINGPAPER\n</code></pre> <pre><code>SOFTWARE\n</code></pre> <pre><code>SOFTWARE_COMPUTATIONALNOTEBOOK\n</code></pre> <pre><code>VIDEO\n</code></pre> <pre><code>WORKFLOW\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_id/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/","title":"Module invenio_rest_api_client.models.related_identifier_resource_type_title","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/#relatedidentifierresourcetypetitle","title":"RelatedIdentifierResourceTypeTitle","text":"<pre><code>class RelatedIdentifierResourceTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label</p>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/related_identifier_resource_type_title/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type/","title":"Module invenio_rest_api_client.models.relation_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#relationtype","title":"RelationType","text":"<pre><code>class RelationType(\n    id: invenio_rest_api_client.models.relation_type_id.RelationTypeId,\n    title: 'RelationTypeTitle'\n)\n</code></pre> <p>The relation of the record to this related resource.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#attributes","title":"Attributes","text":"Name Type Description Default id RelationTypeId Relation type id from the controlled vocabulary None title RelationTypeTitle The corresponding localized human readable label None"},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/","title":"Module invenio_rest_api_client.models.relation_type_id","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#relationtypeid","title":"RelationTypeId","text":"<pre><code>class RelationTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#class-variables","title":"Class variables","text":"<pre><code>CITES\n</code></pre> <pre><code>COMPILES\n</code></pre> <pre><code>CONTINUES\n</code></pre> <pre><code>DESCRIBES\n</code></pre> <pre><code>DOCUMENTS\n</code></pre> <pre><code>HASMETADATA\n</code></pre> <pre><code>HASPART\n</code></pre> <pre><code>HASVERSION\n</code></pre> <pre><code>ISCITEDBY\n</code></pre> <pre><code>ISCOMPILEDBY\n</code></pre> <pre><code>ISCONTINUEDBY\n</code></pre> <pre><code>ISDERIVEDFROM\n</code></pre> <pre><code>ISDESCRIBEDBY\n</code></pre> <pre><code>ISDOCUMENTEDBY\n</code></pre> <pre><code>ISIDENTICALTO\n</code></pre> <pre><code>ISMETADATAFOR\n</code></pre> <pre><code>ISNEWVERSIONOF\n</code></pre> <pre><code>ISOBSOLETEDBY\n</code></pre> <pre><code>ISORIGINALFORMOF\n</code></pre> <pre><code>ISPARTOF\n</code></pre> <pre><code>ISPREVIOUSVERSIONOF\n</code></pre> <pre><code>ISPUBLISHEDIN\n</code></pre> <pre><code>ISREFERENCEDBY\n</code></pre> <pre><code>ISREQUIREDBY\n</code></pre> <pre><code>ISREVIEWEDBY\n</code></pre> <pre><code>ISSOURCEOF\n</code></pre> <pre><code>ISSUPPLEMENTEDBY\n</code></pre> <pre><code>ISSUPPLEMENTTO\n</code></pre> <pre><code>ISVARIANTFORMOF\n</code></pre> <pre><code>ISVERSIONOF\n</code></pre> <pre><code>OBSOLETES\n</code></pre> <pre><code>REFERENCES\n</code></pre> <pre><code>REQUIRES\n</code></pre> <pre><code>REVIEWS\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_id/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/","title":"Module invenio_rest_api_client.models.relation_type_title","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/#relationtypetitle","title":"RelationTypeTitle","text":"<pre><code>class RelationTypeTitle(\n\n)\n</code></pre> <p>The corresponding localized human readable label</p>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/relation_type_title/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/","title":"Module invenio_rest_api_client.models.remove_members_leave_community_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/#removemembersleavecommunityresponse200","title":"RemoveMembersLeaveCommunityResponse200","text":"<pre><code>class RemoveMembersLeaveCommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/remove_members_leave_community_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/","title":"Module invenio_rest_api_client.models.rename_a_community_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/#renameacommunitybody","title":"RenameACommunityBody","text":"<pre><code>class RenameACommunityBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/rename_a_community_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type/","title":"Module invenio_rest_api_client.models.resource_type","text":""},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#resourcetype","title":"ResourceType","text":"<pre><code>class ResourceType(\n    id: invenio_rest_api_client.models.resource_type_id.ResourceTypeId\n)\n</code></pre> <p>The type of the resource described by the record.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#attributes","title":"Attributes","text":"Name Type Description Default id ResourceTypeId The resource type id from the controlled vocabulary. None"},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/resource_type/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/","title":"Module invenio_rest_api_client.models.resource_type_id","text":""},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#resourcetypeid","title":"ResourceTypeId","text":"<pre><code>class ResourceTypeId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#class-variables","title":"Class variables","text":"<pre><code>AUDIO\n</code></pre> <pre><code>DATASET\n</code></pre> <pre><code>EVENT\n</code></pre> <pre><code>IMAGE\n</code></pre> <pre><code>IMAGE_DIAGRAM\n</code></pre> <pre><code>IMAGE_DRAWING\n</code></pre> <pre><code>IMAGE_FIGURE\n</code></pre> <pre><code>IMAGE_OTHER\n</code></pre> <pre><code>IMAGE_PHOTO\n</code></pre> <pre><code>IMAGE_PLOT\n</code></pre> <pre><code>LESSON\n</code></pre> <pre><code>MODEL\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>PHYSICALOBJECT\n</code></pre> <pre><code>POSTER\n</code></pre> <pre><code>PRESENTATION\n</code></pre> <pre><code>PUBLICATION\n</code></pre> <pre><code>PUBLICATION_ANNOTATIONCOLLECTION\n</code></pre> <pre><code>PUBLICATION_ARTICLE\n</code></pre> <pre><code>PUBLICATION_BOOK\n</code></pre> <pre><code>PUBLICATION_CONFERENCEPAPER\n</code></pre> <pre><code>PUBLICATION_CONFERENCEPROCEEDING\n</code></pre> <pre><code>PUBLICATION_DATAMANAGEMENTPLAN\n</code></pre> <pre><code>PUBLICATION_DATAPAPER\n</code></pre> <pre><code>PUBLICATION_DELIVERABLE\n</code></pre> <pre><code>PUBLICATION_DISSERTATION\n</code></pre> <pre><code>PUBLICATION_JOURNAL\n</code></pre> <pre><code>PUBLICATION_MILESTONE\n</code></pre> <pre><code>PUBLICATION_OTHER\n</code></pre> <pre><code>PUBLICATION_PATENT\n</code></pre> <pre><code>PUBLICATION_PEERREVIEW\n</code></pre> <pre><code>PUBLICATION_PREPRINT\n</code></pre> <pre><code>PUBLICATION_PROPOSAL\n</code></pre> <pre><code>PUBLICATION_REPORT\n</code></pre> <pre><code>PUBLICATION_SECTION\n</code></pre> <pre><code>PUBLICATION_SOFTWAREDOCUMENTATION\n</code></pre> <pre><code>PUBLICATION_STANDARD\n</code></pre> <pre><code>PUBLICATION_TAXONOMICTREATMENT\n</code></pre> <pre><code>PUBLICATION_TECHNICALNOTE\n</code></pre> <pre><code>PUBLICATION_THESIS\n</code></pre> <pre><code>PUBLICATION_WORKINGPAPER\n</code></pre> <pre><code>SOFTWARE\n</code></pre> <pre><code>SOFTWARE_COMPUTATIONALNOTEBOOK\n</code></pre> <pre><code>VIDEO\n</code></pre> <pre><code>WORKFLOW\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/resource_type_id/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/right/","title":"Module invenio_rest_api_client.models.right","text":""},{"location":"api/latest/invenio_rest_api_client/models/right/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/right/#right","title":"Right","text":"<pre><code>class Right(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    title: Union[invenio_rest_api_client.types.Unset, ForwardRef('RightTitle')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    description: Union[invenio_rest_api_client.types.Unset, ForwardRef('RightDescription')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    links: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Right management statement for the resource.</p>"},{"location":"api/latest/invenio_rest_api_client/models/right/#attributes","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] Identifier value. None title Union[Unset, RightTitle] Localized human readable title. None description Union[Unset, RightDescription] Localized license description text None links Union[Unset, str] Link to full license. None"},{"location":"api/latest/invenio_rest_api_client/models/right/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/right/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>description\n</code></pre> <pre><code>id\n</code></pre> <pre><code>links\n</code></pre> <pre><code>title\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/right/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right_description/","title":"Module invenio_rest_api_client.models.right_description","text":""},{"location":"api/latest/invenio_rest_api_client/models/right_description/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right_description/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/right_description/#rightdescription","title":"RightDescription","text":"<pre><code>class RightDescription(\n\n)\n</code></pre> <p>Localized license description text</p>"},{"location":"api/latest/invenio_rest_api_client/models/right_description/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/right_description/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right_description/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right_description/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/right_description/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right_title/","title":"Module invenio_rest_api_client.models.right_title","text":""},{"location":"api/latest/invenio_rest_api_client/models/right_title/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right_title/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/right_title/#righttitle","title":"RightTitle","text":"<pre><code>class RightTitle(\n\n)\n</code></pre> <p>Localized human readable title.</p>"},{"location":"api/latest/invenio_rest_api_client/models/right_title/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/right_title/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right_title/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/right_title/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/right_title/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/role/","title":"Module invenio_rest_api_client.models.role","text":""},{"location":"api/latest/invenio_rest_api_client/models/role/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/role/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/role/#role","title":"Role","text":"<pre><code>class Role(\n    id: invenio_rest_api_client.models.role_id.RoleId\n)\n</code></pre> <p>The role of the person or organisation selected from a customizable controlled vocabulary.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role/#attributes","title":"Attributes","text":"Name Type Description Default id RoleId The role's controlled vocabulary identifier. None"},{"location":"api/latest/invenio_rest_api_client/models/role/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/role/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/role/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/role/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/role/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/","title":"Module invenio_rest_api_client.models.role_id","text":""},{"location":"api/latest/invenio_rest_api_client/models/role_id/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/role_id/#roleid","title":"RoleId","text":"<pre><code>class RoleId(\n    *args,\n    **kwds\n)\n</code></pre> <p>str(object='') -&gt; str</p> <p>str(bytes_or_buffer[, encoding[, errors]]) -&gt; str</p> <p>Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object.str() (if defined) or repr(object). encoding defaults to 'utf-8'. errors defaults to 'strict'.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#ancestors-in-mro","title":"Ancestors (in MRO)","text":"<ul> <li>builtins.str</li> <li>enum.Enum</li> </ul>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#class-variables","title":"Class variables","text":"<pre><code>CONTACTPERSON\n</code></pre> <pre><code>DATACOLLECTOR\n</code></pre> <pre><code>DATACURATOR\n</code></pre> <pre><code>DATAMANAGER\n</code></pre> <pre><code>DISTRIBUTOR\n</code></pre> <pre><code>EDITOR\n</code></pre> <pre><code>HOSTINGINSTITUTION\n</code></pre> <pre><code>OTHER\n</code></pre> <pre><code>PRODUCER\n</code></pre> <pre><code>PROJECTLEADER\n</code></pre> <pre><code>PROJECTMANAGER\n</code></pre> <pre><code>PROJECTMEMBER\n</code></pre> <pre><code>REGISTRATIONAGENCY\n</code></pre> <pre><code>REGISTRATIONAUTHORITY\n</code></pre> <pre><code>RELATEDPERSON\n</code></pre> <pre><code>RESEARCHER\n</code></pre> <pre><code>RESEARCHGROUP\n</code></pre> <pre><code>RIGHTSHOLDER\n</code></pre> <pre><code>SPONSOR\n</code></pre> <pre><code>SUPERVISOR\n</code></pre> <pre><code>WORKPACKAGELEADER\n</code></pre> <pre><code>name\n</code></pre> <pre><code>value\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/role_id/#maketrans","title":"maketrans","text":"<pre><code>def maketrans(\n    ...\n)\n</code></pre> <p>Return a translation table usable for str.translate().</p> <p>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/role_id/#capitalize","title":"capitalize","text":"<pre><code>def capitalize(\n    self,\n    /\n)\n</code></pre> <p>Return a capitalized version of the string.</p> <p>More specifically, make the first character have upper case and the rest lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#casefold","title":"casefold","text":"<pre><code>def casefold(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string suitable for caseless comparisons.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#center","title":"center","text":"<pre><code>def center(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a centered string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#count","title":"count","text":"<pre><code>def count(\n    ...\n)\n</code></pre> <p>Return the number of non-overlapping occurrences of substring sub in string S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#encode","title":"encode","text":"<pre><code>def encode(\n    self,\n    /,\n    encoding='utf-8',\n    errors='strict'\n)\n</code></pre> <p>Encode the string using the codec registered for encoding.</p> <p>encoding   The encoding in which to encode the string. errors   The error handling scheme to use for encoding errors.   The default is 'strict' meaning that encoding errors raise a   UnicodeEncodeError.  Other possible values are 'ignore', 'replace' and   'xmlcharrefreplace' as well as any other name registered with   codecs.register_error that can handle UnicodeEncodeErrors.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#endswith","title":"endswith","text":"<pre><code>def endswith(\n    ...\n)\n</code></pre> <p>Return True if the string ends with the specified suffix, False otherwise.</p> <p>suffix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#expandtabs","title":"expandtabs","text":"<pre><code>def expandtabs(\n    self,\n    /,\n    tabsize=8\n)\n</code></pre> <p>Return a copy where all tab characters are expanded using spaces.</p> <p>If tabsize is not given, a tab size of 8 characters is assumed.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#find","title":"find","text":"<pre><code>def find(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#format","title":"format","text":"<pre><code>def format(\n    self,\n    /,\n    *args,\n    **kwargs\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from args and kwargs.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#format_map","title":"format_map","text":"<pre><code>def format_map(\n    self,\n    mapping,\n    /\n)\n</code></pre> <p>Return a formatted version of the string, using substitutions from mapping.</p> <p>The substitutions are identified by braces ('{' and '}').</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#index","title":"index","text":"<pre><code>def index(\n    ...\n)\n</code></pre> <p>Return the lowest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isalnum","title":"isalnum","text":"<pre><code>def isalnum(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alpha-numeric string, False otherwise.</p> <p>A string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isalpha","title":"isalpha","text":"<pre><code>def isalpha(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an alphabetic string, False otherwise.</p> <p>A string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isascii","title":"isascii","text":"<pre><code>def isascii(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are ASCII, False otherwise.</p> <p>ASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isdecimal","title":"isdecimal","text":"<pre><code>def isdecimal(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a decimal string, False otherwise.</p> <p>A string is a decimal string if all characters in the string are decimal and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isdigit","title":"isdigit","text":"<pre><code>def isdigit(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a digit string, False otherwise.</p> <p>A string is a digit string if all characters in the string are digits and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isidentifier","title":"isidentifier","text":"<pre><code>def isidentifier(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a valid Python identifier, False otherwise.</p> <p>Call keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \"def\" or \"class\".</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#islower","title":"islower","text":"<pre><code>def islower(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a lowercase string, False otherwise.</p> <p>A string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isnumeric","title":"isnumeric","text":"<pre><code>def isnumeric(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a numeric string, False otherwise.</p> <p>A string is numeric if all characters in the string are numeric and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isprintable","title":"isprintable","text":"<pre><code>def isprintable(\n    self,\n    /\n)\n</code></pre> <p>Return True if all characters in the string are printable, False otherwise.</p> <p>A character is printable if repr() may use it in its output.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isspace","title":"isspace","text":"<pre><code>def isspace(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a whitespace string, False otherwise.</p> <p>A string is whitespace if all characters in the string are whitespace and there is at least one character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#istitle","title":"istitle","text":"<pre><code>def istitle(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is a title-cased string, False otherwise.</p> <p>In a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#isupper","title":"isupper","text":"<pre><code>def isupper(\n    self,\n    /\n)\n</code></pre> <p>Return True if the string is an uppercase string, False otherwise.</p> <p>A string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#join","title":"join","text":"<pre><code>def join(\n    self,\n    iterable,\n    /\n)\n</code></pre> <p>Concatenate any number of strings.</p> <p>The string whose method is called is inserted in between each given string. The result is returned as a new string.</p> <p>Example: '.'.join(['ab', 'pq', 'rs']) -&gt; 'ab.pq.rs'</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#ljust","title":"ljust","text":"<pre><code>def ljust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a left-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#lower","title":"lower","text":"<pre><code>def lower(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to lowercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#lstrip","title":"lstrip","text":"<pre><code>def lstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#partition","title":"partition","text":"<pre><code>def partition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string.  If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing the original string and two empty strings.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#removeprefix","title":"removeprefix","text":"<pre><code>def removeprefix(\n    self,\n    prefix,\n    /\n)\n</code></pre> <p>Return a str with the given prefix string removed if present.</p> <p>If the string starts with the prefix string, return string[len(prefix):]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#removesuffix","title":"removesuffix","text":"<pre><code>def removesuffix(\n    self,\n    suffix,\n    /\n)\n</code></pre> <p>Return a str with the given suffix string removed if present.</p> <p>If the string ends with the suffix string and that suffix is not empty, return string[:-len(suffix)]. Otherwise, return a copy of the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#replace","title":"replace","text":"<pre><code>def replace(\n    self,\n    old,\n    new,\n    /,\n    count=-1\n)\n</code></pre> <p>Return a copy with all occurrences of substring old replaced by new.</p> <p>count     Maximum number of occurrences to replace.     -1 (the default value) means replace all occurrences.</p> <p>If the optional argument count is given, only the first count occurrences are replaced.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#rfind","title":"rfind","text":"<pre><code>def rfind(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Return -1 on failure.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#rindex","title":"rindex","text":"<pre><code>def rindex(\n    ...\n)\n</code></pre> <p>Return the highest index in S where substring sub is found, such that sub is contained within S[start:end].</p> <p>Optional arguments start and end are interpreted as in slice notation. Raises ValueError when the substring is not found.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#rjust","title":"rjust","text":"<pre><code>def rjust(\n    self,\n    width,\n    fillchar=' ',\n    /\n)\n</code></pre> <p>Return a right-justified string of length width.</p> <p>Padding is done using the specified fill character (default is a space).</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#rpartition","title":"rpartition","text":"<pre><code>def rpartition(\n    self,\n    sep,\n    /\n)\n</code></pre> <p>Partition the string into three parts using the given separator.</p> <p>This will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.</p> <p>If the separator is not found, returns a 3-tuple containing two empty strings and the original string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#rsplit","title":"rsplit","text":"<pre><code>def rsplit(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the end of the string and works to the front.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#rstrip","title":"rstrip","text":"<pre><code>def rstrip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#split","title":"split","text":"<pre><code>def split(\n    self,\n    /,\n    sep=None,\n    maxsplit=-1\n)\n</code></pre> <p>Return a list of the substrings in the string, using sep as the separator string.</p> <p>sep     The separator used to split the string.</p> <pre><code>When set to None (the default value), will split on any whitespace\ncharacter (including \\n \\r \\t \\f and spaces) and will discard\nempty strings from the result.\n</code></pre> <p>maxsplit     Maximum number of splits.     -1 (the default value) means no limit.</p> <p>Splitting starts at the front of the string and works to the end.</p> <p>Note, str.split() is mainly useful for data that has been intentionally delimited.  With natural text that includes punctuation, consider using the regular expression module.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#splitlines","title":"splitlines","text":"<pre><code>def splitlines(\n    self,\n    /,\n    keepends=False\n)\n</code></pre> <p>Return a list of the lines in the string, breaking at line boundaries.</p> <p>Line breaks are not included in the resulting list unless keepends is given and true.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#startswith","title":"startswith","text":"<pre><code>def startswith(\n    ...\n)\n</code></pre> <p>Return True if the string starts with the specified prefix, False otherwise.</p> <p>prefix   A string or a tuple of strings to try. start   Optional start position. Default: start of the string. end   Optional stop position. Default: end of the string.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#strip","title":"strip","text":"<pre><code>def strip(\n    self,\n    chars=None,\n    /\n)\n</code></pre> <p>Return a copy of the string with leading and trailing whitespace removed.</p> <p>If chars is given and not None, remove characters in chars instead.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#swapcase","title":"swapcase","text":"<pre><code>def swapcase(\n    self,\n    /\n)\n</code></pre> <p>Convert uppercase characters to lowercase and lowercase characters to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#title","title":"title","text":"<pre><code>def title(\n    self,\n    /\n)\n</code></pre> <p>Return a version of the string where each word is titlecased.</p> <p>More specifically, words start with uppercased characters and all remaining cased characters have lower case.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#translate","title":"translate","text":"<pre><code>def translate(\n    self,\n    table,\n    /\n)\n</code></pre> <p>Replace each character in the string using the given translation table.</p> <p>table     Translation table, which must be a mapping of Unicode ordinals to     Unicode ordinals, strings, or None.</p> <p>The table must implement lookup/indexing via getitem, for instance a dictionary or list.  If this operation raises LookupError, the character is left untouched.  Characters mapped to None are deleted.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#upper","title":"upper","text":"<pre><code>def upper(\n    self,\n    /\n)\n</code></pre> <p>Return a copy of the string converted to uppercase.</p>"},{"location":"api/latest/invenio_rest_api_client/models/role_id/#zfill","title":"zfill","text":"<pre><code>def zfill(\n    self,\n    width,\n    /\n)\n</code></pre> <p>Pad a numeric string with zeros on the left, to fill a field of the given width.</p> <p>The string is never truncated.</p>"},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/","title":"Module invenio_rest_api_client.models.search_communities_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/#searchcommunitiesresponse200","title":"SearchCommunitiesResponse200","text":"<pre><code>class SearchCommunitiesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_communities_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/","title":"Module invenio_rest_api_client.models.search_featured_communities_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/#searchfeaturedcommunitiesresponse200","title":"SearchFeaturedCommunitiesResponse200","text":"<pre><code>class SearchFeaturedCommunitiesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_featured_communities_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/","title":"Module invenio_rest_api_client.models.search_groups_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/#searchgroupsresponse200","title":"SearchGroupsResponse200","text":"<pre><code>class SearchGroupsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_groups_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/","title":"Module invenio_rest_api_client.models.search_invitations_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/#searchinvitationsresponse200","title":"SearchInvitationsResponse200","text":"<pre><code>class SearchInvitationsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_invitations_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/","title":"Module invenio_rest_api_client.models.search_members_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/#searchmembersresponse200","title":"SearchMembersResponse200","text":"<pre><code>class SearchMembersResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_members_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/","title":"Module invenio_rest_api_client.models.search_public_members_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/#searchpublicmembersresponse200","title":"SearchPublicMembersResponse200","text":"<pre><code>class SearchPublicMembersResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_public_members_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/","title":"Module invenio_rest_api_client.models.search_records_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/#searchrecordsresponse200","title":"SearchRecordsResponse200","text":"<pre><code>class SearchRecordsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_records_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/","title":"Module invenio_rest_api_client.models.search_requests_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/#searchrequestsresponse200","title":"SearchRequestsResponse200","text":"<pre><code>class SearchRequestsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_requests_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/","title":"Module invenio_rest_api_client.models.search_sets_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/#searchsetsresponse200","title":"SearchSetsResponse200","text":"<pre><code>class SearchSetsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_sets_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/","title":"Module invenio_rest_api_client.models.search_user_communities_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/#searchusercommunitiesresponse200","title":"SearchUserCommunitiesResponse200","text":"<pre><code>class SearchUserCommunitiesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_user_communities_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/","title":"Module invenio_rest_api_client.models.search_vocabularies_languages_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/#searchvocabularieslanguagesresponse200","title":"SearchVocabulariesLanguagesResponse200","text":"<pre><code>class SearchVocabulariesLanguagesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_languages_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/","title":"Module invenio_rest_api_client.models.search_vocabularies_licenses_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/#searchvocabularieslicensesresponse200","title":"SearchVocabulariesLicensesResponse200","text":"<pre><code>class SearchVocabulariesLicensesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_licenses_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/","title":"Module invenio_rest_api_client.models.search_vocabularies_relationtypes_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/#searchvocabulariesrelationtypesresponse200","title":"SearchVocabulariesRelationtypesResponse200","text":"<pre><code>class SearchVocabulariesRelationtypesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_relationtypes_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/","title":"Module invenio_rest_api_client.models.search_vocabularies_resourcetypes_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/#searchvocabulariesresourcetypesresponse200","title":"SearchVocabulariesResourcetypesResponse200","text":"<pre><code>class SearchVocabulariesResourcetypesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_resourcetypes_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/","title":"Module invenio_rest_api_client.models.search_vocabularies_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/#searchvocabulariesresponse200","title":"SearchVocabulariesResponse200","text":"<pre><code>class SearchVocabulariesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/search_vocabularies_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/","title":"Module invenio_rest_api_client.models.specific_vocabularies_affiliations_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/#specificvocabulariesaffiliationsbyidresponse200","title":"SpecificVocabulariesAffiliationsByIdResponse200","text":"<pre><code>class SpecificVocabulariesAffiliationsByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/","title":"Module invenio_rest_api_client.models.specific_vocabularies_affiliations_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/#specificvocabulariesaffiliationsresponse200","title":"SpecificVocabulariesAffiliationsResponse200","text":"<pre><code>class SpecificVocabulariesAffiliationsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_affiliations_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/","title":"Module invenio_rest_api_client.models.specific_vocabularies_awards_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/#specificvocabulariesawardsbyidresponse200","title":"SpecificVocabulariesAwardsByIdResponse200","text":"<pre><code>class SpecificVocabulariesAwardsByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/","title":"Module invenio_rest_api_client.models.specific_vocabularies_awards_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/#specificvocabulariesawardsresponse200","title":"SpecificVocabulariesAwardsResponse200","text":"<pre><code>class SpecificVocabulariesAwardsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_awards_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/","title":"Module invenio_rest_api_client.models.specific_vocabularies_funders_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/#specificvocabulariesfundersbyidresponse200","title":"SpecificVocabulariesFundersByIdResponse200","text":"<pre><code>class SpecificVocabulariesFundersByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/","title":"Module invenio_rest_api_client.models.specific_vocabularies_funders_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/#specificvocabulariesfundersresponse200","title":"SpecificVocabulariesFundersResponse200","text":"<pre><code>class SpecificVocabulariesFundersResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_funders_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/","title":"Module invenio_rest_api_client.models.specific_vocabularies_subjects_by_id_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/#specificvocabulariessubjectsbyidresponse200","title":"SpecificVocabulariesSubjectsByIdResponse200","text":"<pre><code>class SpecificVocabulariesSubjectsByIdResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_by_id_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/","title":"Module invenio_rest_api_client.models.specific_vocabularies_subjects_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/#specificvocabulariessubjectsresponse200","title":"SpecificVocabulariesSubjectsResponse200","text":"<pre><code>class SpecificVocabulariesSubjectsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/specific_vocabularies_subjects_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/","title":"Module invenio_rest_api_client.models.step_2_upload_a_draft_files_content_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/#step2uploadadraftfilescontentresponse200","title":"Step2UploadADraftFilesContentResponse200","text":"<pre><code>class Step2UploadADraftFilesContentResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/step_2_upload_a_draft_files_content_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/subject/","title":"Module invenio_rest_api_client.models.subject","text":""},{"location":"api/latest/invenio_rest_api_client/models/subject/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/subject/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/subject/#subject","title":"Subject","text":"<pre><code>class Subject(\n    id: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    subject: Union[invenio_rest_api_client.types.Unset, str] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Subject, keyword, classification code, or key phrase describing the resource.</p>"},{"location":"api/latest/invenio_rest_api_client/models/subject/#attributes","title":"Attributes","text":"Name Type Description Default id Union[Unset, str] The identifier of the subject from the controlled vocabulary. None subject Union[Unset, str] A custom keyword. None"},{"location":"api/latest/invenio_rest_api_client/models/subject/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/subject/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/subject/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>id\n</code></pre> <pre><code>subject\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/subject/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/subject/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/","title":"Module invenio_rest_api_client.models.submit_a_comment_on_a_request_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/#submitacommentonarequestbody","title":"SubmitACommentOnARequestBody","text":"<pre><code>class SubmitACommentOnARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/submit_a_comment_on_a_request_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/","title":"Module invenio_rest_api_client.models.submit_a_record_for_review_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/#submitarecordforreviewbody","title":"SubmitARecordForReviewBody","text":"<pre><code>class SubmitARecordForReviewBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/submit_a_record_for_review_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/","title":"Module invenio_rest_api_client.models.update_a_comment_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/#updateacommentbody","title":"UpdateACommentBody","text":"<pre><code>class UpdateACommentBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/","title":"Module invenio_rest_api_client.models.update_a_comment_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/#updateacommentresponse200","title":"UpdateACommentResponse200","text":"<pre><code>class UpdateACommentResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_comment_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/","title":"Module invenio_rest_api_client.models.update_a_community_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/#updateacommunitybody","title":"UpdateACommunityBody","text":"<pre><code>class UpdateACommunityBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/","title":"Module invenio_rest_api_client.models.update_a_community_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/#updateacommunityresponse200","title":"UpdateACommunityResponse200","text":"<pre><code>class UpdateACommunityResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_community_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/","title":"Module invenio_rest_api_client.models.update_a_draft_record_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/#updateadraftrecordresponse200","title":"UpdateADraftRecordResponse200","text":"<pre><code>class UpdateADraftRecordResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_draft_record_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/","title":"Module invenio_rest_api_client.models.update_a_featured_community_entry_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/#updateafeaturedcommunityentrybody","title":"UpdateAFeaturedCommunityEntryBody","text":"<pre><code>class UpdateAFeaturedCommunityEntryBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/","title":"Module invenio_rest_api_client.models.update_a_featured_community_entry_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/#updateafeaturedcommunityentryresponse200","title":"UpdateAFeaturedCommunityEntryResponse200","text":"<pre><code>class UpdateAFeaturedCommunityEntryResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_featured_community_entry_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/","title":"Module invenio_rest_api_client.models.update_a_request_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/#updatearequestbody","title":"UpdateARequestBody","text":"<pre><code>class UpdateARequestBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/","title":"Module invenio_rest_api_client.models.update_a_request_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/#updatearequestresponse200","title":"UpdateARequestResponse200","text":"<pre><code>class UpdateARequestResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_request_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/","title":"Module invenio_rest_api_client.models.update_a_set_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/#updateasetbody","title":"UpdateASetBody","text":"<pre><code>class UpdateASetBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/","title":"Module invenio_rest_api_client.models.update_a_set_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/#updateasetresponse200","title":"UpdateASetResponse200","text":"<pre><code>class UpdateASetResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_a_set_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/","title":"Module invenio_rest_api_client.models.update_an_access_link_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/#updateanaccesslinkbody","title":"UpdateAnAccessLinkBody","text":"<pre><code>class UpdateAnAccessLinkBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/","title":"Module invenio_rest_api_client.models.update_an_access_link_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/#updateanaccesslinkresponse200","title":"UpdateAnAccessLinkResponse200","text":"<pre><code>class UpdateAnAccessLinkResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_an_access_link_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/","title":"Module invenio_rest_api_client.models.update_community_logo_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/#updatecommunitylogoresponse200","title":"UpdateCommunityLogoResponse200","text":"<pre><code>class UpdateCommunityLogoResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_community_logo_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/","title":"Module invenio_rest_api_client.models.update_draft_record","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/#variables","title":"Variables","text":"<pre><code>T\n</code></pre> <pre><code>TYPE_CHECKING\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/#updatedraftrecord","title":"UpdateDraftRecord","text":"<pre><code>class UpdateDraftRecord(\n    access: Union[invenio_rest_api_client.types.Unset, ForwardRef('Access')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    files: Union[invenio_rest_api_client.types.Unset, ForwardRef('Files')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    metadata: Union[invenio_rest_api_client.types.Unset, ForwardRef('Metadata')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    custom_fields: Union[invenio_rest_api_client.types.Unset, ForwardRef('CustomFields')] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>access (Union[Unset, Access]): Denotes record-specific read (visibility) options.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#access\n</code></pre> <p>files (Union[Unset, Files]): Files options for the record.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/rest_api_drafts_records/#files-options\n</code></pre> <p>metadata (Union[Unset, Metadata]): Metadata schema of bibliographic records in InvenioRDM.</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/reference/metadata/#metadata\n</code></pre> <p>custom_fields (Union[Unset, CustomFields]): Custom fields metadata for the record. (v10 and newer).</p> <pre><code>More informations can be found on InvenioRDM Official page:\nhttps://inveniordm.docs.cern.ch/operate/customize/metadata/custom_fields/records/#declaring-custom-fields\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/#instance-variables","title":"Instance variables","text":"<pre><code>access\n</code></pre> <pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>custom_fields\n</code></pre> <pre><code>files\n</code></pre> <pre><code>metadata\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_draft_record/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/","title":"Module invenio_rest_api_client.models.update_invitations_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/#updateinvitationsbody","title":"UpdateInvitationsBody","text":"<pre><code>class UpdateInvitationsBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/","title":"Module invenio_rest_api_client.models.update_invitations_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/#updateinvitationsresponse200","title":"UpdateInvitationsResponse200","text":"<pre><code>class UpdateInvitationsResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_invitations_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/","title":"Module invenio_rest_api_client.models.update_members_body","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/#updatemembersbody","title":"UpdateMembersBody","text":"<pre><code>class UpdateMembersBody(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_members_body/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/","title":"Module invenio_rest_api_client.models.update_members_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/#updatemembersresponse200","title":"UpdateMembersResponse200","text":"<pre><code>class UpdateMembersResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/update_members_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/version/","title":"Module invenio_rest_api_client.models.version","text":""},{"location":"api/latest/invenio_rest_api_client/models/version/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/version/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/version/#version","title":"Version","text":"<pre><code>class Version(\n    index: Union[invenio_rest_api_client.types.Unset, int] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_latest: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;,\n    is_latest_draft: Union[invenio_rest_api_client.types.Unset, bool] = &lt;invenio_rest_api_client.types.Unset object at 0x7f610e774ad0&gt;\n)\n</code></pre> <p>Attributes:</p> <p>index (Union[Unset, int]): is_latest (Union[Unset, bool]): is_latest_draft (Union[Unset, bool]):</p>"},{"location":"api/latest/invenio_rest_api_client/models/version/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/version/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/version/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre> <pre><code>index\n</code></pre> <pre><code>is_latest\n</code></pre> <pre><code>is_latest_draft\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/version/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/version/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/","title":"Module invenio_rest_api_client.models.vocabularies_contributorsroles_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/#vocabulariescontributorsrolesresponse200","title":"VocabulariesContributorsrolesResponse200","text":"<pre><code>class VocabulariesContributorsrolesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_contributorsroles_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/","title":"Module invenio_rest_api_client.models.vocabularies_creatorsroles_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/#vocabulariescreatorsrolesresponse200","title":"VocabulariesCreatorsrolesResponse200","text":"<pre><code>class VocabulariesCreatorsrolesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_creatorsroles_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/","title":"Module invenio_rest_api_client.models.vocabularies_datetypes_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/#vocabulariesdatetypesresponse200","title":"VocabulariesDatetypesResponse200","text":"<pre><code>class VocabulariesDatetypesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_datetypes_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/","title":"Module invenio_rest_api_client.models.vocabularies_descriptiontypes_response_200","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/#variables","title":"Variables","text":"<pre><code>T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/#classes","title":"Classes","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/#vocabulariesdescriptiontypesresponse200","title":"VocabulariesDescriptiontypesResponse200","text":"<pre><code>class VocabulariesDescriptiontypesResponse200(\n\n)\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/#static-methods","title":"Static methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/#from_dict","title":"from_dict","text":"<pre><code>def from_dict(\n    src_dict: collections.abc.Mapping[str, typing.Any]\n) -&gt; ~T\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/#instance-variables","title":"Instance variables","text":"<pre><code>additional_keys\n</code></pre> <pre><code>additional_properties\n</code></pre>"},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/#methods","title":"Methods","text":""},{"location":"api/latest/invenio_rest_api_client/models/vocabularies_descriptiontypes_response_200/#to_dict","title":"to_dict","text":"<pre><code>def to_dict(\n    self\n) -&gt; dict[str, typing.Any]\n</code></pre>"}]}